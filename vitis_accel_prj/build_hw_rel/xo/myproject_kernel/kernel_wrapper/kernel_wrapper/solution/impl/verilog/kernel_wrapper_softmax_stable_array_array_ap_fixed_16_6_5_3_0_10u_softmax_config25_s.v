// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        layer23_out_dout,
        layer23_out_num_data_valid,
        layer23_out_fifo_cap,
        layer23_out_empty_n,
        layer23_out_read,
        output_r_din,
        output_r_num_data_valid,
        output_r_fifo_cap,
        output_r_full_n,
        output_r_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [159:0] layer23_out_dout;
input  [1:0] layer23_out_num_data_valid;
input  [1:0] layer23_out_fifo_cap;
input   layer23_out_empty_n;
output   layer23_out_read;
output  [159:0] output_r_din;
input  [1:0] output_r_num_data_valid;
input  [1:0] output_r_fifo_cap;
input   output_r_full_n;
output   output_r_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg layer23_out_read;
reg output_r_write;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] exp_table_address0;
reg    exp_table_ce0;
wire   [16:0] exp_table_q0;
reg   [9:0] exp_table_address1;
reg    exp_table_ce1;
wire   [16:0] exp_table_q1;
wire   [9:0] exp_table_address2;
reg    exp_table_ce2;
wire   [16:0] exp_table_q2;
wire   [9:0] exp_table_address3;
reg    exp_table_ce3;
wire   [16:0] exp_table_q3;
wire   [9:0] exp_table_address4;
reg    exp_table_ce4;
wire   [16:0] exp_table_q4;
wire   [9:0] exp_table_address5;
reg    exp_table_ce5;
wire   [16:0] exp_table_q5;
wire   [9:0] exp_table_address6;
reg    exp_table_ce6;
wire   [16:0] exp_table_q6;
wire   [9:0] exp_table_address7;
reg    exp_table_ce7;
wire   [16:0] exp_table_q7;
wire   [9:0] invert_table_address0;
reg    invert_table_ce0;
wire   [17:0] invert_table_q0;
reg    layer23_out_blk_n;
reg    output_r_blk_n;
wire    ap_CS_fsm_state8;
wire  signed [15:0] data_array_V_fu_642_p1;
reg  signed [15:0] data_array_V_reg_2414;
reg  signed [15:0] data_array_V_8_reg_2419;
reg  signed [15:0] data_array_V_9_reg_2426;
wire  signed [15:0] data_array_V_1_fu_666_p4;
reg  signed [15:0] data_array_V_1_reg_2433;
wire  signed [15:0] data_array_V_2_fu_676_p4;
reg  signed [15:0] data_array_V_2_reg_2438;
wire  signed [15:0] data_array_V_3_fu_686_p4;
reg  signed [15:0] data_array_V_3_reg_2443;
wire  signed [15:0] data_array_V_4_fu_696_p4;
reg  signed [15:0] data_array_V_4_reg_2448;
wire  signed [15:0] data_array_V_5_fu_706_p4;
reg  signed [15:0] data_array_V_5_reg_2453;
wire  signed [15:0] data_array_V_6_fu_716_p4;
reg  signed [15:0] data_array_V_6_reg_2458;
wire  signed [15:0] data_array_V_7_fu_726_p4;
reg  signed [15:0] data_array_V_7_reg_2463;
wire   [15:0] select_ln65_2_fu_788_p3;
reg   [15:0] select_ln65_2_reg_2468;
wire   [15:0] select_ln65_5_fu_848_p3;
reg   [15:0] select_ln65_5_reg_2474;
wire   [9:0] p_Result_s_fu_1360_p3;
reg   [9:0] p_Result_s_reg_2480;
wire    ap_CS_fsm_state2;
wire   [9:0] p_Result_21_fu_1386_p3;
reg   [9:0] p_Result_21_reg_2485;
wire   [9:0] p_Result_22_fu_1412_p3;
reg   [9:0] p_Result_22_reg_2490;
wire   [9:0] p_Result_23_fu_1438_p3;
reg   [9:0] p_Result_23_reg_2495;
wire   [9:0] p_Result_24_fu_1464_p3;
reg   [9:0] p_Result_24_reg_2500;
wire   [9:0] p_Result_25_fu_1490_p3;
reg   [9:0] p_Result_25_reg_2505;
wire   [9:0] p_Result_26_fu_1516_p3;
reg   [9:0] p_Result_26_reg_2510;
wire   [9:0] p_Result_27_fu_1542_p3;
reg   [9:0] p_Result_27_reg_2515;
wire   [9:0] p_Result_28_fu_1568_p3;
reg   [9:0] p_Result_28_reg_2520;
wire   [9:0] p_Result_29_fu_1594_p3;
reg   [9:0] p_Result_29_reg_2525;
wire    ap_CS_fsm_state3;
reg   [16:0] exp_res_V_reg_2570;
wire    ap_CS_fsm_state4;
reg   [16:0] exp_res_V_10_reg_2576;
reg   [16:0] exp_res_V_11_reg_2582;
reg   [16:0] exp_res_V_12_reg_2588;
reg   [16:0] exp_res_V_13_reg_2594;
reg   [16:0] exp_res_V_14_reg_2600;
reg   [16:0] exp_res_V_15_reg_2606;
reg   [16:0] exp_res_V_16_reg_2612;
reg   [16:0] exp_res_V_17_reg_2628;
wire    ap_CS_fsm_state5;
reg   [16:0] exp_res_V_18_reg_2633;
wire  signed [17:0] lhs_7_fu_2092_p3;
reg  signed [17:0] lhs_7_reg_2638;
wire   [16:0] rhs_7_fu_2120_p3;
reg   [16:0] rhs_7_reg_2644;
wire    ap_CS_fsm_state6;
reg   [15:0] out_pack_data_reg_2655;
wire    ap_CS_fsm_state7;
reg   [15:0] trunc_ln1_reg_2660;
reg   [15:0] trunc_ln818_1_reg_2665;
reg   [15:0] tmp_10_reg_2670;
reg   [15:0] tmp_11_reg_2675;
reg   [15:0] tmp_12_reg_2680;
reg   [15:0] tmp_13_reg_2685;
reg   [15:0] tmp_14_reg_2690;
reg   [15:0] tmp_15_reg_2695;
reg   [15:0] tmp_16_reg_2700;
wire   [63:0] zext_ln225_fu_1602_p1;
wire   [63:0] zext_ln225_1_fu_1606_p1;
wire   [63:0] zext_ln225_2_fu_1610_p1;
wire   [63:0] zext_ln225_3_fu_1614_p1;
wire   [63:0] zext_ln225_4_fu_1618_p1;
wire   [63:0] zext_ln225_5_fu_1622_p1;
wire   [63:0] zext_ln225_6_fu_1626_p1;
wire   [63:0] zext_ln225_7_fu_1630_p1;
wire   [63:0] zext_ln225_8_fu_1634_p1;
wire   [63:0] zext_ln225_9_fu_1638_p1;
wire   [63:0] zext_ln235_fu_2240_p1;
reg    ap_block_state1;
wire  signed [17:0] mul_ln1270_fu_271_p0;
wire  signed [25:0] sext_ln1273_fu_2245_p1;
wire   [16:0] mul_ln1270_fu_271_p1;
wire  signed [17:0] mul_ln1270_2_fu_272_p0;
wire   [16:0] mul_ln1270_2_fu_272_p1;
wire  signed [17:0] mul_ln1270_4_fu_273_p0;
wire   [16:0] mul_ln1270_4_fu_273_p1;
wire  signed [17:0] mul_ln1270_6_fu_274_p0;
wire   [16:0] mul_ln1270_6_fu_274_p1;
wire  signed [17:0] mul_ln1270_3_fu_275_p0;
wire   [16:0] mul_ln1270_3_fu_275_p1;
wire  signed [17:0] mul_ln1270_7_fu_276_p0;
wire   [16:0] mul_ln1270_7_fu_276_p1;
wire  signed [17:0] mul_ln1270_5_fu_277_p0;
wire   [16:0] mul_ln1270_5_fu_277_p1;
wire  signed [17:0] mul_ln1270_1_fu_278_p0;
wire   [16:0] mul_ln1270_1_fu_278_p1;
wire  signed [17:0] mul_ln1270_8_fu_279_p0;
wire   [16:0] mul_ln1270_8_fu_279_p1;
wire  signed [17:0] mul_ln1270_9_fu_280_p0;
wire   [16:0] mul_ln1270_9_fu_280_p1;
wire   [0:0] icmp_ln1651_fu_736_p2;
wire   [0:0] xor_ln1651_fu_742_p2;
wire   [0:0] icmp_ln1651_1_fu_756_p2;
wire   [0:0] xor_ln1651_1_fu_762_p2;
wire   [15:0] select_ln65_fu_748_p3;
wire   [15:0] select_ln65_1_fu_768_p3;
wire   [0:0] icmp_ln1651_2_fu_776_p2;
wire   [0:0] xor_ln1651_2_fu_782_p2;
wire   [0:0] icmp_ln1651_3_fu_796_p2;
wire   [0:0] xor_ln1651_3_fu_802_p2;
wire   [0:0] icmp_ln1651_4_fu_816_p2;
wire   [0:0] xor_ln1651_4_fu_822_p2;
wire   [15:0] select_ln65_3_fu_808_p3;
wire   [15:0] select_ln65_4_fu_828_p3;
wire   [0:0] icmp_ln1651_5_fu_836_p2;
wire   [0:0] xor_ln1651_5_fu_842_p2;
wire   [0:0] icmp_ln1651_6_fu_856_p2;
wire   [0:0] xor_ln1651_6_fu_860_p2;
wire   [0:0] icmp_ln1651_7_fu_872_p2;
wire   [0:0] xor_ln1651_7_fu_876_p2;
wire   [15:0] select_ln65_6_fu_866_p3;
wire   [15:0] select_ln65_7_fu_882_p3;
wire   [0:0] icmp_ln1651_8_fu_888_p2;
wire   [0:0] xor_ln1651_8_fu_894_p2;
wire   [15:0] x_max_V_fu_900_p3;
wire  signed [16:0] sext_ln1348_fu_908_p1;
wire  signed [16:0] sext_ln1348_1_fu_911_p1;
wire   [16:0] ret_V_fu_915_p2;
wire   [0:0] p_Result_44_fu_921_p3;
wire   [0:0] p_Result_45_fu_929_p3;
wire   [0:0] xor_ln895_fu_937_p2;
wire  signed [16:0] sext_ln1348_2_fu_955_p1;
wire   [16:0] ret_V_1_fu_958_p2;
wire   [0:0] p_Result_46_fu_964_p3;
wire   [0:0] p_Result_47_fu_972_p3;
wire   [0:0] xor_ln895_1_fu_980_p2;
wire  signed [16:0] sext_ln1348_3_fu_998_p1;
wire   [16:0] ret_V_2_fu_1001_p2;
wire   [0:0] p_Result_48_fu_1007_p3;
wire   [0:0] p_Result_49_fu_1015_p3;
wire   [0:0] xor_ln895_2_fu_1023_p2;
wire  signed [16:0] sext_ln1348_4_fu_1041_p1;
wire   [16:0] ret_V_3_fu_1044_p2;
wire   [0:0] p_Result_50_fu_1050_p3;
wire   [0:0] p_Result_51_fu_1058_p3;
wire   [0:0] xor_ln895_3_fu_1066_p2;
wire  signed [16:0] sext_ln1348_5_fu_1084_p1;
wire   [16:0] ret_V_4_fu_1087_p2;
wire   [0:0] p_Result_52_fu_1093_p3;
wire   [0:0] p_Result_53_fu_1101_p3;
wire   [0:0] xor_ln895_4_fu_1109_p2;
wire  signed [16:0] sext_ln1348_6_fu_1127_p1;
wire   [16:0] ret_V_5_fu_1130_p2;
wire   [0:0] p_Result_54_fu_1136_p3;
wire   [0:0] p_Result_55_fu_1144_p3;
wire   [0:0] xor_ln895_5_fu_1152_p2;
wire  signed [16:0] sext_ln1348_7_fu_1170_p1;
wire   [16:0] ret_V_6_fu_1173_p2;
wire   [0:0] p_Result_56_fu_1179_p3;
wire   [0:0] p_Result_57_fu_1187_p3;
wire   [0:0] xor_ln895_6_fu_1195_p2;
wire  signed [16:0] sext_ln1348_8_fu_1213_p1;
wire   [16:0] ret_V_7_fu_1216_p2;
wire   [0:0] p_Result_58_fu_1222_p3;
wire   [0:0] p_Result_59_fu_1230_p3;
wire   [0:0] xor_ln895_7_fu_1238_p2;
wire  signed [16:0] sext_ln1348_9_fu_1256_p1;
wire   [16:0] ret_V_8_fu_1259_p2;
wire   [0:0] p_Result_60_fu_1265_p3;
wire   [0:0] p_Result_61_fu_1273_p3;
wire   [0:0] xor_ln895_8_fu_1281_p2;
wire  signed [16:0] sext_ln1348_10_fu_1299_p1;
wire   [16:0] ret_V_9_fu_1302_p2;
wire   [0:0] p_Result_62_fu_1308_p3;
wire   [0:0] p_Result_63_fu_1316_p3;
wire   [0:0] xor_ln895_9_fu_1324_p2;
wire   [0:0] overflow_fu_943_p2;
wire   [0:0] xor_ln302_fu_949_p2;
wire   [9:0] select_ln346_fu_1342_p3;
wire   [9:0] tmp_fu_1350_p4;
wire   [0:0] overflow_1_fu_986_p2;
wire   [0:0] xor_ln302_1_fu_992_p2;
wire   [9:0] select_ln346_1_fu_1368_p3;
wire   [9:0] tmp_1_fu_1376_p4;
wire   [0:0] overflow_2_fu_1029_p2;
wire   [0:0] xor_ln302_2_fu_1035_p2;
wire   [9:0] select_ln346_2_fu_1394_p3;
wire   [9:0] tmp_2_fu_1402_p4;
wire   [0:0] overflow_3_fu_1072_p2;
wire   [0:0] xor_ln302_3_fu_1078_p2;
wire   [9:0] select_ln346_3_fu_1420_p3;
wire   [9:0] tmp_3_fu_1428_p4;
wire   [0:0] overflow_4_fu_1115_p2;
wire   [0:0] xor_ln302_4_fu_1121_p2;
wire   [9:0] select_ln346_4_fu_1446_p3;
wire   [9:0] tmp_4_fu_1454_p4;
wire   [0:0] overflow_5_fu_1158_p2;
wire   [0:0] xor_ln302_5_fu_1164_p2;
wire   [9:0] select_ln346_5_fu_1472_p3;
wire   [9:0] tmp_5_fu_1480_p4;
wire   [0:0] overflow_6_fu_1201_p2;
wire   [0:0] xor_ln302_6_fu_1207_p2;
wire   [9:0] select_ln346_6_fu_1498_p3;
wire   [9:0] tmp_6_fu_1506_p4;
wire   [0:0] overflow_7_fu_1244_p2;
wire   [0:0] xor_ln302_7_fu_1250_p2;
wire   [9:0] select_ln346_7_fu_1524_p3;
wire   [9:0] tmp_7_fu_1532_p4;
wire   [0:0] overflow_8_fu_1287_p2;
wire   [0:0] xor_ln302_8_fu_1293_p2;
wire   [9:0] select_ln346_8_fu_1550_p3;
wire   [9:0] tmp_8_fu_1558_p4;
wire   [0:0] overflow_9_fu_1330_p2;
wire   [0:0] xor_ln302_9_fu_1336_p2;
wire   [9:0] select_ln346_9_fu_1576_p3;
wire   [9:0] tmp_9_fu_1584_p4;
wire   [17:0] zext_ln43_1_fu_1653_p1;
wire   [17:0] zext_ln43_fu_1650_p1;
wire   [17:0] p_Val2_10_fu_1656_p2;
wire   [0:0] tmp_38_fu_1670_p3;
wire   [0:0] p_Result_64_fu_1662_p3;
wire   [17:0] select_ln346_11_fu_1678_p3;
wire   [17:0] zext_ln43_3_fu_1697_p1;
wire   [17:0] zext_ln43_2_fu_1694_p1;
wire   [17:0] p_Val2_11_fu_1700_p2;
wire   [0:0] tmp_40_fu_1714_p3;
wire   [0:0] p_Result_65_fu_1706_p3;
wire   [17:0] select_ln346_12_fu_1722_p3;
wire  signed [17:0] lhs_2_fu_1686_p3;
wire  signed [17:0] rhs_2_fu_1730_p3;
wire  signed [18:0] sext_ln813_4_fu_1742_p1;
wire  signed [18:0] sext_ln813_3_fu_1738_p1;
wire   [18:0] ret_V_10_fu_1746_p2;
wire   [17:0] p_Val2_13_fu_1760_p2;
wire   [0:0] p_Result_66_fu_1752_p3;
wire   [0:0] p_Result_67_fu_1766_p3;
wire   [0:0] xor_ln895_12_fu_1774_p2;
wire   [0:0] xor_ln896_1_fu_1786_p2;
wire   [0:0] xor_ln302_13_fu_1798_p2;
wire   [0:0] overflow_12_fu_1780_p2;
wire   [0:0] xor_ln302_14_fu_1804_p2;
wire   [0:0] underflow_1_fu_1792_p2;
wire   [0:0] or_ln302_1_fu_1810_p2;
wire   [17:0] select_ln302_fu_1816_p3;
wire   [17:0] select_ln350_fu_1824_p3;
wire   [17:0] zext_ln43_5_fu_1843_p1;
wire   [17:0] zext_ln43_4_fu_1840_p1;
wire   [17:0] p_Val2_14_fu_1846_p2;
wire   [0:0] tmp_44_fu_1860_p3;
wire   [0:0] p_Result_68_fu_1852_p3;
wire   [17:0] select_ln346_13_fu_1868_p3;
wire   [17:0] zext_ln43_7_fu_1887_p1;
wire   [17:0] zext_ln43_6_fu_1884_p1;
wire   [17:0] p_Val2_15_fu_1890_p2;
wire   [0:0] tmp_46_fu_1904_p3;
wire   [0:0] p_Result_69_fu_1896_p3;
wire   [17:0] select_ln346_14_fu_1912_p3;
wire  signed [17:0] lhs_5_fu_1876_p3;
wire  signed [17:0] rhs_5_fu_1920_p3;
wire  signed [18:0] sext_ln813_6_fu_1932_p1;
wire  signed [18:0] sext_ln813_5_fu_1928_p1;
wire   [18:0] ret_V_11_fu_1936_p2;
wire   [17:0] p_Val2_17_fu_1950_p2;
wire   [0:0] p_Result_70_fu_1942_p3;
wire   [0:0] p_Result_71_fu_1956_p3;
wire   [0:0] xor_ln895_13_fu_1964_p2;
wire   [0:0] xor_ln896_2_fu_1976_p2;
wire   [0:0] xor_ln302_15_fu_1988_p2;
wire   [0:0] overflow_15_fu_1970_p2;
wire   [0:0] xor_ln302_16_fu_1994_p2;
wire   [0:0] underflow_2_fu_1982_p2;
wire   [0:0] or_ln302_2_fu_2000_p2;
wire   [17:0] select_ln302_5_fu_2006_p3;
wire   [17:0] select_ln350_1_fu_2014_p3;
wire  signed [17:0] lhs_6_fu_1832_p3;
wire  signed [17:0] rhs_6_fu_2022_p3;
wire  signed [18:0] sext_ln813_fu_2030_p1;
wire  signed [18:0] sext_ln813_1_fu_2034_p1;
wire   [18:0] ret_V_12_fu_2038_p2;
wire   [17:0] p_Val2_19_fu_2052_p2;
wire   [0:0] p_Result_72_fu_2044_p3;
wire   [0:0] p_Result_73_fu_2058_p3;
wire   [0:0] xor_ln895_10_fu_2066_p2;
wire   [0:0] overflow_16_fu_2072_p2;
wire   [0:0] xor_ln302_10_fu_2078_p2;
wire   [17:0] select_ln346_10_fu_2084_p3;
wire   [17:0] exp_res_V_9_cast40_fu_1646_p1;
wire   [17:0] exp_res_V_8_cast39_fu_1642_p1;
wire   [17:0] p_Val2_20_fu_2100_p2;
wire   [0:0] p_Result_74_fu_2112_p3;
wire   [16:0] add_ln856_fu_2106_p2;
wire  signed [18:0] sext_ln813_2_fu_2131_p1;
wire   [18:0] zext_ln813_1_fu_2134_p1;
wire   [18:0] ret_V_13_fu_2137_p2;
wire   [17:0] zext_ln813_fu_2128_p1;
wire   [17:0] p_Val2_22_fu_2151_p2;
wire   [0:0] p_Result_75_fu_2143_p3;
wire   [0:0] p_Result_76_fu_2156_p3;
wire   [0:0] xor_ln895_11_fu_2164_p2;
wire   [0:0] xor_ln896_fu_2176_p2;
wire   [0:0] xor_ln302_11_fu_2188_p2;
wire   [0:0] overflow_18_fu_2170_p2;
wire   [0:0] xor_ln302_12_fu_2194_p2;
wire   [9:0] tmp_s_fu_2206_p4;
wire   [0:0] underflow_fu_2182_p2;
wire   [0:0] or_ln302_fu_2200_p2;
wire   [9:0] select_ln302_8_fu_2216_p3;
wire   [9:0] select_ln350_2_fu_2224_p3;
wire   [9:0] p_Result_43_fu_2232_p3;
wire   [25:0] mul_ln1270_fu_271_p2;
wire   [25:0] mul_ln1270_8_fu_279_p2;
wire   [25:0] mul_ln1270_9_fu_280_p2;
wire   [25:0] mul_ln1270_7_fu_276_p2;
wire   [25:0] mul_ln1270_6_fu_274_p2;
wire   [25:0] mul_ln1270_5_fu_277_p2;
wire   [25:0] mul_ln1270_4_fu_273_p2;
wire   [25:0] mul_ln1270_3_fu_275_p2;
wire   [25:0] mul_ln1270_2_fu_272_p2;
wire   [25:0] mul_ln1270_1_fu_278_p2;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire   [25:0] mul_ln1270_1_fu_278_p10;
wire   [25:0] mul_ln1270_2_fu_272_p10;
wire   [25:0] mul_ln1270_3_fu_275_p10;
wire   [25:0] mul_ln1270_4_fu_273_p10;
wire   [25:0] mul_ln1270_5_fu_277_p10;
wire   [25:0] mul_ln1270_6_fu_274_p10;
wire   [25:0] mul_ln1270_7_fu_276_p10;
wire   [25:0] mul_ln1270_8_fu_279_p10;
wire   [25:0] mul_ln1270_9_fu_280_p10;
wire   [25:0] mul_ln1270_fu_271_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
end

kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s_exp_tabcdu #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table_address0),
    .ce0(exp_table_ce0),
    .q0(exp_table_q0),
    .address1(exp_table_address1),
    .ce1(exp_table_ce1),
    .q1(exp_table_q1),
    .address2(exp_table_address2),
    .ce2(exp_table_ce2),
    .q2(exp_table_q2),
    .address3(exp_table_address3),
    .ce3(exp_table_ce3),
    .q3(exp_table_q3),
    .address4(exp_table_address4),
    .ce4(exp_table_ce4),
    .q4(exp_table_q4),
    .address5(exp_table_address5),
    .ce5(exp_table_ce5),
    .q5(exp_table_q5),
    .address6(exp_table_address6),
    .ce6(exp_table_ce6),
    .q6(exp_table_q6),
    .address7(exp_table_address7),
    .ce7(exp_table_ce7),
    .q7(exp_table_q7)
);

kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s_invert_ceu #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table_address0),
    .ce0(invert_table_ce0),
    .q0(invert_table_q0)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1848(
    .din0(mul_ln1270_fu_271_p0),
    .din1(mul_ln1270_fu_271_p1),
    .dout(mul_ln1270_fu_271_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1849(
    .din0(mul_ln1270_2_fu_272_p0),
    .din1(mul_ln1270_2_fu_272_p1),
    .dout(mul_ln1270_2_fu_272_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1850(
    .din0(mul_ln1270_4_fu_273_p0),
    .din1(mul_ln1270_4_fu_273_p1),
    .dout(mul_ln1270_4_fu_273_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1851(
    .din0(mul_ln1270_6_fu_274_p0),
    .din1(mul_ln1270_6_fu_274_p1),
    .dout(mul_ln1270_6_fu_274_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1852(
    .din0(mul_ln1270_3_fu_275_p0),
    .din1(mul_ln1270_3_fu_275_p1),
    .dout(mul_ln1270_3_fu_275_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1853(
    .din0(mul_ln1270_7_fu_276_p0),
    .din1(mul_ln1270_7_fu_276_p1),
    .dout(mul_ln1270_7_fu_276_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1854(
    .din0(mul_ln1270_5_fu_277_p0),
    .din1(mul_ln1270_5_fu_277_p1),
    .dout(mul_ln1270_5_fu_277_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1855(
    .din0(mul_ln1270_1_fu_278_p0),
    .din1(mul_ln1270_1_fu_278_p1),
    .dout(mul_ln1270_1_fu_278_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1856(
    .din0(mul_ln1270_8_fu_279_p0),
    .din1(mul_ln1270_8_fu_279_p1),
    .dout(mul_ln1270_8_fu_279_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1857(
    .din0(mul_ln1270_9_fu_280_p0),
    .din1(mul_ln1270_9_fu_280_p1),
    .dout(mul_ln1270_9_fu_280_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_array_V_1_reg_2433 <= {{layer23_out_dout[31:16]}};
        data_array_V_2_reg_2438 <= {{layer23_out_dout[47:32]}};
        data_array_V_3_reg_2443 <= {{layer23_out_dout[63:48]}};
        data_array_V_4_reg_2448 <= {{layer23_out_dout[79:64]}};
        data_array_V_5_reg_2453 <= {{layer23_out_dout[95:80]}};
        data_array_V_6_reg_2458 <= {{layer23_out_dout[111:96]}};
        data_array_V_7_reg_2463 <= {{layer23_out_dout[127:112]}};
        data_array_V_8_reg_2419 <= {{layer23_out_dout[143:128]}};
        data_array_V_9_reg_2426 <= {{layer23_out_dout[159:144]}};
        data_array_V_reg_2414 <= data_array_V_fu_642_p1;
        select_ln65_2_reg_2468 <= select_ln65_2_fu_788_p3;
        select_ln65_5_reg_2474 <= select_ln65_5_fu_848_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        exp_res_V_10_reg_2576 <= exp_table_q6;
        exp_res_V_11_reg_2582 <= exp_table_q5;
        exp_res_V_12_reg_2588 <= exp_table_q4;
        exp_res_V_13_reg_2594 <= exp_table_q3;
        exp_res_V_14_reg_2600 <= exp_table_q2;
        exp_res_V_15_reg_2606 <= exp_table_q1;
        exp_res_V_16_reg_2612 <= exp_table_q0;
        exp_res_V_reg_2570 <= exp_table_q7;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        exp_res_V_17_reg_2628 <= exp_table_q1;
        exp_res_V_18_reg_2633 <= exp_table_q0;
        lhs_7_reg_2638 <= lhs_7_fu_2092_p3;
        rhs_7_reg_2644 <= rhs_7_fu_2120_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        out_pack_data_reg_2655 <= {{mul_ln1270_fu_271_p2[25:10]}};
        tmp_10_reg_2670 <= {{mul_ln1270_7_fu_276_p2[25:10]}};
        tmp_11_reg_2675 <= {{mul_ln1270_6_fu_274_p2[25:10]}};
        tmp_12_reg_2680 <= {{mul_ln1270_5_fu_277_p2[25:10]}};
        tmp_13_reg_2685 <= {{mul_ln1270_4_fu_273_p2[25:10]}};
        tmp_14_reg_2690 <= {{mul_ln1270_3_fu_275_p2[25:10]}};
        tmp_15_reg_2695 <= {{mul_ln1270_2_fu_272_p2[25:10]}};
        tmp_16_reg_2700 <= {{mul_ln1270_1_fu_278_p2[25:10]}};
        trunc_ln1_reg_2660 <= {{mul_ln1270_8_fu_279_p2[25:10]}};
        trunc_ln818_1_reg_2665 <= {{mul_ln1270_9_fu_280_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Result_21_reg_2485 <= p_Result_21_fu_1386_p3;
        p_Result_22_reg_2490 <= p_Result_22_fu_1412_p3;
        p_Result_23_reg_2495 <= p_Result_23_fu_1438_p3;
        p_Result_24_reg_2500 <= p_Result_24_fu_1464_p3;
        p_Result_25_reg_2505 <= p_Result_25_fu_1490_p3;
        p_Result_26_reg_2510 <= p_Result_26_fu_1516_p3;
        p_Result_27_reg_2515 <= p_Result_27_fu_1542_p3;
        p_Result_28_reg_2520 <= p_Result_28_fu_1568_p3;
        p_Result_29_reg_2525 <= p_Result_29_fu_1594_p3;
        p_Result_s_reg_2480 <= p_Result_s_fu_1360_p3;
    end
end

always @ (*) begin
    if (((layer23_out_empty_n == 1'b0) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((output_r_full_n == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((output_r_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((output_r_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        exp_table_address0 = zext_ln225_9_fu_1638_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        exp_table_address0 = zext_ln225_7_fu_1630_p1;
    end else begin
        exp_table_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        exp_table_address1 = zext_ln225_8_fu_1634_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        exp_table_address1 = zext_ln225_6_fu_1626_p1;
    end else begin
        exp_table_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        exp_table_ce0 = 1'b1;
    end else begin
        exp_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        exp_table_ce1 = 1'b1;
    end else begin
        exp_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        exp_table_ce2 = 1'b1;
    end else begin
        exp_table_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        exp_table_ce3 = 1'b1;
    end else begin
        exp_table_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        exp_table_ce4 = 1'b1;
    end else begin
        exp_table_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        exp_table_ce5 = 1'b1;
    end else begin
        exp_table_ce5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        exp_table_ce6 = 1'b1;
    end else begin
        exp_table_ce6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        exp_table_ce7 = 1'b1;
    end else begin
        exp_table_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        invert_table_ce0 = 1'b1;
    end else begin
        invert_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        layer23_out_blk_n = layer23_out_empty_n;
    end else begin
        layer23_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((layer23_out_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer23_out_read = 1'b1;
    end else begin
        layer23_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        output_r_blk_n = output_r_full_n;
    end else begin
        output_r_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((output_r_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_r_write = 1'b1;
    end else begin
        output_r_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((layer23_out_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((output_r_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln856_fu_2106_p2 = (exp_table_q0 + exp_table_q1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((layer23_out_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign data_array_V_1_fu_666_p4 = {{layer23_out_dout[31:16]}};

assign data_array_V_2_fu_676_p4 = {{layer23_out_dout[47:32]}};

assign data_array_V_3_fu_686_p4 = {{layer23_out_dout[63:48]}};

assign data_array_V_4_fu_696_p4 = {{layer23_out_dout[79:64]}};

assign data_array_V_5_fu_706_p4 = {{layer23_out_dout[95:80]}};

assign data_array_V_6_fu_716_p4 = {{layer23_out_dout[111:96]}};

assign data_array_V_7_fu_726_p4 = {{layer23_out_dout[127:112]}};

assign data_array_V_fu_642_p1 = layer23_out_dout[15:0];

assign exp_res_V_8_cast39_fu_1642_p1 = exp_table_q1;

assign exp_res_V_9_cast40_fu_1646_p1 = exp_table_q0;

assign exp_table_address2 = zext_ln225_5_fu_1622_p1;

assign exp_table_address3 = zext_ln225_4_fu_1618_p1;

assign exp_table_address4 = zext_ln225_3_fu_1614_p1;

assign exp_table_address5 = zext_ln225_2_fu_1610_p1;

assign exp_table_address6 = zext_ln225_1_fu_1606_p1;

assign exp_table_address7 = zext_ln225_fu_1602_p1;

assign icmp_ln1651_1_fu_756_p2 = (($signed(data_array_V_2_fu_676_p4) < $signed(data_array_V_3_fu_686_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1651_2_fu_776_p2 = (($signed(select_ln65_fu_748_p3) < $signed(select_ln65_1_fu_768_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1651_3_fu_796_p2 = (($signed(data_array_V_4_fu_696_p4) < $signed(data_array_V_5_fu_706_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1651_4_fu_816_p2 = (($signed(data_array_V_6_fu_716_p4) < $signed(data_array_V_7_fu_726_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1651_5_fu_836_p2 = (($signed(select_ln65_3_fu_808_p3) < $signed(select_ln65_4_fu_828_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1651_6_fu_856_p2 = (($signed(select_ln65_2_reg_2468) < $signed(select_ln65_5_reg_2474)) ? 1'b1 : 1'b0);

assign icmp_ln1651_7_fu_872_p2 = (($signed(data_array_V_8_reg_2419) < $signed(data_array_V_9_reg_2426)) ? 1'b1 : 1'b0);

assign icmp_ln1651_8_fu_888_p2 = (($signed(select_ln65_6_fu_866_p3) < $signed(select_ln65_7_fu_882_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1651_fu_736_p2 = (($signed(data_array_V_fu_642_p1) < $signed(data_array_V_1_fu_666_p4)) ? 1'b1 : 1'b0);

assign invert_table_address0 = zext_ln235_fu_2240_p1;

assign lhs_2_fu_1686_p3 = ((p_Result_64_fu_1662_p3[0:0] == 1'b1) ? select_ln346_11_fu_1678_p3 : p_Val2_10_fu_1656_p2);

assign lhs_5_fu_1876_p3 = ((p_Result_68_fu_1852_p3[0:0] == 1'b1) ? select_ln346_13_fu_1868_p3 : p_Val2_14_fu_1846_p2);

assign lhs_6_fu_1832_p3 = ((or_ln302_1_fu_1810_p2[0:0] == 1'b1) ? select_ln302_fu_1816_p3 : select_ln350_fu_1824_p3);

assign lhs_7_fu_2092_p3 = ((xor_ln302_10_fu_2078_p2[0:0] == 1'b1) ? select_ln346_10_fu_2084_p3 : p_Val2_19_fu_2052_p2);

assign mul_ln1270_1_fu_278_p0 = sext_ln1273_fu_2245_p1;

assign mul_ln1270_1_fu_278_p1 = mul_ln1270_1_fu_278_p10;

assign mul_ln1270_1_fu_278_p10 = exp_res_V_10_reg_2576;

assign mul_ln1270_2_fu_272_p0 = sext_ln1273_fu_2245_p1;

assign mul_ln1270_2_fu_272_p1 = mul_ln1270_2_fu_272_p10;

assign mul_ln1270_2_fu_272_p10 = exp_res_V_11_reg_2582;

assign mul_ln1270_3_fu_275_p0 = sext_ln1273_fu_2245_p1;

assign mul_ln1270_3_fu_275_p1 = mul_ln1270_3_fu_275_p10;

assign mul_ln1270_3_fu_275_p10 = exp_res_V_12_reg_2588;

assign mul_ln1270_4_fu_273_p0 = sext_ln1273_fu_2245_p1;

assign mul_ln1270_4_fu_273_p1 = mul_ln1270_4_fu_273_p10;

assign mul_ln1270_4_fu_273_p10 = exp_res_V_13_reg_2594;

assign mul_ln1270_5_fu_277_p0 = sext_ln1273_fu_2245_p1;

assign mul_ln1270_5_fu_277_p1 = mul_ln1270_5_fu_277_p10;

assign mul_ln1270_5_fu_277_p10 = exp_res_V_14_reg_2600;

assign mul_ln1270_6_fu_274_p0 = sext_ln1273_fu_2245_p1;

assign mul_ln1270_6_fu_274_p1 = mul_ln1270_6_fu_274_p10;

assign mul_ln1270_6_fu_274_p10 = exp_res_V_15_reg_2606;

assign mul_ln1270_7_fu_276_p0 = sext_ln1273_fu_2245_p1;

assign mul_ln1270_7_fu_276_p1 = mul_ln1270_7_fu_276_p10;

assign mul_ln1270_7_fu_276_p10 = exp_res_V_16_reg_2612;

assign mul_ln1270_8_fu_279_p0 = sext_ln1273_fu_2245_p1;

assign mul_ln1270_8_fu_279_p1 = mul_ln1270_8_fu_279_p10;

assign mul_ln1270_8_fu_279_p10 = exp_res_V_17_reg_2628;

assign mul_ln1270_9_fu_280_p0 = sext_ln1273_fu_2245_p1;

assign mul_ln1270_9_fu_280_p1 = mul_ln1270_9_fu_280_p10;

assign mul_ln1270_9_fu_280_p10 = exp_res_V_18_reg_2633;

assign mul_ln1270_fu_271_p0 = sext_ln1273_fu_2245_p1;

assign mul_ln1270_fu_271_p1 = mul_ln1270_fu_271_p10;

assign mul_ln1270_fu_271_p10 = exp_res_V_reg_2570;

assign or_ln302_1_fu_1810_p2 = (xor_ln302_14_fu_1804_p2 | overflow_12_fu_1780_p2);

assign or_ln302_2_fu_2000_p2 = (xor_ln302_16_fu_1994_p2 | overflow_15_fu_1970_p2);

assign or_ln302_fu_2200_p2 = (xor_ln302_12_fu_2194_p2 | overflow_18_fu_2170_p2);

assign output_r_din = {{{{{{{{{{trunc_ln818_1_reg_2665}, {trunc_ln1_reg_2660}}, {tmp_10_reg_2670}}, {tmp_11_reg_2675}}, {tmp_12_reg_2680}}, {tmp_13_reg_2685}}, {tmp_14_reg_2690}}, {tmp_15_reg_2695}}, {tmp_16_reg_2700}}, {out_pack_data_reg_2655}};

assign overflow_12_fu_1780_p2 = (xor_ln895_12_fu_1774_p2 & p_Result_67_fu_1766_p3);

assign overflow_15_fu_1970_p2 = (xor_ln895_13_fu_1964_p2 & p_Result_71_fu_1956_p3);

assign overflow_16_fu_2072_p2 = (xor_ln895_10_fu_2066_p2 & p_Result_73_fu_2058_p3);

assign overflow_18_fu_2170_p2 = (xor_ln895_11_fu_2164_p2 & p_Result_76_fu_2156_p3);

assign overflow_1_fu_986_p2 = (xor_ln895_1_fu_980_p2 & p_Result_47_fu_972_p3);

assign overflow_2_fu_1029_p2 = (xor_ln895_2_fu_1023_p2 & p_Result_49_fu_1015_p3);

assign overflow_3_fu_1072_p2 = (xor_ln895_3_fu_1066_p2 & p_Result_51_fu_1058_p3);

assign overflow_4_fu_1115_p2 = (xor_ln895_4_fu_1109_p2 & p_Result_53_fu_1101_p3);

assign overflow_5_fu_1158_p2 = (xor_ln895_5_fu_1152_p2 & p_Result_55_fu_1144_p3);

assign overflow_6_fu_1201_p2 = (xor_ln895_6_fu_1195_p2 & p_Result_57_fu_1187_p3);

assign overflow_7_fu_1244_p2 = (xor_ln895_7_fu_1238_p2 & p_Result_59_fu_1230_p3);

assign overflow_8_fu_1287_p2 = (xor_ln895_8_fu_1281_p2 & p_Result_61_fu_1273_p3);

assign overflow_9_fu_1330_p2 = (xor_ln895_9_fu_1324_p2 & p_Result_63_fu_1316_p3);

assign overflow_fu_943_p2 = (xor_ln895_fu_937_p2 & p_Result_45_fu_929_p3);

assign p_Result_21_fu_1386_p3 = ((xor_ln302_1_fu_992_p2[0:0] == 1'b1) ? select_ln346_1_fu_1368_p3 : tmp_1_fu_1376_p4);

assign p_Result_22_fu_1412_p3 = ((xor_ln302_2_fu_1035_p2[0:0] == 1'b1) ? select_ln346_2_fu_1394_p3 : tmp_2_fu_1402_p4);

assign p_Result_23_fu_1438_p3 = ((xor_ln302_3_fu_1078_p2[0:0] == 1'b1) ? select_ln346_3_fu_1420_p3 : tmp_3_fu_1428_p4);

assign p_Result_24_fu_1464_p3 = ((xor_ln302_4_fu_1121_p2[0:0] == 1'b1) ? select_ln346_4_fu_1446_p3 : tmp_4_fu_1454_p4);

assign p_Result_25_fu_1490_p3 = ((xor_ln302_5_fu_1164_p2[0:0] == 1'b1) ? select_ln346_5_fu_1472_p3 : tmp_5_fu_1480_p4);

assign p_Result_26_fu_1516_p3 = ((xor_ln302_6_fu_1207_p2[0:0] == 1'b1) ? select_ln346_6_fu_1498_p3 : tmp_6_fu_1506_p4);

assign p_Result_27_fu_1542_p3 = ((xor_ln302_7_fu_1250_p2[0:0] == 1'b1) ? select_ln346_7_fu_1524_p3 : tmp_7_fu_1532_p4);

assign p_Result_28_fu_1568_p3 = ((xor_ln302_8_fu_1293_p2[0:0] == 1'b1) ? select_ln346_8_fu_1550_p3 : tmp_8_fu_1558_p4);

assign p_Result_29_fu_1594_p3 = ((xor_ln302_9_fu_1336_p2[0:0] == 1'b1) ? select_ln346_9_fu_1576_p3 : tmp_9_fu_1584_p4);

assign p_Result_43_fu_2232_p3 = ((or_ln302_fu_2200_p2[0:0] == 1'b1) ? select_ln302_8_fu_2216_p3 : select_ln350_2_fu_2224_p3);

assign p_Result_44_fu_921_p3 = ret_V_fu_915_p2[32'd16];

assign p_Result_45_fu_929_p3 = ret_V_fu_915_p2[32'd15];

assign p_Result_46_fu_964_p3 = ret_V_1_fu_958_p2[32'd16];

assign p_Result_47_fu_972_p3 = ret_V_1_fu_958_p2[32'd15];

assign p_Result_48_fu_1007_p3 = ret_V_2_fu_1001_p2[32'd16];

assign p_Result_49_fu_1015_p3 = ret_V_2_fu_1001_p2[32'd15];

assign p_Result_50_fu_1050_p3 = ret_V_3_fu_1044_p2[32'd16];

assign p_Result_51_fu_1058_p3 = ret_V_3_fu_1044_p2[32'd15];

assign p_Result_52_fu_1093_p3 = ret_V_4_fu_1087_p2[32'd16];

assign p_Result_53_fu_1101_p3 = ret_V_4_fu_1087_p2[32'd15];

assign p_Result_54_fu_1136_p3 = ret_V_5_fu_1130_p2[32'd16];

assign p_Result_55_fu_1144_p3 = ret_V_5_fu_1130_p2[32'd15];

assign p_Result_56_fu_1179_p3 = ret_V_6_fu_1173_p2[32'd16];

assign p_Result_57_fu_1187_p3 = ret_V_6_fu_1173_p2[32'd15];

assign p_Result_58_fu_1222_p3 = ret_V_7_fu_1216_p2[32'd16];

assign p_Result_59_fu_1230_p3 = ret_V_7_fu_1216_p2[32'd15];

assign p_Result_60_fu_1265_p3 = ret_V_8_fu_1259_p2[32'd16];

assign p_Result_61_fu_1273_p3 = ret_V_8_fu_1259_p2[32'd15];

assign p_Result_62_fu_1308_p3 = ret_V_9_fu_1302_p2[32'd16];

assign p_Result_63_fu_1316_p3 = ret_V_9_fu_1302_p2[32'd15];

assign p_Result_64_fu_1662_p3 = p_Val2_10_fu_1656_p2[32'd17];

assign p_Result_65_fu_1706_p3 = p_Val2_11_fu_1700_p2[32'd17];

assign p_Result_66_fu_1752_p3 = ret_V_10_fu_1746_p2[32'd18];

assign p_Result_67_fu_1766_p3 = p_Val2_13_fu_1760_p2[32'd17];

assign p_Result_68_fu_1852_p3 = p_Val2_14_fu_1846_p2[32'd17];

assign p_Result_69_fu_1896_p3 = p_Val2_15_fu_1890_p2[32'd17];

assign p_Result_70_fu_1942_p3 = ret_V_11_fu_1936_p2[32'd18];

assign p_Result_71_fu_1956_p3 = p_Val2_17_fu_1950_p2[32'd17];

assign p_Result_72_fu_2044_p3 = ret_V_12_fu_2038_p2[32'd18];

assign p_Result_73_fu_2058_p3 = p_Val2_19_fu_2052_p2[32'd17];

assign p_Result_74_fu_2112_p3 = p_Val2_20_fu_2100_p2[32'd17];

assign p_Result_75_fu_2143_p3 = ret_V_13_fu_2137_p2[32'd18];

assign p_Result_76_fu_2156_p3 = p_Val2_22_fu_2151_p2[32'd17];

assign p_Result_s_fu_1360_p3 = ((xor_ln302_fu_949_p2[0:0] == 1'b1) ? select_ln346_fu_1342_p3 : tmp_fu_1350_p4);

assign p_Val2_10_fu_1656_p2 = (zext_ln43_1_fu_1653_p1 + zext_ln43_fu_1650_p1);

assign p_Val2_11_fu_1700_p2 = (zext_ln43_3_fu_1697_p1 + zext_ln43_2_fu_1694_p1);

assign p_Val2_13_fu_1760_p2 = ($signed(rhs_2_fu_1730_p3) + $signed(lhs_2_fu_1686_p3));

assign p_Val2_14_fu_1846_p2 = (zext_ln43_5_fu_1843_p1 + zext_ln43_4_fu_1840_p1);

assign p_Val2_15_fu_1890_p2 = (zext_ln43_7_fu_1887_p1 + zext_ln43_6_fu_1884_p1);

assign p_Val2_17_fu_1950_p2 = ($signed(rhs_5_fu_1920_p3) + $signed(lhs_5_fu_1876_p3));

assign p_Val2_19_fu_2052_p2 = ($signed(lhs_6_fu_1832_p3) + $signed(rhs_6_fu_2022_p3));

assign p_Val2_20_fu_2100_p2 = (exp_res_V_9_cast40_fu_1646_p1 + exp_res_V_8_cast39_fu_1642_p1);

assign p_Val2_22_fu_2151_p2 = ($signed(lhs_7_reg_2638) + $signed(zext_ln813_fu_2128_p1));

assign ret_V_10_fu_1746_p2 = ($signed(sext_ln813_4_fu_1742_p1) + $signed(sext_ln813_3_fu_1738_p1));

assign ret_V_11_fu_1936_p2 = ($signed(sext_ln813_6_fu_1932_p1) + $signed(sext_ln813_5_fu_1928_p1));

assign ret_V_12_fu_2038_p2 = ($signed(sext_ln813_fu_2030_p1) + $signed(sext_ln813_1_fu_2034_p1));

assign ret_V_13_fu_2137_p2 = ($signed(sext_ln813_2_fu_2131_p1) + $signed(zext_ln813_1_fu_2134_p1));

assign ret_V_1_fu_958_p2 = ($signed(sext_ln1348_2_fu_955_p1) - $signed(sext_ln1348_1_fu_911_p1));

assign ret_V_2_fu_1001_p2 = ($signed(sext_ln1348_3_fu_998_p1) - $signed(sext_ln1348_1_fu_911_p1));

assign ret_V_3_fu_1044_p2 = ($signed(sext_ln1348_4_fu_1041_p1) - $signed(sext_ln1348_1_fu_911_p1));

assign ret_V_4_fu_1087_p2 = ($signed(sext_ln1348_5_fu_1084_p1) - $signed(sext_ln1348_1_fu_911_p1));

assign ret_V_5_fu_1130_p2 = ($signed(sext_ln1348_6_fu_1127_p1) - $signed(sext_ln1348_1_fu_911_p1));

assign ret_V_6_fu_1173_p2 = ($signed(sext_ln1348_7_fu_1170_p1) - $signed(sext_ln1348_1_fu_911_p1));

assign ret_V_7_fu_1216_p2 = ($signed(sext_ln1348_8_fu_1213_p1) - $signed(sext_ln1348_1_fu_911_p1));

assign ret_V_8_fu_1259_p2 = ($signed(sext_ln1348_9_fu_1256_p1) - $signed(sext_ln1348_1_fu_911_p1));

assign ret_V_9_fu_1302_p2 = ($signed(sext_ln1348_10_fu_1299_p1) - $signed(sext_ln1348_1_fu_911_p1));

assign ret_V_fu_915_p2 = ($signed(sext_ln1348_fu_908_p1) - $signed(sext_ln1348_1_fu_911_p1));

assign rhs_2_fu_1730_p3 = ((p_Result_65_fu_1706_p3[0:0] == 1'b1) ? select_ln346_12_fu_1722_p3 : p_Val2_11_fu_1700_p2);

assign rhs_5_fu_1920_p3 = ((p_Result_69_fu_1896_p3[0:0] == 1'b1) ? select_ln346_14_fu_1912_p3 : p_Val2_15_fu_1890_p2);

assign rhs_6_fu_2022_p3 = ((or_ln302_2_fu_2000_p2[0:0] == 1'b1) ? select_ln302_5_fu_2006_p3 : select_ln350_1_fu_2014_p3);

assign rhs_7_fu_2120_p3 = ((p_Result_74_fu_2112_p3[0:0] == 1'b1) ? 17'd131071 : add_ln856_fu_2106_p2);

assign select_ln302_5_fu_2006_p3 = ((xor_ln302_15_fu_1988_p2[0:0] == 1'b1) ? 18'd131071 : p_Val2_17_fu_1950_p2);

assign select_ln302_8_fu_2216_p3 = ((xor_ln302_11_fu_2188_p2[0:0] == 1'b1) ? 10'd511 : tmp_s_fu_2206_p4);

assign select_ln302_fu_1816_p3 = ((xor_ln302_13_fu_1798_p2[0:0] == 1'b1) ? 18'd131071 : p_Val2_13_fu_1760_p2);

assign select_ln346_10_fu_2084_p3 = ((overflow_16_fu_2072_p2[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_11_fu_1678_p3 = ((tmp_38_fu_1670_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_12_fu_1722_p3 = ((tmp_40_fu_1714_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_13_fu_1868_p3 = ((tmp_44_fu_1860_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_14_fu_1912_p3 = ((tmp_46_fu_1904_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_1_fu_1368_p3 = ((overflow_1_fu_986_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_2_fu_1394_p3 = ((overflow_2_fu_1029_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_3_fu_1420_p3 = ((overflow_3_fu_1072_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_4_fu_1446_p3 = ((overflow_4_fu_1115_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_5_fu_1472_p3 = ((overflow_5_fu_1158_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_6_fu_1498_p3 = ((overflow_6_fu_1201_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_7_fu_1524_p3 = ((overflow_7_fu_1244_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_8_fu_1550_p3 = ((overflow_8_fu_1287_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_9_fu_1576_p3 = ((overflow_9_fu_1330_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_fu_1342_p3 = ((overflow_fu_943_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln350_1_fu_2014_p3 = ((underflow_2_fu_1982_p2[0:0] == 1'b1) ? 18'd131072 : p_Val2_17_fu_1950_p2);

assign select_ln350_2_fu_2224_p3 = ((underflow_fu_2182_p2[0:0] == 1'b1) ? 10'd512 : tmp_s_fu_2206_p4);

assign select_ln350_fu_1824_p3 = ((underflow_1_fu_1792_p2[0:0] == 1'b1) ? 18'd131072 : p_Val2_13_fu_1760_p2);

assign select_ln65_1_fu_768_p3 = ((xor_ln1651_1_fu_762_p2[0:0] == 1'b1) ? data_array_V_2_fu_676_p4 : data_array_V_3_fu_686_p4);

assign select_ln65_2_fu_788_p3 = ((xor_ln1651_2_fu_782_p2[0:0] == 1'b1) ? select_ln65_fu_748_p3 : select_ln65_1_fu_768_p3);

assign select_ln65_3_fu_808_p3 = ((xor_ln1651_3_fu_802_p2[0:0] == 1'b1) ? data_array_V_4_fu_696_p4 : data_array_V_5_fu_706_p4);

assign select_ln65_4_fu_828_p3 = ((xor_ln1651_4_fu_822_p2[0:0] == 1'b1) ? data_array_V_6_fu_716_p4 : data_array_V_7_fu_726_p4);

assign select_ln65_5_fu_848_p3 = ((xor_ln1651_5_fu_842_p2[0:0] == 1'b1) ? select_ln65_3_fu_808_p3 : select_ln65_4_fu_828_p3);

assign select_ln65_6_fu_866_p3 = ((xor_ln1651_6_fu_860_p2[0:0] == 1'b1) ? select_ln65_2_reg_2468 : select_ln65_5_reg_2474);

assign select_ln65_7_fu_882_p3 = ((xor_ln1651_7_fu_876_p2[0:0] == 1'b1) ? data_array_V_8_reg_2419 : data_array_V_9_reg_2426);

assign select_ln65_fu_748_p3 = ((xor_ln1651_fu_742_p2[0:0] == 1'b1) ? data_array_V_fu_642_p1 : data_array_V_1_fu_666_p4);

assign sext_ln1273_fu_2245_p1 = $signed(invert_table_q0);

assign sext_ln1348_10_fu_1299_p1 = data_array_V_9_reg_2426;

assign sext_ln1348_1_fu_911_p1 = $signed(x_max_V_fu_900_p3);

assign sext_ln1348_2_fu_955_p1 = data_array_V_1_reg_2433;

assign sext_ln1348_3_fu_998_p1 = data_array_V_2_reg_2438;

assign sext_ln1348_4_fu_1041_p1 = data_array_V_3_reg_2443;

assign sext_ln1348_5_fu_1084_p1 = data_array_V_4_reg_2448;

assign sext_ln1348_6_fu_1127_p1 = data_array_V_5_reg_2453;

assign sext_ln1348_7_fu_1170_p1 = data_array_V_6_reg_2458;

assign sext_ln1348_8_fu_1213_p1 = data_array_V_7_reg_2463;

assign sext_ln1348_9_fu_1256_p1 = data_array_V_8_reg_2419;

assign sext_ln1348_fu_908_p1 = data_array_V_reg_2414;

assign sext_ln813_1_fu_2034_p1 = rhs_6_fu_2022_p3;

assign sext_ln813_2_fu_2131_p1 = lhs_7_reg_2638;

assign sext_ln813_3_fu_1738_p1 = lhs_2_fu_1686_p3;

assign sext_ln813_4_fu_1742_p1 = rhs_2_fu_1730_p3;

assign sext_ln813_5_fu_1928_p1 = lhs_5_fu_1876_p3;

assign sext_ln813_6_fu_1932_p1 = rhs_5_fu_1920_p3;

assign sext_ln813_fu_2030_p1 = lhs_6_fu_1832_p3;

assign tmp_1_fu_1376_p4 = {{ret_V_1_fu_958_p2[15:6]}};

assign tmp_2_fu_1402_p4 = {{ret_V_2_fu_1001_p2[15:6]}};

assign tmp_38_fu_1670_p3 = p_Val2_10_fu_1656_p2[32'd17];

assign tmp_3_fu_1428_p4 = {{ret_V_3_fu_1044_p2[15:6]}};

assign tmp_40_fu_1714_p3 = p_Val2_11_fu_1700_p2[32'd17];

assign tmp_44_fu_1860_p3 = p_Val2_14_fu_1846_p2[32'd17];

assign tmp_46_fu_1904_p3 = p_Val2_15_fu_1890_p2[32'd17];

assign tmp_4_fu_1454_p4 = {{ret_V_4_fu_1087_p2[15:6]}};

assign tmp_5_fu_1480_p4 = {{ret_V_5_fu_1130_p2[15:6]}};

assign tmp_6_fu_1506_p4 = {{ret_V_6_fu_1173_p2[15:6]}};

assign tmp_7_fu_1532_p4 = {{ret_V_7_fu_1216_p2[15:6]}};

assign tmp_8_fu_1558_p4 = {{ret_V_8_fu_1259_p2[15:6]}};

assign tmp_9_fu_1584_p4 = {{ret_V_9_fu_1302_p2[15:6]}};

assign tmp_fu_1350_p4 = {{ret_V_fu_915_p2[15:6]}};

assign tmp_s_fu_2206_p4 = {{p_Val2_22_fu_2151_p2[17:8]}};

assign underflow_1_fu_1792_p2 = (xor_ln896_1_fu_1786_p2 & p_Result_66_fu_1752_p3);

assign underflow_2_fu_1982_p2 = (xor_ln896_2_fu_1976_p2 & p_Result_70_fu_1942_p3);

assign underflow_fu_2182_p2 = (xor_ln896_fu_2176_p2 & p_Result_75_fu_2143_p3);

assign x_max_V_fu_900_p3 = ((xor_ln1651_8_fu_894_p2[0:0] == 1'b1) ? select_ln65_6_fu_866_p3 : select_ln65_7_fu_882_p3);

assign xor_ln1651_1_fu_762_p2 = (icmp_ln1651_1_fu_756_p2 ^ 1'd1);

assign xor_ln1651_2_fu_782_p2 = (icmp_ln1651_2_fu_776_p2 ^ 1'd1);

assign xor_ln1651_3_fu_802_p2 = (icmp_ln1651_3_fu_796_p2 ^ 1'd1);

assign xor_ln1651_4_fu_822_p2 = (icmp_ln1651_4_fu_816_p2 ^ 1'd1);

assign xor_ln1651_5_fu_842_p2 = (icmp_ln1651_5_fu_836_p2 ^ 1'd1);

assign xor_ln1651_6_fu_860_p2 = (icmp_ln1651_6_fu_856_p2 ^ 1'd1);

assign xor_ln1651_7_fu_876_p2 = (icmp_ln1651_7_fu_872_p2 ^ 1'd1);

assign xor_ln1651_8_fu_894_p2 = (icmp_ln1651_8_fu_888_p2 ^ 1'd1);

assign xor_ln1651_fu_742_p2 = (icmp_ln1651_fu_736_p2 ^ 1'd1);

assign xor_ln302_10_fu_2078_p2 = (p_Result_73_fu_2058_p3 ^ p_Result_72_fu_2044_p3);

assign xor_ln302_11_fu_2188_p2 = (p_Result_76_fu_2156_p3 ^ p_Result_75_fu_2143_p3);

assign xor_ln302_12_fu_2194_p2 = (xor_ln302_11_fu_2188_p2 ^ 1'd1);

assign xor_ln302_13_fu_1798_p2 = (p_Result_67_fu_1766_p3 ^ p_Result_66_fu_1752_p3);

assign xor_ln302_14_fu_1804_p2 = (xor_ln302_13_fu_1798_p2 ^ 1'd1);

assign xor_ln302_15_fu_1988_p2 = (p_Result_71_fu_1956_p3 ^ p_Result_70_fu_1942_p3);

assign xor_ln302_16_fu_1994_p2 = (xor_ln302_15_fu_1988_p2 ^ 1'd1);

assign xor_ln302_1_fu_992_p2 = (p_Result_47_fu_972_p3 ^ p_Result_46_fu_964_p3);

assign xor_ln302_2_fu_1035_p2 = (p_Result_49_fu_1015_p3 ^ p_Result_48_fu_1007_p3);

assign xor_ln302_3_fu_1078_p2 = (p_Result_51_fu_1058_p3 ^ p_Result_50_fu_1050_p3);

assign xor_ln302_4_fu_1121_p2 = (p_Result_53_fu_1101_p3 ^ p_Result_52_fu_1093_p3);

assign xor_ln302_5_fu_1164_p2 = (p_Result_55_fu_1144_p3 ^ p_Result_54_fu_1136_p3);

assign xor_ln302_6_fu_1207_p2 = (p_Result_57_fu_1187_p3 ^ p_Result_56_fu_1179_p3);

assign xor_ln302_7_fu_1250_p2 = (p_Result_59_fu_1230_p3 ^ p_Result_58_fu_1222_p3);

assign xor_ln302_8_fu_1293_p2 = (p_Result_61_fu_1273_p3 ^ p_Result_60_fu_1265_p3);

assign xor_ln302_9_fu_1336_p2 = (p_Result_63_fu_1316_p3 ^ p_Result_62_fu_1308_p3);

assign xor_ln302_fu_949_p2 = (p_Result_45_fu_929_p3 ^ p_Result_44_fu_921_p3);

assign xor_ln895_10_fu_2066_p2 = (p_Result_72_fu_2044_p3 ^ 1'd1);

assign xor_ln895_11_fu_2164_p2 = (p_Result_75_fu_2143_p3 ^ 1'd1);

assign xor_ln895_12_fu_1774_p2 = (p_Result_66_fu_1752_p3 ^ 1'd1);

assign xor_ln895_13_fu_1964_p2 = (p_Result_70_fu_1942_p3 ^ 1'd1);

assign xor_ln895_1_fu_980_p2 = (p_Result_46_fu_964_p3 ^ 1'd1);

assign xor_ln895_2_fu_1023_p2 = (p_Result_48_fu_1007_p3 ^ 1'd1);

assign xor_ln895_3_fu_1066_p2 = (p_Result_50_fu_1050_p3 ^ 1'd1);

assign xor_ln895_4_fu_1109_p2 = (p_Result_52_fu_1093_p3 ^ 1'd1);

assign xor_ln895_5_fu_1152_p2 = (p_Result_54_fu_1136_p3 ^ 1'd1);

assign xor_ln895_6_fu_1195_p2 = (p_Result_56_fu_1179_p3 ^ 1'd1);

assign xor_ln895_7_fu_1238_p2 = (p_Result_58_fu_1222_p3 ^ 1'd1);

assign xor_ln895_8_fu_1281_p2 = (p_Result_60_fu_1265_p3 ^ 1'd1);

assign xor_ln895_9_fu_1324_p2 = (p_Result_62_fu_1308_p3 ^ 1'd1);

assign xor_ln895_fu_937_p2 = (p_Result_44_fu_921_p3 ^ 1'd1);

assign xor_ln896_1_fu_1786_p2 = (p_Result_67_fu_1766_p3 ^ 1'd1);

assign xor_ln896_2_fu_1976_p2 = (p_Result_71_fu_1956_p3 ^ 1'd1);

assign xor_ln896_fu_2176_p2 = (p_Result_76_fu_2156_p3 ^ 1'd1);

assign zext_ln225_1_fu_1606_p1 = p_Result_21_reg_2485;

assign zext_ln225_2_fu_1610_p1 = p_Result_22_reg_2490;

assign zext_ln225_3_fu_1614_p1 = p_Result_23_reg_2495;

assign zext_ln225_4_fu_1618_p1 = p_Result_24_reg_2500;

assign zext_ln225_5_fu_1622_p1 = p_Result_25_reg_2505;

assign zext_ln225_6_fu_1626_p1 = p_Result_26_reg_2510;

assign zext_ln225_7_fu_1630_p1 = p_Result_27_reg_2515;

assign zext_ln225_8_fu_1634_p1 = p_Result_28_reg_2520;

assign zext_ln225_9_fu_1638_p1 = p_Result_29_reg_2525;

assign zext_ln225_fu_1602_p1 = p_Result_s_reg_2480;

assign zext_ln235_fu_2240_p1 = p_Result_43_fu_2232_p3;

assign zext_ln43_1_fu_1653_p1 = exp_res_V_10_reg_2576;

assign zext_ln43_2_fu_1694_p1 = exp_res_V_11_reg_2582;

assign zext_ln43_3_fu_1697_p1 = exp_res_V_12_reg_2588;

assign zext_ln43_4_fu_1840_p1 = exp_res_V_13_reg_2594;

assign zext_ln43_5_fu_1843_p1 = exp_res_V_14_reg_2600;

assign zext_ln43_6_fu_1884_p1 = exp_res_V_15_reg_2606;

assign zext_ln43_7_fu_1887_p1 = exp_res_V_16_reg_2612;

assign zext_ln43_fu_1650_p1 = exp_res_V_reg_2570;

assign zext_ln813_1_fu_2134_p1 = rhs_7_reg_2644;

assign zext_ln813_fu_2128_p1 = rhs_7_reg_2644;

endmodule //kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s
