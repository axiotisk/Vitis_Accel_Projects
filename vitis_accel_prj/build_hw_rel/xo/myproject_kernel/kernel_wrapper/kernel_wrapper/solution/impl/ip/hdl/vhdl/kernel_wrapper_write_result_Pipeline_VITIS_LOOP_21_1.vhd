-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_wrapper_write_result_Pipeline_VITIS_LOOP_21_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    sext_ln21 : IN STD_LOGIC_VECTOR (61 downto 0);
    out_buf_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_buf_0_ce0 : OUT STD_LOGIC;
    out_buf_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_buf_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_buf_1_ce0 : OUT STD_LOGIC;
    out_buf_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_buf_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_buf_2_ce0 : OUT STD_LOGIC;
    out_buf_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_buf_3_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_buf_3_ce0 : OUT STD_LOGIC;
    out_buf_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_buf_4_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_buf_4_ce0 : OUT STD_LOGIC;
    out_buf_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of kernel_wrapper_write_result_Pipeline_VITIS_LOOP_21_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_FFE8 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111101000";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal icmp_ln21_reg_1780 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal gmem1_blk_n_W : STD_LOGIC;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln21_fu_249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1090_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1090_reg_1809 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal p_Result_35_fu_281_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_35_reg_1814 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_10_fu_295_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_10_reg_1819 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1099_fu_333_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1099_reg_1826 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1099_fu_339_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1099_reg_1833 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1102_fu_343_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1102_reg_1838 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1098_fu_347_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1098_reg_1843 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_3_reg_1848 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_38_reg_1855 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_reg_1861 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_41_reg_1868 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_9_reg_1874 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_44_reg_1881 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_reg_1887 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_47_reg_1894 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_47_reg_1894_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal m_26_reg_1900 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal p_Result_5_reg_1905 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1090_1_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1090_1_reg_1910 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_11_fu_567_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_11_reg_1915 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1099_1_fu_603_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1099_1_reg_1922 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1099_1_fu_609_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1099_1_reg_1929 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1102_1_fu_613_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1102_1_reg_1934 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1098_1_fu_617_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1098_1_reg_1939 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1090_fu_665_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1090_reg_1944 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal m_27_reg_1949 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_12_reg_1954 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1090_2_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1090_2_reg_1959 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_12_fu_856_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_12_reg_1964 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1099_2_fu_892_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1099_2_reg_1971 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1099_2_fu_898_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1099_2_reg_1978 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1102_2_fu_902_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1102_2_reg_1983 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1098_2_fu_906_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1098_2_reg_1988 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1090_1_fu_954_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1090_1_reg_1993 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal m_reg_1998 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_19_reg_2003 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1090_3_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1090_3_reg_2008 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_13_fu_1145_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_13_reg_2013 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1099_3_fu_1181_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1099_3_reg_2020 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1099_3_fu_1187_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1099_3_reg_2027 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1102_3_fu_1191_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1102_3_reg_2032 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1098_3_fu_1195_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1098_3_reg_2037 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1090_2_fu_1243_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1090_2_reg_2042 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_28_reg_2047 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_26_reg_2052 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1090_4_fu_1424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1090_4_reg_2057 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_14_fu_1434_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_14_reg_2062 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1099_4_fu_1470_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1099_4_reg_2069 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1099_4_fu_1476_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1099_4_reg_2076 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1102_4_fu_1480_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1102_4_reg_2081 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1098_4_fu_1484_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1098_4_reg_2086 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1090_3_fu_1532_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1090_3_reg_2091 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_29_reg_2096 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_33_reg_2101 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1090_4_fu_1757_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1090_4_reg_2106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln21_fu_261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal i_fu_116 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln21_fu_255_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_V_fu_289_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_303_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_36_fu_313_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1198_fu_321_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_325_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_383_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_388_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln1102_fu_404_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln1102_fu_409_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln1102_fu_413_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_fu_419_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1101_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1102_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_436_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1104_fu_450_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_3_fu_455_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1104_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1104_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1104_5_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1113_fu_491_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1112_fu_482_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1113_fu_496_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln1114_fu_506_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1114_fu_511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1113_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln1113_fu_500_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln1114_fu_515_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln_fu_474_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal m_2_fu_521_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_fu_529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_3_fu_533_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_2_fu_562_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_8_fu_573_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_39_fu_583_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1198_1_fu_591_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_1_fu_595_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1119_fu_631_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1098_fu_624_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1124_fu_636_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1117_fu_621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_642_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_37_fu_649_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_fu_661_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_1_fu_672_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_677_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln1102_1_fu_693_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln1102_1_fu_698_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln1102_1_fu_702_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_10_fu_708_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1101_1_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1102_1_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_725_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1104_1_fu_739_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_11_fu_744_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1104_1_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1104_1_fu_751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_1_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1104_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1113_1_fu_780_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1112_1_fu_771_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1113_1_fu_785_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln1114_1_fu_795_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1114_1_fu_800_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1113_1_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln1113_1_fu_789_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln1114_1_fu_804_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln1104_1_fu_763_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal m_12_fu_810_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_1_fu_818_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_13_fu_822_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_4_fu_851_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_15_fu_862_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_42_fu_872_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1198_2_fu_880_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_2_fu_884_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1119_1_fu_920_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1098_1_fu_913_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1124_1_fu_925_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1117_1_fu_910_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_931_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_40_fu_938_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_1_fu_950_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_2_fu_961_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_966_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln1102_2_fu_982_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln1102_2_fu_987_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln1102_2_fu_991_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_17_fu_997_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1101_2_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1102_2_fu_1002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1014_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1104_2_fu_1028_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_18_fu_1033_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1104_2_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1104_2_fu_1040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_2_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1104_6_fu_1046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1113_2_fu_1069_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1112_2_fu_1060_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1113_2_fu_1074_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln1114_2_fu_1084_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1114_2_fu_1089_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1113_2_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln1113_2_fu_1078_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln1114_2_fu_1093_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln1104_2_fu_1052_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal m_15_fu_1099_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_2_fu_1107_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_16_fu_1111_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_6_fu_1140_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_22_fu_1151_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_45_fu_1161_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1198_3_fu_1169_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_3_fu_1173_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1119_2_fu_1209_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1098_2_fu_1202_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1124_2_fu_1214_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1117_2_fu_1199_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_1220_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_43_fu_1227_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_2_fu_1239_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_3_fu_1250_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1255_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln1102_3_fu_1271_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln1102_3_fu_1276_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln1102_3_fu_1280_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_24_fu_1286_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1101_3_fu_1265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1102_3_fu_1291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1303_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1104_3_fu_1317_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_25_fu_1322_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1104_3_fu_1311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1104_3_fu_1329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_3_fu_1297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1104_7_fu_1335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1113_3_fu_1358_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1112_3_fu_1349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1113_3_fu_1363_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln1114_3_fu_1373_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1114_3_fu_1378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1113_3_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln1113_3_fu_1367_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln1114_3_fu_1382_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln1104_3_fu_1341_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal m_19_fu_1388_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_3_fu_1396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_20_fu_1400_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_8_fu_1429_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_29_fu_1440_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_48_fu_1450_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1198_4_fu_1458_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_4_fu_1462_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1119_3_fu_1498_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1098_3_fu_1491_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1124_3_fu_1503_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1117_3_fu_1488_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_1509_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_46_fu_1516_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_3_fu_1528_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_4_fu_1539_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_1544_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln1102_4_fu_1560_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln1102_4_fu_1565_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln1102_4_fu_1569_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_31_fu_1575_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1101_4_fu_1554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1102_4_fu_1580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1592_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1104_4_fu_1606_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_32_fu_1611_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1104_4_fu_1600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1104_4_fu_1618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_4_fu_1586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1104_8_fu_1624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1113_4_fu_1647_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1112_4_fu_1638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1113_4_fu_1652_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln1114_4_fu_1662_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1114_4_fu_1667_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1113_4_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln1113_4_fu_1656_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln1114_4_fu_1671_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln1104_4_fu_1630_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal m_23_fu_1677_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_4_fu_1685_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_24_fu_1689_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln1119_4_fu_1723_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1098_4_fu_1716_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1124_4_fu_1728_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1117_4_fu_1713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_1734_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_49_fu_1741_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_4_fu_1753_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component kernel_wrapper_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component kernel_wrapper_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_loop_exit_ready = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln21_fu_249_p2 = ap_const_lv1_0))) then 
                    i_fu_116 <= add_ln21_fu_255_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_116 <= ap_const_lv14_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln21_reg_1780 = ap_const_lv1_0))) then
                icmp_ln1090_1_reg_1910 <= icmp_ln1090_1_fu_557_p2;
                sub_ln1099_1_reg_1922 <= sub_ln1099_1_fu_603_p2;
                tmp_V_11_reg_1915 <= tmp_V_11_fu_567_p3;
                trunc_ln1098_1_reg_1939 <= trunc_ln1098_1_fu_617_p1;
                trunc_ln1099_1_reg_1929 <= trunc_ln1099_1_fu_609_p1;
                trunc_ln1102_1_reg_1934 <= trunc_ln1102_1_fu_613_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln21_reg_1780 = ap_const_lv1_0))) then
                icmp_ln1090_2_reg_1959 <= icmp_ln1090_2_fu_846_p2;
                select_ln1090_reg_1944 <= select_ln1090_fu_665_p3;
                sub_ln1099_2_reg_1971 <= sub_ln1099_2_fu_892_p2;
                tmp_V_12_reg_1964 <= tmp_V_12_fu_856_p3;
                trunc_ln1098_2_reg_1988 <= trunc_ln1098_2_fu_906_p1;
                trunc_ln1099_2_reg_1978 <= trunc_ln1099_2_fu_898_p1;
                trunc_ln1102_2_reg_1983 <= trunc_ln1102_2_fu_902_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln21_reg_1780 = ap_const_lv1_0))) then
                icmp_ln1090_3_reg_2008 <= icmp_ln1090_3_fu_1135_p2;
                select_ln1090_1_reg_1993 <= select_ln1090_1_fu_954_p3;
                sub_ln1099_3_reg_2020 <= sub_ln1099_3_fu_1181_p2;
                tmp_V_13_reg_2013 <= tmp_V_13_fu_1145_p3;
                trunc_ln1098_3_reg_2037 <= trunc_ln1098_3_fu_1195_p1;
                trunc_ln1099_3_reg_2027 <= trunc_ln1099_3_fu_1187_p1;
                trunc_ln1102_3_reg_2032 <= trunc_ln1102_3_fu_1191_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1090_4_reg_2057 <= icmp_ln1090_4_fu_1424_p2;
                icmp_ln21_reg_1780 <= icmp_ln21_fu_249_p2;
                select_ln1090_2_reg_2042 <= select_ln1090_2_fu_1243_p3;
                sub_ln1099_4_reg_2069 <= sub_ln1099_4_fu_1470_p2;
                tmp_V_14_reg_2062 <= tmp_V_14_fu_1434_p3;
                trunc_ln1098_4_reg_2086 <= trunc_ln1098_4_fu_1484_p1;
                trunc_ln1099_4_reg_2076 <= trunc_ln1099_4_fu_1476_p1;
                trunc_ln1102_4_reg_2081 <= trunc_ln1102_4_fu_1480_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln21_reg_1780 = ap_const_lv1_0))) then
                icmp_ln1090_reg_1809 <= icmp_ln1090_fu_275_p2;
                p_Result_35_reg_1814 <= out_buf_0_q0(15 downto 15);
                p_Result_38_reg_1855 <= out_buf_1_q0(15 downto 15);
                p_Result_41_reg_1868 <= out_buf_2_q0(15 downto 15);
                p_Result_44_reg_1881 <= out_buf_3_q0(15 downto 15);
                p_Result_47_reg_1894 <= out_buf_4_q0(15 downto 15);
                p_Val2_12_reg_1887 <= out_buf_4_q0;
                p_Val2_3_reg_1848 <= out_buf_1_q0;
                p_Val2_6_reg_1861 <= out_buf_2_q0;
                p_Val2_9_reg_1874 <= out_buf_3_q0;
                sub_ln1099_reg_1826 <= sub_ln1099_fu_333_p2;
                tmp_V_10_reg_1819 <= tmp_V_10_fu_295_p3;
                trunc_ln1098_reg_1843 <= trunc_ln1098_fu_347_p1;
                trunc_ln1099_reg_1833 <= trunc_ln1099_fu_339_p1;
                trunc_ln1102_reg_1838 <= trunc_ln1102_fu_343_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1090_reg_1809 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln21_reg_1780 = ap_const_lv1_0))) then
                m_26_reg_1900 <= m_3_fu_533_p2(63 downto 1);
                p_Result_5_reg_1905 <= m_3_fu_533_p2(25 downto 25);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1090_1_reg_1910 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln21_reg_1780 = ap_const_lv1_0))) then
                m_27_reg_1949 <= m_13_fu_822_p2(63 downto 1);
                p_Result_12_reg_1954 <= m_13_fu_822_p2(25 downto 25);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1090_3_reg_2008 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                m_28_reg_2047 <= m_20_fu_1400_p2(63 downto 1);
                p_Result_26_reg_2052 <= m_20_fu_1400_p2(25 downto 25);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1090_4_reg_2057 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                m_29_reg_2096 <= m_24_fu_1689_p2(63 downto 1);
                p_Result_33_reg_2101 <= m_24_fu_1689_p2(25 downto 25);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1090_2_reg_1959 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln21_reg_1780 = ap_const_lv1_0))) then
                m_reg_1998 <= m_16_fu_1111_p2(63 downto 1);
                p_Result_19_reg_2003 <= m_16_fu_1111_p2(25 downto 25);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_Result_47_reg_1894_pp0_iter1_reg <= p_Result_47_reg_1894;
                select_ln1090_3_reg_2091 <= select_ln1090_3_fu_1532_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                select_ln1090_4_reg_2106 <= select_ln1090_4_fu_1757_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_condition_exit_pp0_iter0_stage3, ap_block_pp0_stage4_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    LD_1_fu_950_p1 <= p_Result_40_fu_938_p5(32 - 1 downto 0);
    LD_2_fu_1239_p1 <= p_Result_43_fu_1227_p5(32 - 1 downto 0);
    LD_3_fu_1528_p1 <= p_Result_46_fu_1516_p5(32 - 1 downto 0);
    LD_4_fu_1753_p1 <= p_Result_49_fu_1741_p5(32 - 1 downto 0);
    LD_fu_661_p1 <= p_Result_37_fu_649_p5(32 - 1 downto 0);
    a_1_fu_719_p2 <= (icmp_ln1102_1_fu_713_p2 and icmp_ln1101_1_fu_687_p2);
    a_2_fu_1008_p2 <= (icmp_ln1102_2_fu_1002_p2 and icmp_ln1101_2_fu_976_p2);
    a_3_fu_1297_p2 <= (icmp_ln1102_3_fu_1291_p2 and icmp_ln1101_3_fu_1265_p2);
    a_4_fu_1586_p2 <= (icmp_ln1102_4_fu_1580_p2 and icmp_ln1101_4_fu_1554_p2);
    a_fu_430_p2 <= (icmp_ln1102_fu_424_p2 and icmp_ln1101_fu_398_p2);
    add_ln1104_1_fu_739_p2 <= std_logic_vector(unsigned(trunc_ln1099_1_reg_1929) + unsigned(ap_const_lv16_FFE8));
    add_ln1104_2_fu_1028_p2 <= std_logic_vector(unsigned(trunc_ln1099_2_reg_1978) + unsigned(ap_const_lv16_FFE8));
    add_ln1104_3_fu_1317_p2 <= std_logic_vector(unsigned(trunc_ln1099_3_reg_2027) + unsigned(ap_const_lv16_FFE8));
    add_ln1104_4_fu_1606_p2 <= std_logic_vector(unsigned(trunc_ln1099_4_reg_2076) + unsigned(ap_const_lv16_FFE8));
    add_ln1104_fu_450_p2 <= std_logic_vector(unsigned(trunc_ln1099_reg_1833) + unsigned(ap_const_lv16_FFE8));
    add_ln1113_1_fu_780_p2 <= std_logic_vector(unsigned(sub_ln1099_1_reg_1922) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln1113_2_fu_1069_p2 <= std_logic_vector(unsigned(sub_ln1099_2_reg_1971) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln1113_3_fu_1358_p2 <= std_logic_vector(unsigned(sub_ln1099_3_reg_2020) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln1113_4_fu_1647_p2 <= std_logic_vector(unsigned(sub_ln1099_4_reg_2069) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln1113_fu_491_p2 <= std_logic_vector(unsigned(sub_ln1099_reg_1826) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln1124_1_fu_925_p2 <= std_logic_vector(unsigned(sub_ln1119_1_fu_920_p2) + unsigned(select_ln1098_1_fu_913_p3));
    add_ln1124_2_fu_1214_p2 <= std_logic_vector(unsigned(sub_ln1119_2_fu_1209_p2) + unsigned(select_ln1098_2_fu_1202_p3));
    add_ln1124_3_fu_1503_p2 <= std_logic_vector(unsigned(sub_ln1119_3_fu_1498_p2) + unsigned(select_ln1098_3_fu_1491_p3));
    add_ln1124_4_fu_1728_p2 <= std_logic_vector(unsigned(sub_ln1119_4_fu_1723_p2) + unsigned(select_ln1098_4_fu_1716_p3));
    add_ln1124_fu_636_p2 <= std_logic_vector(unsigned(sub_ln1119_fu_631_p2) + unsigned(select_ln1098_fu_624_p3));
    add_ln21_fu_255_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_1) + unsigned(ap_const_lv14_1));
    and_ln1104_1_fu_751_p2 <= (xor_ln1104_1_fu_733_p2 and p_Result_11_fu_744_p3);
    and_ln1104_2_fu_1040_p2 <= (xor_ln1104_2_fu_1022_p2 and p_Result_18_fu_1033_p3);
    and_ln1104_3_fu_1329_p2 <= (xor_ln1104_3_fu_1311_p2 and p_Result_25_fu_1322_p3);
    and_ln1104_4_fu_1618_p2 <= (xor_ln1104_4_fu_1600_p2 and p_Result_32_fu_1611_p3);
    and_ln1104_fu_462_p2 <= (xor_ln1104_fu_444_p2 and p_Result_3_fu_455_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem1_WREADY)
    begin
                ap_block_pp0_stage0_11001 <= ((m_axi_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem1_WREADY)
    begin
                ap_block_pp0_stage0_subdone <= ((m_axi_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem1_WREADY)
    begin
                ap_block_pp0_stage1_11001 <= ((m_axi_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem1_WREADY)
    begin
                ap_block_pp0_stage1_subdone <= ((m_axi_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem1_WREADY)
    begin
                ap_block_pp0_stage2_11001 <= ((m_axi_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem1_WREADY)
    begin
                ap_block_pp0_stage2_subdone <= ((m_axi_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem1_WREADY)
    begin
                ap_block_pp0_stage3_11001 <= ((m_axi_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem1_WREADY)
    begin
                ap_block_pp0_stage3_subdone <= ((m_axi_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(m_axi_gmem1_WREADY, icmp_ln21_reg_1780)
    begin
                ap_block_state5_io <= ((m_axi_gmem1_WREADY = ap_const_logic_0) and (icmp_ln21_reg_1780 = ap_const_lv1_0));
    end process;

        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, icmp_ln21_reg_1780)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln21_reg_1780 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_loop_exit_ready = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_116, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_1 <= ap_const_lv14_0;
        else 
            ap_sig_allocacmp_i_1 <= i_fu_116;
        end if; 
    end process;


    gmem1_blk_n_W_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, m_axi_gmem1_WREADY, icmp_ln21_reg_1780, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln21_reg_1780 = ap_const_lv1_0)))) then 
            gmem1_blk_n_W <= m_axi_gmem1_WREADY;
        else 
            gmem1_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln1090_1_fu_557_p2 <= "1" when (p_Val2_3_reg_1848 = ap_const_lv16_0) else "0";
    icmp_ln1090_2_fu_846_p2 <= "1" when (p_Val2_6_reg_1861 = ap_const_lv16_0) else "0";
    icmp_ln1090_3_fu_1135_p2 <= "1" when (p_Val2_9_reg_1874 = ap_const_lv16_0) else "0";
    icmp_ln1090_4_fu_1424_p2 <= "1" when (p_Val2_12_reg_1887 = ap_const_lv16_0) else "0";
    icmp_ln1090_fu_275_p2 <= "1" when (out_buf_0_q0 = ap_const_lv16_0) else "0";
    icmp_ln1101_1_fu_687_p2 <= "1" when (signed(tmp_8_fu_677_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln1101_2_fu_976_p2 <= "1" when (signed(tmp_13_fu_966_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln1101_3_fu_1265_p2 <= "1" when (signed(tmp_17_fu_1255_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln1101_4_fu_1554_p2 <= "1" when (signed(tmp_21_fu_1544_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln1101_fu_398_p2 <= "1" when (signed(tmp_fu_388_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln1102_1_fu_713_p2 <= "0" when (p_Result_10_fu_708_p2 = ap_const_lv16_0) else "1";
    icmp_ln1102_2_fu_1002_p2 <= "0" when (p_Result_17_fu_997_p2 = ap_const_lv16_0) else "1";
    icmp_ln1102_3_fu_1291_p2 <= "0" when (p_Result_24_fu_1286_p2 = ap_const_lv16_0) else "1";
    icmp_ln1102_4_fu_1580_p2 <= "0" when (p_Result_31_fu_1575_p2 = ap_const_lv16_0) else "1";
    icmp_ln1102_fu_424_p2 <= "0" when (p_Result_4_fu_419_p2 = ap_const_lv16_0) else "1";
    icmp_ln1113_1_fu_774_p2 <= "1" when (signed(lsb_index_1_fu_672_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1113_2_fu_1063_p2 <= "1" when (signed(lsb_index_2_fu_961_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1113_3_fu_1352_p2 <= "1" when (signed(lsb_index_3_fu_1250_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1113_4_fu_1641_p2 <= "1" when (signed(lsb_index_4_fu_1539_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1113_fu_485_p2 <= "1" when (signed(lsb_index_fu_383_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln21_fu_249_p2 <= "1" when (ap_sig_allocacmp_i_1 = ap_const_lv14_2000) else "0";
    
    l_1_fu_595_p3_proc : process(sext_ln1198_1_fu_591_p1)
    begin
        l_1_fu_595_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln1198_1_fu_591_p1(i) = '1' then
                l_1_fu_595_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_2_fu_884_p3_proc : process(sext_ln1198_2_fu_880_p1)
    begin
        l_2_fu_884_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln1198_2_fu_880_p1(i) = '1' then
                l_2_fu_884_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_3_fu_1173_p3_proc : process(sext_ln1198_3_fu_1169_p1)
    begin
        l_3_fu_1173_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln1198_3_fu_1169_p1(i) = '1' then
                l_3_fu_1173_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_4_fu_1462_p3_proc : process(sext_ln1198_4_fu_1458_p1)
    begin
        l_4_fu_1462_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln1198_4_fu_1458_p1(i) = '1' then
                l_4_fu_1462_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_fu_325_p3_proc : process(sext_ln1198_fu_321_p1)
    begin
        l_fu_325_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln1198_fu_321_p1(i) = '1' then
                l_fu_325_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lsb_index_1_fu_672_p2 <= std_logic_vector(unsigned(sub_ln1099_1_reg_1922) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_2_fu_961_p2 <= std_logic_vector(unsigned(sub_ln1099_2_reg_1971) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_3_fu_1250_p2 <= std_logic_vector(unsigned(sub_ln1099_3_reg_2020) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_4_fu_1539_p2 <= std_logic_vector(unsigned(sub_ln1099_4_reg_2069) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_fu_383_p2 <= std_logic_vector(unsigned(sub_ln1099_reg_1826) + unsigned(ap_const_lv32_FFFFFFE8));
    lshr_ln1102_1_fu_702_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & zext_ln1102_1_fu_698_p1(16-1 downto 0)))));
    lshr_ln1102_2_fu_991_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & zext_ln1102_2_fu_987_p1(16-1 downto 0)))));
    lshr_ln1102_3_fu_1280_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & zext_ln1102_3_fu_1276_p1(16-1 downto 0)))));
    lshr_ln1102_4_fu_1569_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & zext_ln1102_4_fu_1565_p1(16-1 downto 0)))));
    lshr_ln1102_fu_413_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & zext_ln1102_fu_409_p1(16-1 downto 0)))));
    lshr_ln1113_1_fu_789_p2 <= std_logic_vector(shift_right(unsigned(zext_ln1112_1_fu_771_p1),to_integer(unsigned('0' & zext_ln1113_1_fu_785_p1(31-1 downto 0)))));
    lshr_ln1113_2_fu_1078_p2 <= std_logic_vector(shift_right(unsigned(zext_ln1112_2_fu_1060_p1),to_integer(unsigned('0' & zext_ln1113_2_fu_1074_p1(31-1 downto 0)))));
    lshr_ln1113_3_fu_1367_p2 <= std_logic_vector(shift_right(unsigned(zext_ln1112_3_fu_1349_p1),to_integer(unsigned('0' & zext_ln1113_3_fu_1363_p1(31-1 downto 0)))));
    lshr_ln1113_4_fu_1656_p2 <= std_logic_vector(shift_right(unsigned(zext_ln1112_4_fu_1638_p1),to_integer(unsigned('0' & zext_ln1113_4_fu_1652_p1(31-1 downto 0)))));
    lshr_ln1113_fu_500_p2 <= std_logic_vector(shift_right(unsigned(zext_ln1112_fu_482_p1),to_integer(unsigned('0' & zext_ln1113_fu_496_p1(31-1 downto 0)))));
    m_12_fu_810_p3 <= 
        lshr_ln1113_1_fu_789_p2 when (icmp_ln1113_1_fu_774_p2(0) = '1') else 
        shl_ln1114_1_fu_804_p2;
    m_13_fu_822_p2 <= std_logic_vector(unsigned(m_12_fu_810_p3) + unsigned(zext_ln1116_1_fu_818_p1));
    m_15_fu_1099_p3 <= 
        lshr_ln1113_2_fu_1078_p2 when (icmp_ln1113_2_fu_1063_p2(0) = '1') else 
        shl_ln1114_2_fu_1093_p2;
    m_16_fu_1111_p2 <= std_logic_vector(unsigned(m_15_fu_1099_p3) + unsigned(zext_ln1116_2_fu_1107_p1));
    m_19_fu_1388_p3 <= 
        lshr_ln1113_3_fu_1367_p2 when (icmp_ln1113_3_fu_1352_p2(0) = '1') else 
        shl_ln1114_3_fu_1382_p2;
    m_20_fu_1400_p2 <= std_logic_vector(unsigned(m_19_fu_1388_p3) + unsigned(zext_ln1116_3_fu_1396_p1));
    m_23_fu_1677_p3 <= 
        lshr_ln1113_4_fu_1656_p2 when (icmp_ln1113_4_fu_1641_p2(0) = '1') else 
        shl_ln1114_4_fu_1671_p2;
    m_24_fu_1689_p2 <= std_logic_vector(unsigned(m_23_fu_1677_p3) + unsigned(zext_ln1116_4_fu_1685_p1));
    m_2_fu_521_p3 <= 
        lshr_ln1113_fu_500_p2 when (icmp_ln1113_fu_485_p2(0) = '1') else 
        shl_ln1114_fu_515_p2;
    m_3_fu_533_p2 <= std_logic_vector(unsigned(m_2_fu_521_p3) + unsigned(zext_ln1116_fu_529_p1));
    m_axi_gmem1_ARADDR <= ap_const_lv64_0;
    m_axi_gmem1_ARBURST <= ap_const_lv2_0;
    m_axi_gmem1_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem1_ARID <= ap_const_lv1_0;
    m_axi_gmem1_ARLEN <= ap_const_lv32_0;
    m_axi_gmem1_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem1_ARPROT <= ap_const_lv3_0;
    m_axi_gmem1_ARQOS <= ap_const_lv4_0;
    m_axi_gmem1_ARREGION <= ap_const_lv4_0;
    m_axi_gmem1_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem1_ARUSER <= ap_const_lv1_0;
    m_axi_gmem1_ARVALID <= ap_const_logic_0;
    m_axi_gmem1_AWADDR <= ap_const_lv64_0;
    m_axi_gmem1_AWBURST <= ap_const_lv2_0;
    m_axi_gmem1_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem1_AWID <= ap_const_lv1_0;
    m_axi_gmem1_AWLEN <= ap_const_lv32_0;
    m_axi_gmem1_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem1_AWPROT <= ap_const_lv3_0;
    m_axi_gmem1_AWQOS <= ap_const_lv4_0;
    m_axi_gmem1_AWREGION <= ap_const_lv4_0;
    m_axi_gmem1_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem1_AWUSER <= ap_const_lv1_0;
    m_axi_gmem1_AWVALID <= ap_const_logic_0;
    m_axi_gmem1_BREADY <= ap_const_logic_0;
    m_axi_gmem1_RREADY <= ap_const_logic_0;

    m_axi_gmem1_WDATA_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, icmp_ln21_reg_1780, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, select_ln1090_reg_1944, select_ln1090_1_reg_1993, select_ln1090_2_reg_2042, select_ln1090_3_reg_2091, select_ln1090_4_reg_2106, ap_block_pp0_stage4_01001, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            m_axi_gmem1_WDATA <= select_ln1090_4_reg_2106;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            m_axi_gmem1_WDATA <= select_ln1090_3_reg_2091;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            m_axi_gmem1_WDATA <= select_ln1090_2_reg_2042;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axi_gmem1_WDATA <= select_ln1090_1_reg_1993;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln21_reg_1780 = ap_const_lv1_0))) then 
            m_axi_gmem1_WDATA <= select_ln1090_reg_1944;
        else 
            m_axi_gmem1_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem1_WID <= ap_const_lv1_0;
    m_axi_gmem1_WLAST <= ap_const_logic_0;
    m_axi_gmem1_WSTRB <= ap_const_lv4_F;
    m_axi_gmem1_WUSER <= ap_const_lv1_0;

    m_axi_gmem1_WVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, icmp_ln21_reg_1780, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln21_reg_1780 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            m_axi_gmem1_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem1_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1104_1_fu_763_p3 <= (ap_const_lv1_0 & or_ln1104_fu_757_p2);
    or_ln1104_2_fu_1052_p3 <= (ap_const_lv1_0 & or_ln1104_6_fu_1046_p2);
    or_ln1104_3_fu_1341_p3 <= (ap_const_lv1_0 & or_ln1104_7_fu_1335_p2);
    or_ln1104_4_fu_1630_p3 <= (ap_const_lv1_0 & or_ln1104_8_fu_1624_p2);
    or_ln1104_5_fu_468_p2 <= (and_ln1104_fu_462_p2 or a_fu_430_p2);
    or_ln1104_6_fu_1046_p2 <= (and_ln1104_2_fu_1040_p2 or a_2_fu_1008_p2);
    or_ln1104_7_fu_1335_p2 <= (and_ln1104_3_fu_1329_p2 or a_3_fu_1297_p2);
    or_ln1104_8_fu_1624_p2 <= (and_ln1104_4_fu_1618_p2 or a_4_fu_1586_p2);
    or_ln1104_fu_757_p2 <= (and_ln1104_1_fu_751_p2 or a_1_fu_719_p2);
    or_ln_fu_474_p3 <= (ap_const_lv1_0 & or_ln1104_5_fu_468_p2);
    out_buf_0_address0 <= zext_ln21_fu_261_p1(13 - 1 downto 0);

    out_buf_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_buf_0_ce0 <= ap_const_logic_1;
        else 
            out_buf_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_1_address0 <= zext_ln21_fu_261_p1(13 - 1 downto 0);

    out_buf_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_buf_1_ce0 <= ap_const_logic_1;
        else 
            out_buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_2_address0 <= zext_ln21_fu_261_p1(13 - 1 downto 0);

    out_buf_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_buf_2_ce0 <= ap_const_logic_1;
        else 
            out_buf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_3_address0 <= zext_ln21_fu_261_p1(13 - 1 downto 0);

    out_buf_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_buf_3_ce0 <= ap_const_logic_1;
        else 
            out_buf_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_4_address0 <= zext_ln21_fu_261_p1(13 - 1 downto 0);

    out_buf_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_buf_4_ce0 <= ap_const_logic_1;
        else 
            out_buf_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_10_fu_708_p2 <= (tmp_V_11_reg_1915 and lshr_ln1102_1_fu_702_p2);
    p_Result_11_fu_744_p3 <= tmp_V_11_reg_1915(to_integer(unsigned(add_ln1104_1_fu_739_p2)) downto to_integer(unsigned(add_ln1104_1_fu_739_p2))) when (to_integer(unsigned(add_ln1104_1_fu_739_p2)) >= 0 and to_integer(unsigned(add_ln1104_1_fu_739_p2)) <=15) else "-";
    
    p_Result_15_fu_862_p4_proc : process(tmp_V_12_fu_856_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable p_Result_15_fu_862_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_V_12_fu_856_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for p_Result_15_fu_862_p4_i in 0 to 16-1 loop
                v0_cpy(p_Result_15_fu_862_p4_i) := tmp_V_12_fu_856_p3(16-1-p_Result_15_fu_862_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_15_fu_862_p4 <= resvalue(16-1 downto 0);
    end process;

    p_Result_17_fu_997_p2 <= (tmp_V_12_reg_1964 and lshr_ln1102_2_fu_991_p2);
    p_Result_18_fu_1033_p3 <= tmp_V_12_reg_1964(to_integer(unsigned(add_ln1104_2_fu_1028_p2)) downto to_integer(unsigned(add_ln1104_2_fu_1028_p2))) when (to_integer(unsigned(add_ln1104_2_fu_1028_p2)) >= 0 and to_integer(unsigned(add_ln1104_2_fu_1028_p2)) <=15) else "-";
    
    p_Result_22_fu_1151_p4_proc : process(tmp_V_13_fu_1145_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable p_Result_22_fu_1151_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_V_13_fu_1145_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for p_Result_22_fu_1151_p4_i in 0 to 16-1 loop
                v0_cpy(p_Result_22_fu_1151_p4_i) := tmp_V_13_fu_1145_p3(16-1-p_Result_22_fu_1151_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_22_fu_1151_p4 <= resvalue(16-1 downto 0);
    end process;

    p_Result_24_fu_1286_p2 <= (tmp_V_13_reg_2013 and lshr_ln1102_3_fu_1280_p2);
    p_Result_25_fu_1322_p3 <= tmp_V_13_reg_2013(to_integer(unsigned(add_ln1104_3_fu_1317_p2)) downto to_integer(unsigned(add_ln1104_3_fu_1317_p2))) when (to_integer(unsigned(add_ln1104_3_fu_1317_p2)) >= 0 and to_integer(unsigned(add_ln1104_3_fu_1317_p2)) <=15) else "-";
    
    p_Result_29_fu_1440_p4_proc : process(tmp_V_14_fu_1434_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable p_Result_29_fu_1440_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_V_14_fu_1434_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for p_Result_29_fu_1440_p4_i in 0 to 16-1 loop
                v0_cpy(p_Result_29_fu_1440_p4_i) := tmp_V_14_fu_1434_p3(16-1-p_Result_29_fu_1440_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_29_fu_1440_p4 <= resvalue(16-1 downto 0);
    end process;

    p_Result_31_fu_1575_p2 <= (tmp_V_14_reg_2062 and lshr_ln1102_4_fu_1569_p2);
    p_Result_32_fu_1611_p3 <= tmp_V_14_reg_2062(to_integer(unsigned(add_ln1104_4_fu_1606_p2)) downto to_integer(unsigned(add_ln1104_4_fu_1606_p2))) when (to_integer(unsigned(add_ln1104_4_fu_1606_p2)) >= 0 and to_integer(unsigned(add_ln1104_4_fu_1606_p2)) <=15) else "-";
    p_Result_35_fu_281_p3 <= out_buf_0_q0(15 downto 15);
    p_Result_36_fu_313_p3 <= (ap_const_lv1_1 & p_Result_s_fu_303_p4);
    p_Result_37_fu_649_p5 <= (zext_ln1117_fu_621_p1(63 downto 32) & tmp_1_fu_642_p3 & zext_ln1117_fu_621_p1(22 downto 0));
    p_Result_39_fu_583_p3 <= (ap_const_lv1_1 & p_Result_8_fu_573_p4);
    p_Result_3_fu_455_p3 <= tmp_V_10_reg_1819(to_integer(unsigned(add_ln1104_fu_450_p2)) downto to_integer(unsigned(add_ln1104_fu_450_p2))) when (to_integer(unsigned(add_ln1104_fu_450_p2)) >= 0 and to_integer(unsigned(add_ln1104_fu_450_p2)) <=15) else "-";
    p_Result_40_fu_938_p5 <= (zext_ln1117_1_fu_910_p1(63 downto 32) & tmp_3_fu_931_p3 & zext_ln1117_1_fu_910_p1(22 downto 0));
    p_Result_42_fu_872_p3 <= (ap_const_lv1_1 & p_Result_15_fu_862_p4);
    p_Result_43_fu_1227_p5 <= (zext_ln1117_2_fu_1199_p1(63 downto 32) & tmp_5_fu_1220_p3 & zext_ln1117_2_fu_1199_p1(22 downto 0));
    p_Result_45_fu_1161_p3 <= (ap_const_lv1_1 & p_Result_22_fu_1151_p4);
    p_Result_46_fu_1516_p5 <= (zext_ln1117_3_fu_1488_p1(63 downto 32) & tmp_7_fu_1509_p3 & zext_ln1117_3_fu_1488_p1(22 downto 0));
    p_Result_48_fu_1450_p3 <= (ap_const_lv1_1 & p_Result_29_fu_1440_p4);
    p_Result_49_fu_1741_p5 <= (zext_ln1117_4_fu_1713_p1(63 downto 32) & tmp_9_fu_1734_p3 & zext_ln1117_4_fu_1713_p1(22 downto 0));
    p_Result_4_fu_419_p2 <= (tmp_V_10_reg_1819 and lshr_ln1102_fu_413_p2);
    
    p_Result_8_fu_573_p4_proc : process(tmp_V_11_fu_567_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable p_Result_8_fu_573_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_V_11_fu_567_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for p_Result_8_fu_573_p4_i in 0 to 16-1 loop
                v0_cpy(p_Result_8_fu_573_p4_i) := tmp_V_11_fu_567_p3(16-1-p_Result_8_fu_573_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_8_fu_573_p4 <= resvalue(16-1 downto 0);
    end process;

    
    p_Result_s_fu_303_p4_proc : process(tmp_V_10_fu_295_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable p_Result_s_fu_303_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_V_10_fu_295_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for p_Result_s_fu_303_p4_i in 0 to 16-1 loop
                v0_cpy(p_Result_s_fu_303_p4_i) := tmp_V_10_fu_295_p3(16-1-p_Result_s_fu_303_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_303_p4 <= resvalue(16-1 downto 0);
    end process;

    select_ln1090_1_fu_954_p3 <= 
        ap_const_lv32_0 when (icmp_ln1090_1_reg_1910(0) = '1') else 
        LD_1_fu_950_p1;
    select_ln1090_2_fu_1243_p3 <= 
        ap_const_lv32_0 when (icmp_ln1090_2_reg_1959(0) = '1') else 
        LD_2_fu_1239_p1;
    select_ln1090_3_fu_1532_p3 <= 
        ap_const_lv32_0 when (icmp_ln1090_3_reg_2008(0) = '1') else 
        LD_3_fu_1528_p1;
    select_ln1090_4_fu_1757_p3 <= 
        ap_const_lv32_0 when (icmp_ln1090_4_reg_2057(0) = '1') else 
        LD_4_fu_1753_p1;
    select_ln1090_fu_665_p3 <= 
        ap_const_lv32_0 when (icmp_ln1090_reg_1809(0) = '1') else 
        LD_fu_661_p1;
    select_ln1098_1_fu_913_p3 <= 
        ap_const_lv8_7F when (p_Result_12_reg_1954(0) = '1') else 
        ap_const_lv8_7E;
    select_ln1098_2_fu_1202_p3 <= 
        ap_const_lv8_7F when (p_Result_19_reg_2003(0) = '1') else 
        ap_const_lv8_7E;
    select_ln1098_3_fu_1491_p3 <= 
        ap_const_lv8_7F when (p_Result_26_reg_2052(0) = '1') else 
        ap_const_lv8_7E;
    select_ln1098_4_fu_1716_p3 <= 
        ap_const_lv8_7F when (p_Result_33_reg_2101(0) = '1') else 
        ap_const_lv8_7E;
    select_ln1098_fu_624_p3 <= 
        ap_const_lv8_7F when (p_Result_5_reg_1905(0) = '1') else 
        ap_const_lv8_7E;
        sext_ln1198_1_fu_591_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_39_fu_583_p3),32));

        sext_ln1198_2_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_42_fu_872_p3),32));

        sext_ln1198_3_fu_1169_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_45_fu_1161_p3),32));

        sext_ln1198_4_fu_1458_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_48_fu_1450_p3),32));

        sext_ln1198_fu_321_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_36_fu_313_p3),32));

    shl_ln1114_1_fu_804_p2 <= std_logic_vector(shift_left(unsigned(zext_ln1112_1_fu_771_p1),to_integer(unsigned('0' & zext_ln1114_1_fu_800_p1(31-1 downto 0)))));
    shl_ln1114_2_fu_1093_p2 <= std_logic_vector(shift_left(unsigned(zext_ln1112_2_fu_1060_p1),to_integer(unsigned('0' & zext_ln1114_2_fu_1089_p1(31-1 downto 0)))));
    shl_ln1114_3_fu_1382_p2 <= std_logic_vector(shift_left(unsigned(zext_ln1112_3_fu_1349_p1),to_integer(unsigned('0' & zext_ln1114_3_fu_1378_p1(31-1 downto 0)))));
    shl_ln1114_4_fu_1671_p2 <= std_logic_vector(shift_left(unsigned(zext_ln1112_4_fu_1638_p1),to_integer(unsigned('0' & zext_ln1114_4_fu_1667_p1(31-1 downto 0)))));
    shl_ln1114_fu_515_p2 <= std_logic_vector(shift_left(unsigned(zext_ln1112_fu_482_p1),to_integer(unsigned('0' & zext_ln1114_fu_511_p1(31-1 downto 0)))));
    sub_ln1099_1_fu_603_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(l_1_fu_595_p3));
    sub_ln1099_2_fu_892_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(l_2_fu_884_p3));
    sub_ln1099_3_fu_1181_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(l_3_fu_1173_p3));
    sub_ln1099_4_fu_1470_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(l_4_fu_1462_p3));
    sub_ln1099_fu_333_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(l_fu_325_p3));
    sub_ln1102_1_fu_693_p2 <= std_logic_vector(signed(ap_const_lv4_9) - signed(trunc_ln1102_1_reg_1934));
    sub_ln1102_2_fu_982_p2 <= std_logic_vector(signed(ap_const_lv4_9) - signed(trunc_ln1102_2_reg_1983));
    sub_ln1102_3_fu_1271_p2 <= std_logic_vector(signed(ap_const_lv4_9) - signed(trunc_ln1102_3_reg_2032));
    sub_ln1102_4_fu_1560_p2 <= std_logic_vector(signed(ap_const_lv4_9) - signed(trunc_ln1102_4_reg_2081));
    sub_ln1102_fu_404_p2 <= std_logic_vector(signed(ap_const_lv4_9) - signed(trunc_ln1102_reg_1838));
    sub_ln1114_1_fu_795_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln1099_1_reg_1922));
    sub_ln1114_2_fu_1084_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln1099_2_reg_1971));
    sub_ln1114_3_fu_1373_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln1099_3_reg_2020));
    sub_ln1114_4_fu_1662_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln1099_4_reg_2069));
    sub_ln1114_fu_506_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln1099_reg_1826));
    sub_ln1119_1_fu_920_p2 <= std_logic_vector(unsigned(ap_const_lv8_6) - unsigned(trunc_ln1098_1_reg_1939));
    sub_ln1119_2_fu_1209_p2 <= std_logic_vector(unsigned(ap_const_lv8_6) - unsigned(trunc_ln1098_2_reg_1988));
    sub_ln1119_3_fu_1498_p2 <= std_logic_vector(unsigned(ap_const_lv8_6) - unsigned(trunc_ln1098_3_reg_2037));
    sub_ln1119_4_fu_1723_p2 <= std_logic_vector(unsigned(ap_const_lv8_6) - unsigned(trunc_ln1098_4_reg_2086));
    sub_ln1119_fu_631_p2 <= std_logic_vector(unsigned(ap_const_lv8_6) - unsigned(trunc_ln1098_reg_1843));
    tmp_10_fu_725_p3 <= lsb_index_1_fu_672_p2(31 downto 31);
    tmp_13_fu_966_p4 <= lsb_index_2_fu_961_p2(31 downto 1);
    tmp_14_fu_1014_p3 <= lsb_index_2_fu_961_p2(31 downto 31);
    tmp_17_fu_1255_p4 <= lsb_index_3_fu_1250_p2(31 downto 1);
    tmp_18_fu_1303_p3 <= lsb_index_3_fu_1250_p2(31 downto 31);
    tmp_1_fu_642_p3 <= (p_Result_35_reg_1814 & add_ln1124_fu_636_p2);
    tmp_21_fu_1544_p4 <= lsb_index_4_fu_1539_p2(31 downto 1);
    tmp_22_fu_1592_p3 <= lsb_index_4_fu_1539_p2(31 downto 31);
    tmp_2_fu_436_p3 <= lsb_index_fu_383_p2(31 downto 31);
    tmp_3_fu_931_p3 <= (p_Result_38_reg_1855 & add_ln1124_1_fu_925_p2);
    tmp_5_fu_1220_p3 <= (p_Result_41_reg_1868 & add_ln1124_2_fu_1214_p2);
    tmp_7_fu_1509_p3 <= (p_Result_44_reg_1881 & add_ln1124_3_fu_1503_p2);
    tmp_8_fu_677_p4 <= lsb_index_1_fu_672_p2(31 downto 1);
    tmp_9_fu_1734_p3 <= (p_Result_47_reg_1894_pp0_iter1_reg & add_ln1124_4_fu_1728_p2);
    tmp_V_10_fu_295_p3 <= 
        tmp_V_fu_289_p2 when (p_Result_35_fu_281_p3(0) = '1') else 
        out_buf_0_q0;
    tmp_V_11_fu_567_p3 <= 
        tmp_V_2_fu_562_p2 when (p_Result_38_reg_1855(0) = '1') else 
        p_Val2_3_reg_1848;
    tmp_V_12_fu_856_p3 <= 
        tmp_V_4_fu_851_p2 when (p_Result_41_reg_1868(0) = '1') else 
        p_Val2_6_reg_1861;
    tmp_V_13_fu_1145_p3 <= 
        tmp_V_6_fu_1140_p2 when (p_Result_44_reg_1881(0) = '1') else 
        p_Val2_9_reg_1874;
    tmp_V_14_fu_1434_p3 <= 
        tmp_V_8_fu_1429_p2 when (p_Result_47_reg_1894(0) = '1') else 
        p_Val2_12_reg_1887;
    tmp_V_2_fu_562_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Val2_3_reg_1848));
    tmp_V_4_fu_851_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Val2_6_reg_1861));
    tmp_V_6_fu_1140_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Val2_9_reg_1874));
    tmp_V_8_fu_1429_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Val2_12_reg_1887));
    tmp_V_fu_289_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(out_buf_0_q0));
    tmp_fu_388_p4 <= lsb_index_fu_383_p2(31 downto 1);
    trunc_ln1098_1_fu_617_p1 <= l_1_fu_595_p3(8 - 1 downto 0);
    trunc_ln1098_2_fu_906_p1 <= l_2_fu_884_p3(8 - 1 downto 0);
    trunc_ln1098_3_fu_1195_p1 <= l_3_fu_1173_p3(8 - 1 downto 0);
    trunc_ln1098_4_fu_1484_p1 <= l_4_fu_1462_p3(8 - 1 downto 0);
    trunc_ln1098_fu_347_p1 <= l_fu_325_p3(8 - 1 downto 0);
    trunc_ln1099_1_fu_609_p1 <= sub_ln1099_1_fu_603_p2(16 - 1 downto 0);
    trunc_ln1099_2_fu_898_p1 <= sub_ln1099_2_fu_892_p2(16 - 1 downto 0);
    trunc_ln1099_3_fu_1187_p1 <= sub_ln1099_3_fu_1181_p2(16 - 1 downto 0);
    trunc_ln1099_4_fu_1476_p1 <= sub_ln1099_4_fu_1470_p2(16 - 1 downto 0);
    trunc_ln1099_fu_339_p1 <= sub_ln1099_fu_333_p2(16 - 1 downto 0);
    trunc_ln1102_1_fu_613_p1 <= sub_ln1099_1_fu_603_p2(4 - 1 downto 0);
    trunc_ln1102_2_fu_902_p1 <= sub_ln1099_2_fu_892_p2(4 - 1 downto 0);
    trunc_ln1102_3_fu_1191_p1 <= sub_ln1099_3_fu_1181_p2(4 - 1 downto 0);
    trunc_ln1102_4_fu_1480_p1 <= sub_ln1099_4_fu_1470_p2(4 - 1 downto 0);
    trunc_ln1102_fu_343_p1 <= sub_ln1099_fu_333_p2(4 - 1 downto 0);
    xor_ln1104_1_fu_733_p2 <= (tmp_10_fu_725_p3 xor ap_const_lv1_1);
    xor_ln1104_2_fu_1022_p2 <= (tmp_14_fu_1014_p3 xor ap_const_lv1_1);
    xor_ln1104_3_fu_1311_p2 <= (tmp_18_fu_1303_p3 xor ap_const_lv1_1);
    xor_ln1104_4_fu_1600_p2 <= (tmp_22_fu_1592_p3 xor ap_const_lv1_1);
    xor_ln1104_fu_444_p2 <= (tmp_2_fu_436_p3 xor ap_const_lv1_1);
    zext_ln1102_1_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1102_1_fu_693_p2),16));
    zext_ln1102_2_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1102_2_fu_982_p2),16));
    zext_ln1102_3_fu_1276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1102_3_fu_1271_p2),16));
    zext_ln1102_4_fu_1565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1102_4_fu_1560_p2),16));
    zext_ln1102_fu_409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1102_fu_404_p2),16));
    zext_ln1112_1_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_11_reg_1915),64));
    zext_ln1112_2_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_12_reg_1964),64));
    zext_ln1112_3_fu_1349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_13_reg_2013),64));
    zext_ln1112_4_fu_1638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_14_reg_2062),64));
    zext_ln1112_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_10_reg_1819),64));
    zext_ln1113_1_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1113_1_fu_780_p2),64));
    zext_ln1113_2_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1113_2_fu_1069_p2),64));
    zext_ln1113_3_fu_1363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1113_3_fu_1358_p2),64));
    zext_ln1113_4_fu_1652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1113_4_fu_1647_p2),64));
    zext_ln1113_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1113_fu_491_p2),64));
    zext_ln1114_1_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1114_1_fu_795_p2),64));
    zext_ln1114_2_fu_1089_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1114_2_fu_1084_p2),64));
    zext_ln1114_3_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1114_3_fu_1373_p2),64));
    zext_ln1114_4_fu_1667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1114_4_fu_1662_p2),64));
    zext_ln1114_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1114_fu_506_p2),64));
    zext_ln1116_1_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1104_1_fu_763_p3),64));
    zext_ln1116_2_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1104_2_fu_1052_p3),64));
    zext_ln1116_3_fu_1396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1104_3_fu_1341_p3),64));
    zext_ln1116_4_fu_1685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1104_4_fu_1630_p3),64));
    zext_ln1116_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_474_p3),64));
    zext_ln1117_1_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_27_reg_1949),64));
    zext_ln1117_2_fu_1199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_reg_1998),64));
    zext_ln1117_3_fu_1488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_28_reg_2047),64));
    zext_ln1117_4_fu_1713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_29_reg_2096),64));
    zext_ln1117_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_26_reg_1900),64));
    zext_ln21_fu_261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i_1),64));
end behav;
