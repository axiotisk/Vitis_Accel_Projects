// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_wrapper_kernel_wrapper,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.650000,HLS_SYN_LAT=65711,HLS_SYN_TPT=41037,HLS_SYN_MEM=162,HLS_SYN_DSP=0,HLS_SYN_FF=25025,HLS_SYN_LUT=112501,HLS_VERSION=2022_2}" *)

module kernel_wrapper (
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire   [255:0] in_buf_V_i_q0;
wire   [255:0] in_buf_V_t_q0;
wire   [15:0] out_buf_V_i_q0;
wire   [15:0] out_buf_V_t_q0;
wire   [15:0] out_buf_V_1_i_q0;
wire   [15:0] out_buf_V_1_t_q0;
wire   [15:0] out_buf_V_2_i_q0;
wire   [15:0] out_buf_V_2_t_q0;
wire   [15:0] out_buf_V_3_i_q0;
wire   [15:0] out_buf_V_3_t_q0;
wire   [15:0] out_buf_V_4_i_q0;
wire   [15:0] out_buf_V_4_t_q0;
wire   [63:0] in_r;
wire   [63:0] out_r;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_continue;
wire    ap_idle;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
wire   [511:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [8:0] gmem0_RFIFONUM;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
wire    gmem1_AWREADY;
wire    gmem1_WREADY;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
wire   [31:0] gmem1_RDATA;
wire   [8:0] gmem1_RFIFONUM;
wire    gmem1_BVALID;
wire   [1:0] gmem1_BRESP;
wire   [0:0] gmem1_BID;
wire   [0:0] gmem1_BUSER;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire   [63:0] entry_proc_U0_out_r_c_din;
wire    entry_proc_U0_out_r_c_write;
wire    read_input_U0_ap_start;
wire    read_input_U0_ap_done;
wire    read_input_U0_ap_continue;
wire    read_input_U0_ap_idle;
wire    read_input_U0_ap_ready;
wire    read_input_U0_m_axi_gmem0_AWVALID;
wire   [63:0] read_input_U0_m_axi_gmem0_AWADDR;
wire   [0:0] read_input_U0_m_axi_gmem0_AWID;
wire   [31:0] read_input_U0_m_axi_gmem0_AWLEN;
wire   [2:0] read_input_U0_m_axi_gmem0_AWSIZE;
wire   [1:0] read_input_U0_m_axi_gmem0_AWBURST;
wire   [1:0] read_input_U0_m_axi_gmem0_AWLOCK;
wire   [3:0] read_input_U0_m_axi_gmem0_AWCACHE;
wire   [2:0] read_input_U0_m_axi_gmem0_AWPROT;
wire   [3:0] read_input_U0_m_axi_gmem0_AWQOS;
wire   [3:0] read_input_U0_m_axi_gmem0_AWREGION;
wire   [0:0] read_input_U0_m_axi_gmem0_AWUSER;
wire    read_input_U0_m_axi_gmem0_WVALID;
wire   [511:0] read_input_U0_m_axi_gmem0_WDATA;
wire   [63:0] read_input_U0_m_axi_gmem0_WSTRB;
wire    read_input_U0_m_axi_gmem0_WLAST;
wire   [0:0] read_input_U0_m_axi_gmem0_WID;
wire   [0:0] read_input_U0_m_axi_gmem0_WUSER;
wire    read_input_U0_m_axi_gmem0_ARVALID;
wire   [63:0] read_input_U0_m_axi_gmem0_ARADDR;
wire   [0:0] read_input_U0_m_axi_gmem0_ARID;
wire   [31:0] read_input_U0_m_axi_gmem0_ARLEN;
wire   [2:0] read_input_U0_m_axi_gmem0_ARSIZE;
wire   [1:0] read_input_U0_m_axi_gmem0_ARBURST;
wire   [1:0] read_input_U0_m_axi_gmem0_ARLOCK;
wire   [3:0] read_input_U0_m_axi_gmem0_ARCACHE;
wire   [2:0] read_input_U0_m_axi_gmem0_ARPROT;
wire   [3:0] read_input_U0_m_axi_gmem0_ARQOS;
wire   [3:0] read_input_U0_m_axi_gmem0_ARREGION;
wire   [0:0] read_input_U0_m_axi_gmem0_ARUSER;
wire    read_input_U0_m_axi_gmem0_RREADY;
wire    read_input_U0_m_axi_gmem0_BREADY;
wire   [12:0] read_input_U0_in_buf_address0;
wire    read_input_U0_in_buf_ce0;
wire    read_input_U0_in_buf_we0;
wire   [255:0] read_input_U0_in_buf_d0;
wire   [12:0] run_inference_U0_in_buf_address0;
wire    run_inference_U0_in_buf_ce0;
wire   [255:0] run_inference_U0_in_buf_d0;
wire    run_inference_U0_in_buf_we0;
wire   [12:0] run_inference_U0_in_buf_address1;
wire    run_inference_U0_in_buf_ce1;
wire   [255:0] run_inference_U0_in_buf_d1;
wire    run_inference_U0_in_buf_we1;
wire   [12:0] run_inference_U0_out_buf_0_address0;
wire    run_inference_U0_out_buf_0_ce0;
wire   [15:0] run_inference_U0_out_buf_0_d0;
wire    run_inference_U0_out_buf_0_we0;
wire   [12:0] run_inference_U0_out_buf_0_address1;
wire    run_inference_U0_out_buf_0_ce1;
wire   [15:0] run_inference_U0_out_buf_0_d1;
wire    run_inference_U0_out_buf_0_we1;
wire   [12:0] run_inference_U0_out_buf_1_address0;
wire    run_inference_U0_out_buf_1_ce0;
wire   [15:0] run_inference_U0_out_buf_1_d0;
wire    run_inference_U0_out_buf_1_we0;
wire   [12:0] run_inference_U0_out_buf_1_address1;
wire    run_inference_U0_out_buf_1_ce1;
wire   [15:0] run_inference_U0_out_buf_1_d1;
wire    run_inference_U0_out_buf_1_we1;
wire   [12:0] run_inference_U0_out_buf_2_address0;
wire    run_inference_U0_out_buf_2_ce0;
wire   [15:0] run_inference_U0_out_buf_2_d0;
wire    run_inference_U0_out_buf_2_we0;
wire   [12:0] run_inference_U0_out_buf_2_address1;
wire    run_inference_U0_out_buf_2_ce1;
wire   [15:0] run_inference_U0_out_buf_2_d1;
wire    run_inference_U0_out_buf_2_we1;
wire   [12:0] run_inference_U0_out_buf_3_address0;
wire    run_inference_U0_out_buf_3_ce0;
wire   [15:0] run_inference_U0_out_buf_3_d0;
wire    run_inference_U0_out_buf_3_we0;
wire   [12:0] run_inference_U0_out_buf_3_address1;
wire    run_inference_U0_out_buf_3_ce1;
wire   [15:0] run_inference_U0_out_buf_3_d1;
wire    run_inference_U0_out_buf_3_we1;
wire   [12:0] run_inference_U0_out_buf_4_address0;
wire    run_inference_U0_out_buf_4_ce0;
wire   [15:0] run_inference_U0_out_buf_4_d0;
wire    run_inference_U0_out_buf_4_we0;
wire   [12:0] run_inference_U0_out_buf_4_address1;
wire    run_inference_U0_out_buf_4_ce1;
wire   [15:0] run_inference_U0_out_buf_4_d1;
wire    run_inference_U0_out_buf_4_we1;
wire    run_inference_U0_in_buf_read;
wire    run_inference_U0_out_buf_0_full_n;
wire    run_inference_U0_out_buf_0_write;
wire    run_inference_U0_out_buf_1_full_n;
wire    run_inference_U0_out_buf_1_write;
wire    run_inference_U0_out_buf_2_full_n;
wire    run_inference_U0_out_buf_2_write;
wire    run_inference_U0_out_buf_3_full_n;
wire    run_inference_U0_out_buf_3_write;
wire    run_inference_U0_out_buf_4_full_n;
wire    run_inference_U0_out_buf_4_write;
wire    run_inference_U0_ap_start;
wire    run_inference_U0_ap_done;
wire    run_inference_U0_ap_ready;
wire    run_inference_U0_ap_idle;
wire    run_inference_U0_ap_continue;
wire    ap_channel_done_out_buf_V_4;
reg    ap_sync_reg_channel_write_out_buf_V_4;
wire    ap_sync_channel_write_out_buf_V_4;
wire    ap_channel_done_out_buf_V_3;
reg    ap_sync_reg_channel_write_out_buf_V_3;
wire    ap_sync_channel_write_out_buf_V_3;
wire    ap_channel_done_out_buf_V_2;
reg    ap_sync_reg_channel_write_out_buf_V_2;
wire    ap_sync_channel_write_out_buf_V_2;
wire    ap_channel_done_out_buf_V_1;
reg    ap_sync_reg_channel_write_out_buf_V_1;
wire    ap_sync_channel_write_out_buf_V_1;
wire    ap_channel_done_out_buf_V;
reg    ap_sync_reg_channel_write_out_buf_V;
wire    ap_sync_channel_write_out_buf_V;
wire    write_result_U0_ap_start;
wire    write_result_U0_ap_done;
wire    write_result_U0_ap_continue;
wire    write_result_U0_ap_idle;
wire    write_result_U0_ap_ready;
wire    write_result_U0_m_axi_gmem1_AWVALID;
wire   [63:0] write_result_U0_m_axi_gmem1_AWADDR;
wire   [0:0] write_result_U0_m_axi_gmem1_AWID;
wire   [31:0] write_result_U0_m_axi_gmem1_AWLEN;
wire   [2:0] write_result_U0_m_axi_gmem1_AWSIZE;
wire   [1:0] write_result_U0_m_axi_gmem1_AWBURST;
wire   [1:0] write_result_U0_m_axi_gmem1_AWLOCK;
wire   [3:0] write_result_U0_m_axi_gmem1_AWCACHE;
wire   [2:0] write_result_U0_m_axi_gmem1_AWPROT;
wire   [3:0] write_result_U0_m_axi_gmem1_AWQOS;
wire   [3:0] write_result_U0_m_axi_gmem1_AWREGION;
wire   [0:0] write_result_U0_m_axi_gmem1_AWUSER;
wire    write_result_U0_m_axi_gmem1_WVALID;
wire   [31:0] write_result_U0_m_axi_gmem1_WDATA;
wire   [3:0] write_result_U0_m_axi_gmem1_WSTRB;
wire    write_result_U0_m_axi_gmem1_WLAST;
wire   [0:0] write_result_U0_m_axi_gmem1_WID;
wire   [0:0] write_result_U0_m_axi_gmem1_WUSER;
wire    write_result_U0_m_axi_gmem1_ARVALID;
wire   [63:0] write_result_U0_m_axi_gmem1_ARADDR;
wire   [0:0] write_result_U0_m_axi_gmem1_ARID;
wire   [31:0] write_result_U0_m_axi_gmem1_ARLEN;
wire   [2:0] write_result_U0_m_axi_gmem1_ARSIZE;
wire   [1:0] write_result_U0_m_axi_gmem1_ARBURST;
wire   [1:0] write_result_U0_m_axi_gmem1_ARLOCK;
wire   [3:0] write_result_U0_m_axi_gmem1_ARCACHE;
wire   [2:0] write_result_U0_m_axi_gmem1_ARPROT;
wire   [3:0] write_result_U0_m_axi_gmem1_ARQOS;
wire   [3:0] write_result_U0_m_axi_gmem1_ARREGION;
wire   [0:0] write_result_U0_m_axi_gmem1_ARUSER;
wire    write_result_U0_m_axi_gmem1_RREADY;
wire    write_result_U0_m_axi_gmem1_BREADY;
wire    write_result_U0_out_r_read;
wire   [12:0] write_result_U0_out_buf_0_address0;
wire    write_result_U0_out_buf_0_ce0;
wire   [12:0] write_result_U0_out_buf_1_address0;
wire    write_result_U0_out_buf_1_ce0;
wire   [12:0] write_result_U0_out_buf_2_address0;
wire    write_result_U0_out_buf_2_ce0;
wire   [12:0] write_result_U0_out_buf_3_address0;
wire    write_result_U0_out_buf_3_ce0;
wire   [12:0] write_result_U0_out_buf_4_address0;
wire    write_result_U0_out_buf_4_ce0;
wire    in_buf_V_i_full_n;
wire    in_buf_V_t_empty_n;
wire    out_buf_V_i_full_n;
wire    out_buf_V_t_empty_n;
wire    out_buf_V_1_i_full_n;
wire    out_buf_V_1_t_empty_n;
wire    out_buf_V_2_i_full_n;
wire    out_buf_V_2_t_empty_n;
wire    out_buf_V_3_i_full_n;
wire    out_buf_V_3_t_empty_n;
wire    out_buf_V_4_i_full_n;
wire    out_buf_V_4_t_empty_n;
wire    out_r_c_full_n;
wire   [63:0] out_r_c_dout;
wire   [2:0] out_r_c_num_data_valid;
wire   [2:0] out_r_c_fifo_cap;
wire    out_r_c_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_read_input_U0_ap_ready;
wire    ap_sync_read_input_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_sync_reg_channel_write_out_buf_V_4 = 1'b0;
#0 ap_sync_reg_channel_write_out_buf_V_3 = 1'b0;
#0 ap_sync_reg_channel_write_out_buf_V_2 = 1'b0;
#0 ap_sync_reg_channel_write_out_buf_V_1 = 1'b0;
#0 ap_sync_reg_channel_write_out_buf_V = 1'b0;
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_read_input_U0_ap_ready = 1'b0;
end

kernel_wrapper_in_buf_V_RAM_AUTO_1R1W #(
    .DataWidth( 256 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
in_buf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(read_input_U0_in_buf_address0),
    .i_ce0(read_input_U0_in_buf_ce0),
    .i_we0(read_input_U0_in_buf_we0),
    .i_d0(read_input_U0_in_buf_d0),
    .i_q0(in_buf_V_i_q0),
    .t_address0(run_inference_U0_in_buf_address0),
    .t_ce0(run_inference_U0_in_buf_ce0),
    .t_we0(1'b0),
    .t_d0(256'd0),
    .t_q0(in_buf_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(in_buf_V_i_full_n),
    .i_write(read_input_U0_ap_done),
    .t_empty_n(in_buf_V_t_empty_n),
    .t_read(run_inference_U0_ap_ready)
);

kernel_wrapper_out_buf_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
out_buf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(run_inference_U0_out_buf_0_address0),
    .i_ce0(run_inference_U0_out_buf_0_ce0),
    .i_we0(run_inference_U0_out_buf_0_we0),
    .i_d0(run_inference_U0_out_buf_0_d0),
    .i_q0(out_buf_V_i_q0),
    .t_address0(write_result_U0_out_buf_0_address0),
    .t_ce0(write_result_U0_out_buf_0_ce0),
    .t_we0(1'b0),
    .t_d0(16'd0),
    .t_q0(out_buf_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_buf_V_i_full_n),
    .i_write(ap_channel_done_out_buf_V),
    .t_empty_n(out_buf_V_t_empty_n),
    .t_read(write_result_U0_ap_ready)
);

kernel_wrapper_out_buf_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
out_buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(run_inference_U0_out_buf_1_address0),
    .i_ce0(run_inference_U0_out_buf_1_ce0),
    .i_we0(run_inference_U0_out_buf_1_we0),
    .i_d0(run_inference_U0_out_buf_1_d0),
    .i_q0(out_buf_V_1_i_q0),
    .t_address0(write_result_U0_out_buf_1_address0),
    .t_ce0(write_result_U0_out_buf_1_ce0),
    .t_we0(1'b0),
    .t_d0(16'd0),
    .t_q0(out_buf_V_1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_buf_V_1_i_full_n),
    .i_write(ap_channel_done_out_buf_V_1),
    .t_empty_n(out_buf_V_1_t_empty_n),
    .t_read(write_result_U0_ap_ready)
);

kernel_wrapper_out_buf_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
out_buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(run_inference_U0_out_buf_2_address0),
    .i_ce0(run_inference_U0_out_buf_2_ce0),
    .i_we0(run_inference_U0_out_buf_2_we0),
    .i_d0(run_inference_U0_out_buf_2_d0),
    .i_q0(out_buf_V_2_i_q0),
    .t_address0(write_result_U0_out_buf_2_address0),
    .t_ce0(write_result_U0_out_buf_2_ce0),
    .t_we0(1'b0),
    .t_d0(16'd0),
    .t_q0(out_buf_V_2_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_buf_V_2_i_full_n),
    .i_write(ap_channel_done_out_buf_V_2),
    .t_empty_n(out_buf_V_2_t_empty_n),
    .t_read(write_result_U0_ap_ready)
);

kernel_wrapper_out_buf_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
out_buf_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(run_inference_U0_out_buf_3_address0),
    .i_ce0(run_inference_U0_out_buf_3_ce0),
    .i_we0(run_inference_U0_out_buf_3_we0),
    .i_d0(run_inference_U0_out_buf_3_d0),
    .i_q0(out_buf_V_3_i_q0),
    .t_address0(write_result_U0_out_buf_3_address0),
    .t_ce0(write_result_U0_out_buf_3_ce0),
    .t_we0(1'b0),
    .t_d0(16'd0),
    .t_q0(out_buf_V_3_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_buf_V_3_i_full_n),
    .i_write(ap_channel_done_out_buf_V_3),
    .t_empty_n(out_buf_V_3_t_empty_n),
    .t_read(write_result_U0_ap_ready)
);

kernel_wrapper_out_buf_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
out_buf_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(run_inference_U0_out_buf_4_address0),
    .i_ce0(run_inference_U0_out_buf_4_ce0),
    .i_we0(run_inference_U0_out_buf_4_we0),
    .i_d0(run_inference_U0_out_buf_4_d0),
    .i_q0(out_buf_V_4_i_q0),
    .t_address0(write_result_U0_out_buf_4_address0),
    .t_ce0(write_result_U0_out_buf_4_ce0),
    .t_we0(1'b0),
    .t_d0(16'd0),
    .t_q0(out_buf_V_4_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_buf_V_4_i_full_n),
    .i_write(ap_channel_done_out_buf_V_4),
    .t_empty_n(out_buf_V_4_t_empty_n),
    .t_read(write_result_U0_ap_ready)
);

kernel_wrapper_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .in_r(in_r),
    .out_r(out_r),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

kernel_wrapper_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 69 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(read_input_U0_m_axi_gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(read_input_U0_m_axi_gmem0_ARADDR),
    .I_ARLEN(read_input_U0_m_axi_gmem0_ARLEN),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(read_input_U0_m_axi_gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RFIFONUM(gmem0_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(512'd0),
    .I_WSTRB(64'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0)
);

kernel_wrapper_gmem1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 69 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem1_RDATA),
    .I_RFIFONUM(gmem1_RFIFONUM),
    .I_AWVALID(write_result_U0_m_axi_gmem1_AWVALID),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(write_result_U0_m_axi_gmem1_AWADDR),
    .I_AWLEN(write_result_U0_m_axi_gmem1_AWLEN),
    .I_WVALID(write_result_U0_m_axi_gmem1_WVALID),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(write_result_U0_m_axi_gmem1_WDATA),
    .I_WSTRB(write_result_U0_m_axi_gmem1_WSTRB),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(write_result_U0_m_axi_gmem1_BREADY)
);

kernel_wrapper_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(entry_proc_U0_ap_start),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .out_r(out_r),
    .out_r_c_din(entry_proc_U0_out_r_c_din),
    .out_r_c_num_data_valid(out_r_c_num_data_valid),
    .out_r_c_fifo_cap(out_r_c_fifo_cap),
    .out_r_c_full_n(out_r_c_full_n),
    .out_r_c_write(entry_proc_U0_out_r_c_write)
);

kernel_wrapper_read_input read_input_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(read_input_U0_ap_start),
    .ap_done(read_input_U0_ap_done),
    .ap_continue(read_input_U0_ap_continue),
    .ap_idle(read_input_U0_ap_idle),
    .ap_ready(read_input_U0_ap_ready),
    .m_axi_gmem0_AWVALID(read_input_U0_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(1'b0),
    .m_axi_gmem0_AWADDR(read_input_U0_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(read_input_U0_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(read_input_U0_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(read_input_U0_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(read_input_U0_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(read_input_U0_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(read_input_U0_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(read_input_U0_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(read_input_U0_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(read_input_U0_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(read_input_U0_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(read_input_U0_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(1'b0),
    .m_axi_gmem0_WDATA(read_input_U0_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(read_input_U0_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(read_input_U0_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(read_input_U0_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(read_input_U0_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(read_input_U0_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(gmem0_ARREADY),
    .m_axi_gmem0_ARADDR(read_input_U0_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(read_input_U0_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(read_input_U0_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(read_input_U0_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(read_input_U0_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(read_input_U0_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(read_input_U0_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(read_input_U0_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(read_input_U0_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(read_input_U0_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(read_input_U0_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(gmem0_RVALID),
    .m_axi_gmem0_RREADY(read_input_U0_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(gmem0_RDATA),
    .m_axi_gmem0_RLAST(gmem0_RLAST),
    .m_axi_gmem0_RID(gmem0_RID),
    .m_axi_gmem0_RFIFONUM(gmem0_RFIFONUM),
    .m_axi_gmem0_RUSER(gmem0_RUSER),
    .m_axi_gmem0_RRESP(gmem0_RRESP),
    .m_axi_gmem0_BVALID(1'b0),
    .m_axi_gmem0_BREADY(read_input_U0_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(2'd0),
    .m_axi_gmem0_BID(1'd0),
    .m_axi_gmem0_BUSER(1'd0),
    .in_r(in_r),
    .in_buf_address0(read_input_U0_in_buf_address0),
    .in_buf_ce0(read_input_U0_in_buf_ce0),
    .in_buf_we0(read_input_U0_in_buf_we0),
    .in_buf_d0(read_input_U0_in_buf_d0)
);

kernel_wrapper_run_inference run_inference_U0(
    .in_buf_address0(run_inference_U0_in_buf_address0),
    .in_buf_ce0(run_inference_U0_in_buf_ce0),
    .in_buf_d0(run_inference_U0_in_buf_d0),
    .in_buf_q0(in_buf_V_t_q0),
    .in_buf_we0(run_inference_U0_in_buf_we0),
    .in_buf_address1(run_inference_U0_in_buf_address1),
    .in_buf_ce1(run_inference_U0_in_buf_ce1),
    .in_buf_d1(run_inference_U0_in_buf_d1),
    .in_buf_q1(256'd0),
    .in_buf_we1(run_inference_U0_in_buf_we1),
    .out_buf_0_address0(run_inference_U0_out_buf_0_address0),
    .out_buf_0_ce0(run_inference_U0_out_buf_0_ce0),
    .out_buf_0_d0(run_inference_U0_out_buf_0_d0),
    .out_buf_0_q0(16'd0),
    .out_buf_0_we0(run_inference_U0_out_buf_0_we0),
    .out_buf_0_address1(run_inference_U0_out_buf_0_address1),
    .out_buf_0_ce1(run_inference_U0_out_buf_0_ce1),
    .out_buf_0_d1(run_inference_U0_out_buf_0_d1),
    .out_buf_0_q1(16'd0),
    .out_buf_0_we1(run_inference_U0_out_buf_0_we1),
    .out_buf_1_address0(run_inference_U0_out_buf_1_address0),
    .out_buf_1_ce0(run_inference_U0_out_buf_1_ce0),
    .out_buf_1_d0(run_inference_U0_out_buf_1_d0),
    .out_buf_1_q0(16'd0),
    .out_buf_1_we0(run_inference_U0_out_buf_1_we0),
    .out_buf_1_address1(run_inference_U0_out_buf_1_address1),
    .out_buf_1_ce1(run_inference_U0_out_buf_1_ce1),
    .out_buf_1_d1(run_inference_U0_out_buf_1_d1),
    .out_buf_1_q1(16'd0),
    .out_buf_1_we1(run_inference_U0_out_buf_1_we1),
    .out_buf_2_address0(run_inference_U0_out_buf_2_address0),
    .out_buf_2_ce0(run_inference_U0_out_buf_2_ce0),
    .out_buf_2_d0(run_inference_U0_out_buf_2_d0),
    .out_buf_2_q0(16'd0),
    .out_buf_2_we0(run_inference_U0_out_buf_2_we0),
    .out_buf_2_address1(run_inference_U0_out_buf_2_address1),
    .out_buf_2_ce1(run_inference_U0_out_buf_2_ce1),
    .out_buf_2_d1(run_inference_U0_out_buf_2_d1),
    .out_buf_2_q1(16'd0),
    .out_buf_2_we1(run_inference_U0_out_buf_2_we1),
    .out_buf_3_address0(run_inference_U0_out_buf_3_address0),
    .out_buf_3_ce0(run_inference_U0_out_buf_3_ce0),
    .out_buf_3_d0(run_inference_U0_out_buf_3_d0),
    .out_buf_3_q0(16'd0),
    .out_buf_3_we0(run_inference_U0_out_buf_3_we0),
    .out_buf_3_address1(run_inference_U0_out_buf_3_address1),
    .out_buf_3_ce1(run_inference_U0_out_buf_3_ce1),
    .out_buf_3_d1(run_inference_U0_out_buf_3_d1),
    .out_buf_3_q1(16'd0),
    .out_buf_3_we1(run_inference_U0_out_buf_3_we1),
    .out_buf_4_address0(run_inference_U0_out_buf_4_address0),
    .out_buf_4_ce0(run_inference_U0_out_buf_4_ce0),
    .out_buf_4_d0(run_inference_U0_out_buf_4_d0),
    .out_buf_4_q0(16'd0),
    .out_buf_4_we0(run_inference_U0_out_buf_4_we0),
    .out_buf_4_address1(run_inference_U0_out_buf_4_address1),
    .out_buf_4_ce1(run_inference_U0_out_buf_4_ce1),
    .out_buf_4_d1(run_inference_U0_out_buf_4_d1),
    .out_buf_4_q1(16'd0),
    .out_buf_4_we1(run_inference_U0_out_buf_4_we1),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .in_buf_empty_n(1'b0),
    .in_buf_read(run_inference_U0_in_buf_read),
    .out_buf_0_full_n(out_buf_V_i_full_n),
    .out_buf_0_write(run_inference_U0_out_buf_0_write),
    .out_buf_1_full_n(out_buf_V_1_i_full_n),
    .out_buf_1_write(run_inference_U0_out_buf_1_write),
    .out_buf_2_full_n(out_buf_V_2_i_full_n),
    .out_buf_2_write(run_inference_U0_out_buf_2_write),
    .out_buf_3_full_n(out_buf_V_3_i_full_n),
    .out_buf_3_write(run_inference_U0_out_buf_3_write),
    .out_buf_4_full_n(out_buf_V_4_i_full_n),
    .out_buf_4_write(run_inference_U0_out_buf_4_write),
    .ap_start(run_inference_U0_ap_start),
    .ap_done(run_inference_U0_ap_done),
    .ap_ready(run_inference_U0_ap_ready),
    .ap_idle(run_inference_U0_ap_idle),
    .ap_continue(run_inference_U0_ap_continue)
);

kernel_wrapper_write_result write_result_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(write_result_U0_ap_start),
    .ap_done(write_result_U0_ap_done),
    .ap_continue(write_result_U0_ap_continue),
    .ap_idle(write_result_U0_ap_idle),
    .ap_ready(write_result_U0_ap_ready),
    .m_axi_gmem1_AWVALID(write_result_U0_m_axi_gmem1_AWVALID),
    .m_axi_gmem1_AWREADY(gmem1_AWREADY),
    .m_axi_gmem1_AWADDR(write_result_U0_m_axi_gmem1_AWADDR),
    .m_axi_gmem1_AWID(write_result_U0_m_axi_gmem1_AWID),
    .m_axi_gmem1_AWLEN(write_result_U0_m_axi_gmem1_AWLEN),
    .m_axi_gmem1_AWSIZE(write_result_U0_m_axi_gmem1_AWSIZE),
    .m_axi_gmem1_AWBURST(write_result_U0_m_axi_gmem1_AWBURST),
    .m_axi_gmem1_AWLOCK(write_result_U0_m_axi_gmem1_AWLOCK),
    .m_axi_gmem1_AWCACHE(write_result_U0_m_axi_gmem1_AWCACHE),
    .m_axi_gmem1_AWPROT(write_result_U0_m_axi_gmem1_AWPROT),
    .m_axi_gmem1_AWQOS(write_result_U0_m_axi_gmem1_AWQOS),
    .m_axi_gmem1_AWREGION(write_result_U0_m_axi_gmem1_AWREGION),
    .m_axi_gmem1_AWUSER(write_result_U0_m_axi_gmem1_AWUSER),
    .m_axi_gmem1_WVALID(write_result_U0_m_axi_gmem1_WVALID),
    .m_axi_gmem1_WREADY(gmem1_WREADY),
    .m_axi_gmem1_WDATA(write_result_U0_m_axi_gmem1_WDATA),
    .m_axi_gmem1_WSTRB(write_result_U0_m_axi_gmem1_WSTRB),
    .m_axi_gmem1_WLAST(write_result_U0_m_axi_gmem1_WLAST),
    .m_axi_gmem1_WID(write_result_U0_m_axi_gmem1_WID),
    .m_axi_gmem1_WUSER(write_result_U0_m_axi_gmem1_WUSER),
    .m_axi_gmem1_ARVALID(write_result_U0_m_axi_gmem1_ARVALID),
    .m_axi_gmem1_ARREADY(1'b0),
    .m_axi_gmem1_ARADDR(write_result_U0_m_axi_gmem1_ARADDR),
    .m_axi_gmem1_ARID(write_result_U0_m_axi_gmem1_ARID),
    .m_axi_gmem1_ARLEN(write_result_U0_m_axi_gmem1_ARLEN),
    .m_axi_gmem1_ARSIZE(write_result_U0_m_axi_gmem1_ARSIZE),
    .m_axi_gmem1_ARBURST(write_result_U0_m_axi_gmem1_ARBURST),
    .m_axi_gmem1_ARLOCK(write_result_U0_m_axi_gmem1_ARLOCK),
    .m_axi_gmem1_ARCACHE(write_result_U0_m_axi_gmem1_ARCACHE),
    .m_axi_gmem1_ARPROT(write_result_U0_m_axi_gmem1_ARPROT),
    .m_axi_gmem1_ARQOS(write_result_U0_m_axi_gmem1_ARQOS),
    .m_axi_gmem1_ARREGION(write_result_U0_m_axi_gmem1_ARREGION),
    .m_axi_gmem1_ARUSER(write_result_U0_m_axi_gmem1_ARUSER),
    .m_axi_gmem1_RVALID(1'b0),
    .m_axi_gmem1_RREADY(write_result_U0_m_axi_gmem1_RREADY),
    .m_axi_gmem1_RDATA(32'd0),
    .m_axi_gmem1_RLAST(1'b0),
    .m_axi_gmem1_RID(1'd0),
    .m_axi_gmem1_RFIFONUM(9'd0),
    .m_axi_gmem1_RUSER(1'd0),
    .m_axi_gmem1_RRESP(2'd0),
    .m_axi_gmem1_BVALID(gmem1_BVALID),
    .m_axi_gmem1_BREADY(write_result_U0_m_axi_gmem1_BREADY),
    .m_axi_gmem1_BRESP(gmem1_BRESP),
    .m_axi_gmem1_BID(gmem1_BID),
    .m_axi_gmem1_BUSER(gmem1_BUSER),
    .out_r_dout(out_r_c_dout),
    .out_r_num_data_valid(out_r_c_num_data_valid),
    .out_r_fifo_cap(out_r_c_fifo_cap),
    .out_r_empty_n(out_r_c_empty_n),
    .out_r_read(write_result_U0_out_r_read),
    .out_buf_0_address0(write_result_U0_out_buf_0_address0),
    .out_buf_0_ce0(write_result_U0_out_buf_0_ce0),
    .out_buf_0_q0(out_buf_V_t_q0),
    .out_buf_1_address0(write_result_U0_out_buf_1_address0),
    .out_buf_1_ce0(write_result_U0_out_buf_1_ce0),
    .out_buf_1_q0(out_buf_V_1_t_q0),
    .out_buf_2_address0(write_result_U0_out_buf_2_address0),
    .out_buf_2_ce0(write_result_U0_out_buf_2_ce0),
    .out_buf_2_q0(out_buf_V_2_t_q0),
    .out_buf_3_address0(write_result_U0_out_buf_3_address0),
    .out_buf_3_ce0(write_result_U0_out_buf_3_ce0),
    .out_buf_3_q0(out_buf_V_3_t_q0),
    .out_buf_4_address0(write_result_U0_out_buf_4_address0),
    .out_buf_4_ce0(write_result_U0_out_buf_4_ce0),
    .out_buf_4_q0(out_buf_V_4_t_q0)
);

kernel_wrapper_fifo_w64_d4_S out_r_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_out_r_c_din),
    .if_full_n(out_r_c_full_n),
    .if_write(entry_proc_U0_out_r_c_write),
    .if_dout(out_r_c_dout),
    .if_num_data_valid(out_r_c_num_data_valid),
    .if_fifo_cap(out_r_c_fifo_cap),
    .if_empty_n(out_r_c_empty_n),
    .if_read(write_result_U0_out_r_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_out_buf_V <= 1'b0;
    end else begin
        if (((run_inference_U0_ap_done & run_inference_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_buf_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_buf_V <= ap_sync_channel_write_out_buf_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_out_buf_V_1 <= 1'b0;
    end else begin
        if (((run_inference_U0_ap_done & run_inference_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_buf_V_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_buf_V_1 <= ap_sync_channel_write_out_buf_V_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_out_buf_V_2 <= 1'b0;
    end else begin
        if (((run_inference_U0_ap_done & run_inference_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_buf_V_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_buf_V_2 <= ap_sync_channel_write_out_buf_V_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_out_buf_V_3 <= 1'b0;
    end else begin
        if (((run_inference_U0_ap_done & run_inference_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_buf_V_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_buf_V_3 <= ap_sync_channel_write_out_buf_V_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_out_buf_V_4 <= 1'b0;
    end else begin
        if (((run_inference_U0_ap_done & run_inference_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_buf_V_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_buf_V_4 <= ap_sync_channel_write_out_buf_V_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_read_input_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_read_input_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_read_input_U0_ap_ready <= ap_sync_read_input_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

assign ap_channel_done_out_buf_V = (run_inference_U0_ap_done & (ap_sync_reg_channel_write_out_buf_V ^ 1'b1));

assign ap_channel_done_out_buf_V_1 = (run_inference_U0_ap_done & (ap_sync_reg_channel_write_out_buf_V_1 ^ 1'b1));

assign ap_channel_done_out_buf_V_2 = (run_inference_U0_ap_done & (ap_sync_reg_channel_write_out_buf_V_2 ^ 1'b1));

assign ap_channel_done_out_buf_V_3 = (run_inference_U0_ap_done & (ap_sync_reg_channel_write_out_buf_V_3 ^ 1'b1));

assign ap_channel_done_out_buf_V_4 = (run_inference_U0_ap_done & (ap_sync_reg_channel_write_out_buf_V_4 ^ 1'b1));

assign ap_done = write_result_U0_ap_done;

assign ap_idle = (write_result_U0_ap_idle & run_inference_U0_ap_idle & read_input_U0_ap_idle & (out_buf_V_4_t_empty_n ^ 1'b1) & (out_buf_V_3_t_empty_n ^ 1'b1) & (out_buf_V_2_t_empty_n ^ 1'b1) & (out_buf_V_1_t_empty_n ^ 1'b1) & (out_buf_V_t_empty_n ^ 1'b1) & (in_buf_V_t_empty_n ^ 1'b1) & entry_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_channel_write_out_buf_V = ((run_inference_U0_out_buf_0_full_n & ap_channel_done_out_buf_V) | ap_sync_reg_channel_write_out_buf_V);

assign ap_sync_channel_write_out_buf_V_1 = ((run_inference_U0_out_buf_1_full_n & ap_channel_done_out_buf_V_1) | ap_sync_reg_channel_write_out_buf_V_1);

assign ap_sync_channel_write_out_buf_V_2 = ((run_inference_U0_out_buf_2_full_n & ap_channel_done_out_buf_V_2) | ap_sync_reg_channel_write_out_buf_V_2);

assign ap_sync_channel_write_out_buf_V_3 = ((run_inference_U0_out_buf_3_full_n & ap_channel_done_out_buf_V_3) | ap_sync_reg_channel_write_out_buf_V_3);

assign ap_sync_channel_write_out_buf_V_4 = ((run_inference_U0_out_buf_4_full_n & ap_channel_done_out_buf_V_4) | ap_sync_reg_channel_write_out_buf_V_4);

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_read_input_U0_ap_ready = (read_input_U0_ap_ready | ap_sync_reg_read_input_U0_ap_ready);

assign ap_sync_ready = (ap_sync_read_input_U0_ap_ready & ap_sync_entry_proc_U0_ap_ready);

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign gmem0_RID = 1'd0;

assign gmem0_RLAST = 1'b0;

assign gmem0_RRESP = 2'd0;

assign gmem0_RUSER = 1'd0;

assign gmem1_BID = 1'd0;

assign gmem1_BRESP = 2'd0;

assign gmem1_BUSER = 1'd0;

assign read_input_U0_ap_continue = in_buf_V_i_full_n;

assign read_input_U0_ap_start = ((ap_sync_reg_read_input_U0_ap_ready ^ 1'b1) & ap_start);

assign run_inference_U0_ap_continue = (ap_sync_channel_write_out_buf_V_4 & ap_sync_channel_write_out_buf_V_3 & ap_sync_channel_write_out_buf_V_2 & ap_sync_channel_write_out_buf_V_1 & ap_sync_channel_write_out_buf_V);

assign run_inference_U0_ap_start = in_buf_V_t_empty_n;

assign run_inference_U0_out_buf_0_full_n = out_buf_V_i_full_n;

assign run_inference_U0_out_buf_1_full_n = out_buf_V_1_i_full_n;

assign run_inference_U0_out_buf_2_full_n = out_buf_V_2_i_full_n;

assign run_inference_U0_out_buf_3_full_n = out_buf_V_3_i_full_n;

assign run_inference_U0_out_buf_4_full_n = out_buf_V_4_i_full_n;

assign write_result_U0_ap_continue = ap_continue;

assign write_result_U0_ap_start = (out_buf_V_t_empty_n & out_buf_V_4_t_empty_n & out_buf_V_3_t_empty_n & out_buf_V_2_t_empty_n & out_buf_V_1_t_empty_n);


reg find_df_deadlock = 0;
// synthesis translate_off
`include "kernel_wrapper_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //kernel_wrapper

