// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_wrapper_normalize_array_ap_fixed_42u_array_ap_fixed_16_6_5_3_0_42u_config17_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer15_out_dout,
        layer15_out_num_data_valid,
        layer15_out_fifo_cap,
        layer15_out_empty_n,
        layer15_out_read,
        layer17_out_din,
        layer17_out_num_data_valid,
        layer17_out_fifo_cap,
        layer17_out_full_n,
        layer17_out_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [671:0] layer15_out_dout;
input  [1:0] layer15_out_num_data_valid;
input  [1:0] layer15_out_fifo_cap;
input   layer15_out_empty_n;
output   layer15_out_read;
output  [671:0] layer17_out_din;
input  [1:0] layer17_out_num_data_valid;
input  [1:0] layer17_out_fifo_cap;
input   layer17_out_full_n;
output   layer17_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer15_out_read;
reg layer17_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer15_out_blk_n;
reg    layer17_out_blk_n;
wire    ap_CS_fsm_state2;
wire   [25:0] mul_ln1347_fu_387_p2;
reg   [25:0] mul_ln1347_reg_7639;
wire   [25:0] mul_ln1347_63_fu_383_p2;
reg   [25:0] mul_ln1347_63_reg_7643;
wire   [25:0] mul_ln1347_64_fu_386_p2;
reg   [25:0] mul_ln1347_64_reg_7647;
wire   [25:0] mul_ln1347_65_fu_385_p2;
reg   [25:0] mul_ln1347_65_reg_7651;
wire   [25:0] mul_ln1347_66_fu_400_p2;
reg   [25:0] mul_ln1347_66_reg_7655;
wire   [25:0] mul_ln1347_67_fu_413_p2;
reg   [25:0] mul_ln1347_67_reg_7659;
wire   [25:0] mul_ln1347_68_fu_390_p2;
reg   [25:0] mul_ln1347_68_reg_7663;
wire   [25:0] mul_ln1347_69_fu_406_p2;
reg   [25:0] mul_ln1347_69_reg_7667;
wire   [25:0] mul_ln1347_70_fu_399_p2;
reg   [25:0] mul_ln1347_70_reg_7671;
wire   [25:0] mul_ln1347_71_fu_375_p2;
reg   [25:0] mul_ln1347_71_reg_7675;
wire   [25:0] mul_ln1347_72_fu_377_p2;
reg   [25:0] mul_ln1347_72_reg_7679;
wire   [25:0] mul_ln1347_73_fu_380_p2;
reg   [25:0] mul_ln1347_73_reg_7683;
wire   [25:0] mul_ln1347_74_fu_391_p2;
reg   [25:0] mul_ln1347_74_reg_7687;
wire   [25:0] mul_ln1347_75_fu_404_p2;
reg   [25:0] mul_ln1347_75_reg_7691;
wire   [25:0] mul_ln1347_76_fu_384_p2;
reg   [25:0] mul_ln1347_76_reg_7695;
wire   [25:0] mul_ln1347_77_fu_412_p2;
reg   [25:0] mul_ln1347_77_reg_7699;
wire   [25:0] mul_ln1347_78_fu_389_p2;
reg   [25:0] mul_ln1347_78_reg_7703;
wire   [25:0] mul_ln1347_79_fu_378_p2;
reg   [25:0] mul_ln1347_79_reg_7707;
wire   [25:0] mul_ln1347_80_fu_402_p2;
reg   [25:0] mul_ln1347_80_reg_7711;
wire   [25:0] mul_ln1347_81_fu_376_p2;
reg   [25:0] mul_ln1347_81_reg_7715;
wire   [25:0] mul_ln1347_82_fu_393_p2;
reg   [25:0] mul_ln1347_82_reg_7719;
wire   [25:0] mul_ln1347_83_fu_396_p2;
reg   [25:0] mul_ln1347_83_reg_7723;
wire   [25:0] mul_ln1347_84_fu_405_p2;
reg   [25:0] mul_ln1347_84_reg_7727;
wire   [25:0] mul_ln1347_85_fu_403_p2;
reg   [25:0] mul_ln1347_85_reg_7731;
wire   [25:0] mul_ln1347_86_fu_374_p2;
reg   [25:0] mul_ln1347_86_reg_7735;
wire   [25:0] mul_ln1347_87_fu_397_p2;
reg   [25:0] mul_ln1347_87_reg_7739;
wire   [25:0] mul_ln1347_88_fu_394_p2;
reg   [25:0] mul_ln1347_88_reg_7743;
wire   [25:0] mul_ln1347_89_fu_388_p2;
reg   [25:0] mul_ln1347_89_reg_7747;
wire   [25:0] mul_ln1347_90_fu_401_p2;
reg   [25:0] mul_ln1347_90_reg_7751;
wire   [25:0] mul_ln1347_91_fu_414_p2;
reg   [25:0] mul_ln1347_91_reg_7755;
wire   [25:0] mul_ln1347_92_fu_398_p2;
reg   [25:0] mul_ln1347_92_reg_7759;
wire   [25:0] mul_ln1347_93_fu_392_p2;
reg   [25:0] mul_ln1347_93_reg_7763;
wire   [25:0] mul_ln1347_94_fu_381_p2;
reg   [25:0] mul_ln1347_94_reg_7767;
wire   [25:0] mul_ln1347_95_fu_395_p2;
reg   [25:0] mul_ln1347_95_reg_7771;
wire   [25:0] mul_ln1347_96_fu_409_p2;
reg   [25:0] mul_ln1347_96_reg_7775;
wire   [25:0] mul_ln1347_97_fu_410_p2;
reg   [25:0] mul_ln1347_97_reg_7779;
wire   [25:0] mul_ln1347_98_fu_373_p2;
reg   [25:0] mul_ln1347_98_reg_7783;
wire   [25:0] mul_ln1347_99_fu_379_p2;
reg   [25:0] mul_ln1347_99_reg_7787;
wire   [25:0] mul_ln1347_100_fu_382_p2;
reg   [25:0] mul_ln1347_100_reg_7791;
wire   [25:0] mul_ln1347_101_fu_407_p2;
reg   [25:0] mul_ln1347_101_reg_7795;
wire   [25:0] mul_ln1347_102_fu_408_p2;
reg   [25:0] mul_ln1347_102_reg_7799;
wire   [25:0] mul_ln1347_103_fu_411_p2;
reg   [25:0] mul_ln1347_103_reg_7803;
reg    ap_block_state1;
wire   [11:0] mul_ln1347_98_fu_373_p1;
wire   [11:0] mul_ln1347_86_fu_374_p1;
wire   [11:0] mul_ln1347_71_fu_375_p1;
wire   [11:0] mul_ln1347_81_fu_376_p1;
wire   [11:0] mul_ln1347_72_fu_377_p1;
wire   [11:0] mul_ln1347_79_fu_378_p1;
wire   [11:0] mul_ln1347_99_fu_379_p1;
wire   [11:0] mul_ln1347_73_fu_380_p1;
wire   [11:0] mul_ln1347_94_fu_381_p1;
wire   [11:0] mul_ln1347_100_fu_382_p1;
wire   [11:0] mul_ln1347_63_fu_383_p1;
wire   [11:0] mul_ln1347_76_fu_384_p1;
wire   [11:0] mul_ln1347_65_fu_385_p1;
wire   [11:0] mul_ln1347_64_fu_386_p1;
wire   [11:0] mul_ln1347_fu_387_p1;
wire   [11:0] mul_ln1347_89_fu_388_p1;
wire   [12:0] mul_ln1347_78_fu_389_p1;
wire   [11:0] mul_ln1347_68_fu_390_p1;
wire   [11:0] mul_ln1347_74_fu_391_p1;
wire   [11:0] mul_ln1347_93_fu_392_p1;
wire   [11:0] mul_ln1347_82_fu_393_p1;
wire   [12:0] mul_ln1347_88_fu_394_p1;
wire   [11:0] mul_ln1347_95_fu_395_p1;
wire   [11:0] mul_ln1347_83_fu_396_p1;
wire   [11:0] mul_ln1347_87_fu_397_p1;
wire   [11:0] mul_ln1347_92_fu_398_p1;
wire   [11:0] mul_ln1347_70_fu_399_p1;
wire   [11:0] mul_ln1347_66_fu_400_p1;
wire   [11:0] mul_ln1347_90_fu_401_p1;
wire   [11:0] mul_ln1347_80_fu_402_p1;
wire   [11:0] mul_ln1347_85_fu_403_p1;
wire   [11:0] mul_ln1347_75_fu_404_p1;
wire   [11:0] mul_ln1347_84_fu_405_p1;
wire   [11:0] mul_ln1347_69_fu_406_p1;
wire   [11:0] mul_ln1347_101_fu_407_p1;
wire   [11:0] mul_ln1347_102_fu_408_p1;
wire   [11:0] mul_ln1347_96_fu_409_p1;
wire   [11:0] mul_ln1347_97_fu_410_p1;
wire   [11:0] mul_ln1347_103_fu_411_p1;
wire   [11:0] mul_ln1347_77_fu_412_p1;
wire   [11:0] mul_ln1347_67_fu_413_p1;
wire   [11:0] mul_ln1347_91_fu_414_p1;
wire  signed [15:0] a_V_fu_7808_p1;
wire  signed [15:0] a_V_64_fu_7832_p4;
wire  signed [15:0] a_V_65_fu_7842_p4;
wire  signed [15:0] a_V_66_fu_7852_p4;
wire  signed [15:0] a_V_67_fu_7862_p4;
wire  signed [15:0] a_V_68_fu_7872_p4;
wire  signed [15:0] a_V_69_fu_7882_p4;
wire  signed [15:0] a_V_70_fu_7892_p4;
wire  signed [15:0] a_V_71_fu_7902_p4;
wire  signed [15:0] a_V_72_fu_7912_p4;
wire  signed [15:0] a_V_73_fu_7922_p4;
wire  signed [15:0] a_V_74_fu_7932_p4;
wire  signed [15:0] a_V_75_fu_7942_p4;
wire  signed [15:0] a_V_76_fu_7952_p4;
wire  signed [15:0] a_V_77_fu_7962_p4;
wire  signed [15:0] a_V_78_fu_7972_p4;
wire  signed [15:0] a_V_79_fu_7982_p4;
wire  signed [15:0] a_V_80_fu_7992_p4;
wire  signed [15:0] a_V_81_fu_8002_p4;
wire  signed [15:0] a_V_82_fu_8012_p4;
wire  signed [15:0] a_V_83_fu_8022_p4;
wire  signed [15:0] a_V_84_fu_8032_p4;
wire  signed [15:0] a_V_85_fu_8042_p4;
wire  signed [15:0] a_V_86_fu_8052_p4;
wire  signed [15:0] a_V_87_fu_8062_p4;
wire  signed [15:0] a_V_88_fu_8072_p4;
wire  signed [15:0] a_V_89_fu_8082_p4;
wire  signed [15:0] a_V_90_fu_8092_p4;
wire  signed [15:0] a_V_91_fu_8102_p4;
wire  signed [15:0] a_V_92_fu_8112_p4;
wire  signed [15:0] a_V_93_fu_8122_p4;
wire  signed [15:0] a_V_94_fu_8132_p4;
wire  signed [15:0] a_V_95_fu_8142_p4;
wire  signed [15:0] a_V_96_fu_8152_p4;
wire  signed [15:0] a_V_97_fu_8162_p4;
wire  signed [15:0] a_V_98_fu_8172_p4;
wire  signed [15:0] a_V_99_fu_8182_p4;
wire  signed [15:0] a_V_100_fu_8192_p4;
wire  signed [15:0] a_V_101_fu_8202_p4;
wire  signed [15:0] a_V_102_fu_8212_p4;
wire  signed [15:0] a_V_103_fu_7812_p4;
wire  signed [15:0] a_V_104_fu_7822_p4;
wire   [25:0] ret_V_fu_8432_p2;
wire   [25:0] ret_V_77_fu_8448_p2;
wire   [25:0] ret_V_78_fu_8464_p2;
wire   [25:0] ret_V_79_fu_8480_p2;
wire   [25:0] ret_V_80_fu_8496_p2;
wire   [25:0] ret_V_81_fu_8512_p2;
wire   [25:0] ret_V_82_fu_8528_p2;
wire   [25:0] ret_V_83_fu_8544_p2;
wire   [25:0] ret_V_84_fu_8560_p2;
wire   [25:0] ret_V_85_fu_8576_p2;
wire   [25:0] ret_V_86_fu_8592_p2;
wire   [25:0] ret_V_87_fu_8608_p2;
wire   [25:0] ret_V_88_fu_8624_p2;
wire   [25:0] ret_V_89_fu_8640_p2;
wire   [25:0] ret_V_90_fu_8656_p2;
wire   [25:0] ret_V_91_fu_8672_p2;
wire   [25:0] ret_V_92_fu_8688_p2;
wire   [25:0] ret_V_93_fu_8704_p2;
wire   [25:0] ret_V_94_fu_8720_p2;
wire   [25:0] ret_V_95_fu_8736_p2;
wire   [25:0] ret_V_96_fu_8752_p2;
wire   [25:0] ret_V_97_fu_8768_p2;
wire   [25:0] ret_V_98_fu_8784_p2;
wire   [25:0] ret_V_99_fu_8800_p2;
wire   [25:0] ret_V_100_fu_8816_p2;
wire   [25:0] ret_V_101_fu_8832_p2;
wire   [25:0] ret_V_102_fu_8848_p2;
wire   [25:0] ret_V_103_fu_8864_p2;
wire   [25:0] ret_V_104_fu_8880_p2;
wire   [25:0] ret_V_105_fu_8896_p2;
wire   [25:0] ret_V_106_fu_8912_p2;
wire   [25:0] ret_V_107_fu_8928_p2;
wire   [25:0] ret_V_108_fu_8944_p2;
wire   [25:0] ret_V_109_fu_8960_p2;
wire   [25:0] ret_V_110_fu_8976_p2;
wire   [25:0] ret_V_111_fu_8992_p2;
wire   [25:0] ret_V_112_fu_9008_p2;
wire   [25:0] ret_V_113_fu_9024_p2;
wire   [25:0] ret_V_114_fu_9040_p2;
wire   [25:0] ret_V_115_fu_9056_p2;
wire   [25:0] ret_V_116_fu_9072_p2;
wire   [25:0] ret_V_117_fu_9088_p2;
wire   [15:0] trunc_ln818_102_fu_9094_p4;
wire   [15:0] trunc_ln818_101_fu_9078_p4;
wire   [15:0] trunc_ln818_100_fu_9062_p4;
wire   [15:0] trunc_ln818_99_fu_9046_p4;
wire   [15:0] trunc_ln818_98_fu_9030_p4;
wire   [15:0] trunc_ln818_97_fu_9014_p4;
wire   [15:0] trunc_ln818_96_fu_8998_p4;
wire   [15:0] trunc_ln818_95_fu_8982_p4;
wire   [15:0] trunc_ln818_94_fu_8966_p4;
wire   [15:0] trunc_ln818_93_fu_8950_p4;
wire   [15:0] trunc_ln818_92_fu_8934_p4;
wire   [15:0] trunc_ln818_91_fu_8918_p4;
wire   [15:0] trunc_ln818_90_fu_8902_p4;
wire   [15:0] trunc_ln818_89_fu_8886_p4;
wire   [15:0] trunc_ln818_88_fu_8870_p4;
wire   [15:0] trunc_ln818_87_fu_8854_p4;
wire   [15:0] trunc_ln818_86_fu_8838_p4;
wire   [15:0] trunc_ln818_85_fu_8822_p4;
wire   [15:0] trunc_ln818_84_fu_8806_p4;
wire   [15:0] trunc_ln818_83_fu_8790_p4;
wire   [15:0] trunc_ln818_82_fu_8774_p4;
wire   [15:0] trunc_ln818_81_fu_8758_p4;
wire   [15:0] trunc_ln818_80_fu_8742_p4;
wire   [15:0] trunc_ln818_79_fu_8726_p4;
wire   [15:0] trunc_ln818_78_fu_8710_p4;
wire   [15:0] trunc_ln818_77_fu_8694_p4;
wire   [15:0] trunc_ln818_76_fu_8678_p4;
wire   [15:0] trunc_ln818_75_fu_8662_p4;
wire   [15:0] trunc_ln818_74_fu_8646_p4;
wire   [15:0] trunc_ln818_73_fu_8630_p4;
wire   [15:0] trunc_ln818_72_fu_8614_p4;
wire   [15:0] trunc_ln818_71_fu_8598_p4;
wire   [15:0] trunc_ln818_70_fu_8582_p4;
wire   [15:0] trunc_ln818_69_fu_8566_p4;
wire   [15:0] trunc_ln818_68_fu_8550_p4;
wire   [15:0] trunc_ln818_67_fu_8534_p4;
wire   [15:0] trunc_ln818_66_fu_8518_p4;
wire   [15:0] trunc_ln818_65_fu_8502_p4;
wire   [15:0] trunc_ln818_64_fu_8486_p4;
wire   [15:0] trunc_ln818_63_fu_8470_p4;
wire   [15:0] trunc_ln818_s_fu_8454_p4;
wire   [15:0] trunc_ln_fu_8438_p4;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
end

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1024(
    .din0(a_V_99_fu_8182_p4),
    .din1(mul_ln1347_98_fu_373_p1),
    .dout(mul_ln1347_98_fu_373_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1025(
    .din0(a_V_87_fu_8062_p4),
    .din1(mul_ln1347_86_fu_374_p1),
    .dout(mul_ln1347_86_fu_374_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1026(
    .din0(a_V_72_fu_7912_p4),
    .din1(mul_ln1347_71_fu_375_p1),
    .dout(mul_ln1347_71_fu_375_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1027(
    .din0(a_V_82_fu_8012_p4),
    .din1(mul_ln1347_81_fu_376_p1),
    .dout(mul_ln1347_81_fu_376_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1028(
    .din0(a_V_73_fu_7922_p4),
    .din1(mul_ln1347_72_fu_377_p1),
    .dout(mul_ln1347_72_fu_377_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1029(
    .din0(a_V_80_fu_7992_p4),
    .din1(mul_ln1347_79_fu_378_p1),
    .dout(mul_ln1347_79_fu_378_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1030(
    .din0(a_V_100_fu_8192_p4),
    .din1(mul_ln1347_99_fu_379_p1),
    .dout(mul_ln1347_99_fu_379_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1031(
    .din0(a_V_74_fu_7932_p4),
    .din1(mul_ln1347_73_fu_380_p1),
    .dout(mul_ln1347_73_fu_380_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1032(
    .din0(a_V_95_fu_8142_p4),
    .din1(mul_ln1347_94_fu_381_p1),
    .dout(mul_ln1347_94_fu_381_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1033(
    .din0(a_V_101_fu_8202_p4),
    .din1(mul_ln1347_100_fu_382_p1),
    .dout(mul_ln1347_100_fu_382_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1034(
    .din0(a_V_64_fu_7832_p4),
    .din1(mul_ln1347_63_fu_383_p1),
    .dout(mul_ln1347_63_fu_383_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1035(
    .din0(a_V_77_fu_7962_p4),
    .din1(mul_ln1347_76_fu_384_p1),
    .dout(mul_ln1347_76_fu_384_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1036(
    .din0(a_V_66_fu_7852_p4),
    .din1(mul_ln1347_65_fu_385_p1),
    .dout(mul_ln1347_65_fu_385_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1037(
    .din0(a_V_65_fu_7842_p4),
    .din1(mul_ln1347_64_fu_386_p1),
    .dout(mul_ln1347_64_fu_386_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1038(
    .din0(a_V_fu_7808_p1),
    .din1(mul_ln1347_fu_387_p1),
    .dout(mul_ln1347_fu_387_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1039(
    .din0(a_V_90_fu_8092_p4),
    .din1(mul_ln1347_89_fu_388_p1),
    .dout(mul_ln1347_89_fu_388_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1040(
    .din0(a_V_79_fu_7982_p4),
    .din1(mul_ln1347_78_fu_389_p1),
    .dout(mul_ln1347_78_fu_389_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1041(
    .din0(a_V_69_fu_7882_p4),
    .din1(mul_ln1347_68_fu_390_p1),
    .dout(mul_ln1347_68_fu_390_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1042(
    .din0(a_V_75_fu_7942_p4),
    .din1(mul_ln1347_74_fu_391_p1),
    .dout(mul_ln1347_74_fu_391_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1043(
    .din0(a_V_94_fu_8132_p4),
    .din1(mul_ln1347_93_fu_392_p1),
    .dout(mul_ln1347_93_fu_392_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1044(
    .din0(a_V_83_fu_8022_p4),
    .din1(mul_ln1347_82_fu_393_p1),
    .dout(mul_ln1347_82_fu_393_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1045(
    .din0(a_V_89_fu_8082_p4),
    .din1(mul_ln1347_88_fu_394_p1),
    .dout(mul_ln1347_88_fu_394_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1046(
    .din0(a_V_96_fu_8152_p4),
    .din1(mul_ln1347_95_fu_395_p1),
    .dout(mul_ln1347_95_fu_395_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1047(
    .din0(a_V_84_fu_8032_p4),
    .din1(mul_ln1347_83_fu_396_p1),
    .dout(mul_ln1347_83_fu_396_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1048(
    .din0(a_V_88_fu_8072_p4),
    .din1(mul_ln1347_87_fu_397_p1),
    .dout(mul_ln1347_87_fu_397_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1049(
    .din0(a_V_93_fu_8122_p4),
    .din1(mul_ln1347_92_fu_398_p1),
    .dout(mul_ln1347_92_fu_398_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1050(
    .din0(a_V_71_fu_7902_p4),
    .din1(mul_ln1347_70_fu_399_p1),
    .dout(mul_ln1347_70_fu_399_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1051(
    .din0(a_V_67_fu_7862_p4),
    .din1(mul_ln1347_66_fu_400_p1),
    .dout(mul_ln1347_66_fu_400_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1052(
    .din0(a_V_91_fu_8102_p4),
    .din1(mul_ln1347_90_fu_401_p1),
    .dout(mul_ln1347_90_fu_401_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1053(
    .din0(a_V_81_fu_8002_p4),
    .din1(mul_ln1347_80_fu_402_p1),
    .dout(mul_ln1347_80_fu_402_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1054(
    .din0(a_V_86_fu_8052_p4),
    .din1(mul_ln1347_85_fu_403_p1),
    .dout(mul_ln1347_85_fu_403_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1055(
    .din0(a_V_76_fu_7952_p4),
    .din1(mul_ln1347_75_fu_404_p1),
    .dout(mul_ln1347_75_fu_404_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1056(
    .din0(a_V_85_fu_8042_p4),
    .din1(mul_ln1347_84_fu_405_p1),
    .dout(mul_ln1347_84_fu_405_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1057(
    .din0(a_V_70_fu_7892_p4),
    .din1(mul_ln1347_69_fu_406_p1),
    .dout(mul_ln1347_69_fu_406_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1058(
    .din0(a_V_102_fu_8212_p4),
    .din1(mul_ln1347_101_fu_407_p1),
    .dout(mul_ln1347_101_fu_407_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1059(
    .din0(a_V_103_fu_7812_p4),
    .din1(mul_ln1347_102_fu_408_p1),
    .dout(mul_ln1347_102_fu_408_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1060(
    .din0(a_V_97_fu_8162_p4),
    .din1(mul_ln1347_96_fu_409_p1),
    .dout(mul_ln1347_96_fu_409_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1061(
    .din0(a_V_98_fu_8172_p4),
    .din1(mul_ln1347_97_fu_410_p1),
    .dout(mul_ln1347_97_fu_410_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1062(
    .din0(a_V_104_fu_7822_p4),
    .din1(mul_ln1347_103_fu_411_p1),
    .dout(mul_ln1347_103_fu_411_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1063(
    .din0(a_V_78_fu_7972_p4),
    .din1(mul_ln1347_77_fu_412_p1),
    .dout(mul_ln1347_77_fu_412_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1064(
    .din0(a_V_68_fu_7872_p4),
    .din1(mul_ln1347_67_fu_413_p1),
    .dout(mul_ln1347_67_fu_413_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1065(
    .din0(a_V_92_fu_8112_p4),
    .din1(mul_ln1347_91_fu_414_p1),
    .dout(mul_ln1347_91_fu_414_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        mul_ln1347_100_reg_7791 <= mul_ln1347_100_fu_382_p2;
        mul_ln1347_101_reg_7795 <= mul_ln1347_101_fu_407_p2;
        mul_ln1347_102_reg_7799 <= mul_ln1347_102_fu_408_p2;
        mul_ln1347_103_reg_7803 <= mul_ln1347_103_fu_411_p2;
        mul_ln1347_63_reg_7643 <= mul_ln1347_63_fu_383_p2;
        mul_ln1347_64_reg_7647 <= mul_ln1347_64_fu_386_p2;
        mul_ln1347_65_reg_7651 <= mul_ln1347_65_fu_385_p2;
        mul_ln1347_66_reg_7655 <= mul_ln1347_66_fu_400_p2;
        mul_ln1347_67_reg_7659 <= mul_ln1347_67_fu_413_p2;
        mul_ln1347_68_reg_7663 <= mul_ln1347_68_fu_390_p2;
        mul_ln1347_69_reg_7667 <= mul_ln1347_69_fu_406_p2;
        mul_ln1347_70_reg_7671 <= mul_ln1347_70_fu_399_p2;
        mul_ln1347_71_reg_7675 <= mul_ln1347_71_fu_375_p2;
        mul_ln1347_72_reg_7679 <= mul_ln1347_72_fu_377_p2;
        mul_ln1347_73_reg_7683 <= mul_ln1347_73_fu_380_p2;
        mul_ln1347_74_reg_7687 <= mul_ln1347_74_fu_391_p2;
        mul_ln1347_75_reg_7691 <= mul_ln1347_75_fu_404_p2;
        mul_ln1347_76_reg_7695 <= mul_ln1347_76_fu_384_p2;
        mul_ln1347_77_reg_7699 <= mul_ln1347_77_fu_412_p2;
        mul_ln1347_78_reg_7703 <= mul_ln1347_78_fu_389_p2;
        mul_ln1347_79_reg_7707 <= mul_ln1347_79_fu_378_p2;
        mul_ln1347_80_reg_7711 <= mul_ln1347_80_fu_402_p2;
        mul_ln1347_81_reg_7715 <= mul_ln1347_81_fu_376_p2;
        mul_ln1347_82_reg_7719 <= mul_ln1347_82_fu_393_p2;
        mul_ln1347_83_reg_7723 <= mul_ln1347_83_fu_396_p2;
        mul_ln1347_84_reg_7727 <= mul_ln1347_84_fu_405_p2;
        mul_ln1347_85_reg_7731 <= mul_ln1347_85_fu_403_p2;
        mul_ln1347_86_reg_7735 <= mul_ln1347_86_fu_374_p2;
        mul_ln1347_87_reg_7739 <= mul_ln1347_87_fu_397_p2;
        mul_ln1347_88_reg_7743 <= mul_ln1347_88_fu_394_p2;
        mul_ln1347_89_reg_7747 <= mul_ln1347_89_fu_388_p2;
        mul_ln1347_90_reg_7751 <= mul_ln1347_90_fu_401_p2;
        mul_ln1347_91_reg_7755 <= mul_ln1347_91_fu_414_p2;
        mul_ln1347_92_reg_7759 <= mul_ln1347_92_fu_398_p2;
        mul_ln1347_93_reg_7763 <= mul_ln1347_93_fu_392_p2;
        mul_ln1347_94_reg_7767 <= mul_ln1347_94_fu_381_p2;
        mul_ln1347_95_reg_7771 <= mul_ln1347_95_fu_395_p2;
        mul_ln1347_96_reg_7775 <= mul_ln1347_96_fu_409_p2;
        mul_ln1347_97_reg_7779 <= mul_ln1347_97_fu_410_p2;
        mul_ln1347_98_reg_7783 <= mul_ln1347_98_fu_373_p2;
        mul_ln1347_99_reg_7787 <= mul_ln1347_99_fu_379_p2;
        mul_ln1347_reg_7639 <= mul_ln1347_fu_387_p2;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((layer17_out_full_n == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_blk_n = layer15_out_empty_n;
    end else begin
        layer15_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_read = 1'b1;
    end else begin
        layer15_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        layer17_out_blk_n = layer17_out_full_n;
    end else begin
        layer17_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        layer17_out_write = 1'b1;
    end else begin
        layer17_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_V_100_fu_8192_p4 = {{layer15_out_dout[607:592]}};

assign a_V_101_fu_8202_p4 = {{layer15_out_dout[623:608]}};

assign a_V_102_fu_8212_p4 = {{layer15_out_dout[639:624]}};

assign a_V_103_fu_7812_p4 = {{layer15_out_dout[655:640]}};

assign a_V_104_fu_7822_p4 = {{layer15_out_dout[671:656]}};

assign a_V_64_fu_7832_p4 = {{layer15_out_dout[31:16]}};

assign a_V_65_fu_7842_p4 = {{layer15_out_dout[47:32]}};

assign a_V_66_fu_7852_p4 = {{layer15_out_dout[63:48]}};

assign a_V_67_fu_7862_p4 = {{layer15_out_dout[79:64]}};

assign a_V_68_fu_7872_p4 = {{layer15_out_dout[95:80]}};

assign a_V_69_fu_7882_p4 = {{layer15_out_dout[111:96]}};

assign a_V_70_fu_7892_p4 = {{layer15_out_dout[127:112]}};

assign a_V_71_fu_7902_p4 = {{layer15_out_dout[143:128]}};

assign a_V_72_fu_7912_p4 = {{layer15_out_dout[159:144]}};

assign a_V_73_fu_7922_p4 = {{layer15_out_dout[175:160]}};

assign a_V_74_fu_7932_p4 = {{layer15_out_dout[191:176]}};

assign a_V_75_fu_7942_p4 = {{layer15_out_dout[207:192]}};

assign a_V_76_fu_7952_p4 = {{layer15_out_dout[223:208]}};

assign a_V_77_fu_7962_p4 = {{layer15_out_dout[239:224]}};

assign a_V_78_fu_7972_p4 = {{layer15_out_dout[255:240]}};

assign a_V_79_fu_7982_p4 = {{layer15_out_dout[271:256]}};

assign a_V_80_fu_7992_p4 = {{layer15_out_dout[287:272]}};

assign a_V_81_fu_8002_p4 = {{layer15_out_dout[303:288]}};

assign a_V_82_fu_8012_p4 = {{layer15_out_dout[319:304]}};

assign a_V_83_fu_8022_p4 = {{layer15_out_dout[335:320]}};

assign a_V_84_fu_8032_p4 = {{layer15_out_dout[351:336]}};

assign a_V_85_fu_8042_p4 = {{layer15_out_dout[367:352]}};

assign a_V_86_fu_8052_p4 = {{layer15_out_dout[383:368]}};

assign a_V_87_fu_8062_p4 = {{layer15_out_dout[399:384]}};

assign a_V_88_fu_8072_p4 = {{layer15_out_dout[415:400]}};

assign a_V_89_fu_8082_p4 = {{layer15_out_dout[431:416]}};

assign a_V_90_fu_8092_p4 = {{layer15_out_dout[447:432]}};

assign a_V_91_fu_8102_p4 = {{layer15_out_dout[463:448]}};

assign a_V_92_fu_8112_p4 = {{layer15_out_dout[479:464]}};

assign a_V_93_fu_8122_p4 = {{layer15_out_dout[495:480]}};

assign a_V_94_fu_8132_p4 = {{layer15_out_dout[511:496]}};

assign a_V_95_fu_8142_p4 = {{layer15_out_dout[527:512]}};

assign a_V_96_fu_8152_p4 = {{layer15_out_dout[543:528]}};

assign a_V_97_fu_8162_p4 = {{layer15_out_dout[559:544]}};

assign a_V_98_fu_8172_p4 = {{layer15_out_dout[575:560]}};

assign a_V_99_fu_8182_p4 = {{layer15_out_dout[591:576]}};

assign a_V_fu_7808_p1 = layer15_out_dout[15:0];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign layer17_out_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{trunc_ln818_102_fu_9094_p4}, {trunc_ln818_101_fu_9078_p4}}, {trunc_ln818_100_fu_9062_p4}}, {trunc_ln818_99_fu_9046_p4}}, {trunc_ln818_98_fu_9030_p4}}, {trunc_ln818_97_fu_9014_p4}}, {trunc_ln818_96_fu_8998_p4}}, {trunc_ln818_95_fu_8982_p4}}, {trunc_ln818_94_fu_8966_p4}}, {trunc_ln818_93_fu_8950_p4}}, {trunc_ln818_92_fu_8934_p4}}, {trunc_ln818_91_fu_8918_p4}}, {trunc_ln818_90_fu_8902_p4}}, {trunc_ln818_89_fu_8886_p4}}, {trunc_ln818_88_fu_8870_p4}}, {trunc_ln818_87_fu_8854_p4}}, {trunc_ln818_86_fu_8838_p4}}, {trunc_ln818_85_fu_8822_p4}}, {trunc_ln818_84_fu_8806_p4}}, {trunc_ln818_83_fu_8790_p4}}, {trunc_ln818_82_fu_8774_p4}}, {trunc_ln818_81_fu_8758_p4}}, {trunc_ln818_80_fu_8742_p4}}, {trunc_ln818_79_fu_8726_p4}}, {trunc_ln818_78_fu_8710_p4}}, {trunc_ln818_77_fu_8694_p4}}, {trunc_ln818_76_fu_8678_p4}}, {trunc_ln818_75_fu_8662_p4}}, {trunc_ln818_74_fu_8646_p4}}, {trunc_ln818_73_fu_8630_p4}}, {trunc_ln818_72_fu_8614_p4}}, {trunc_ln818_71_fu_8598_p4}}, {trunc_ln818_70_fu_8582_p4}}, {trunc_ln818_69_fu_8566_p4}}, {trunc_ln818_68_fu_8550_p4}}, {trunc_ln818_67_fu_8534_p4}}, {trunc_ln818_66_fu_8518_p4}}, {trunc_ln818_65_fu_8502_p4}}, {trunc_ln818_64_fu_8486_p4}}, {trunc_ln818_63_fu_8470_p4}}, {trunc_ln818_s_fu_8454_p4}}, {trunc_ln_fu_8438_p4}};

assign mul_ln1347_100_fu_382_p1 = 26'd1639;

assign mul_ln1347_101_fu_407_p1 = 26'd1148;

assign mul_ln1347_102_fu_408_p1 = 26'd1604;

assign mul_ln1347_103_fu_411_p1 = 26'd1191;

assign mul_ln1347_63_fu_383_p1 = 26'd1558;

assign mul_ln1347_64_fu_386_p1 = 26'd2033;

assign mul_ln1347_65_fu_385_p1 = 26'd1957;

assign mul_ln1347_66_fu_400_p1 = 26'd1457;

assign mul_ln1347_67_fu_413_p1 = 26'd1730;

assign mul_ln1347_68_fu_390_p1 = 26'd1510;

assign mul_ln1347_69_fu_406_p1 = 26'd1811;

assign mul_ln1347_70_fu_399_p1 = 26'd1709;

assign mul_ln1347_71_fu_375_p1 = 26'd1636;

assign mul_ln1347_72_fu_377_p1 = 26'd1460;

assign mul_ln1347_73_fu_380_p1 = 26'd1479;

assign mul_ln1347_74_fu_391_p1 = 26'd1409;

assign mul_ln1347_75_fu_404_p1 = 26'd1187;

assign mul_ln1347_76_fu_384_p1 = 26'd1957;

assign mul_ln1347_77_fu_412_p1 = 26'd1255;

assign mul_ln1347_78_fu_389_p1 = 26'd2071;

assign mul_ln1347_79_fu_378_p1 = 26'd1556;

assign mul_ln1347_80_fu_402_p1 = 26'd1362;

assign mul_ln1347_81_fu_376_p1 = 26'd1521;

assign mul_ln1347_82_fu_393_p1 = 26'd1340;

assign mul_ln1347_83_fu_396_p1 = 26'd1352;

assign mul_ln1347_84_fu_405_p1 = 26'd2001;

assign mul_ln1347_85_fu_403_p1 = 26'd1466;

assign mul_ln1347_86_fu_374_p1 = 26'd1237;

assign mul_ln1347_87_fu_397_p1 = 26'd1355;

assign mul_ln1347_88_fu_394_p1 = 26'd2107;

assign mul_ln1347_89_fu_388_p1 = 26'd1167;

assign mul_ln1347_90_fu_401_p1 = 26'd1987;

assign mul_ln1347_91_fu_414_p1 = 26'd1425;

assign mul_ln1347_92_fu_398_p1 = 26'd1452;

assign mul_ln1347_93_fu_392_p1 = 26'd1174;

assign mul_ln1347_94_fu_381_p1 = 26'd2025;

assign mul_ln1347_95_fu_395_p1 = 26'd1617;

assign mul_ln1347_96_fu_409_p1 = 26'd1617;

assign mul_ln1347_97_fu_410_p1 = 26'd1518;

assign mul_ln1347_98_fu_373_p1 = 26'd1359;

assign mul_ln1347_99_fu_379_p1 = 26'd1588;

assign mul_ln1347_fu_387_p1 = 26'd1636;

assign ret_V_100_fu_8816_p2 = (mul_ln1347_86_reg_7735 + 26'd96256);

assign ret_V_101_fu_8832_p2 = (mul_ln1347_87_reg_7739 + 26'd191488);

assign ret_V_102_fu_8848_p2 = (mul_ln1347_88_reg_7743 + 26'd175104);

assign ret_V_103_fu_8864_p2 = (mul_ln1347_89_reg_7747 + 26'd146432);

assign ret_V_104_fu_8880_p2 = (mul_ln1347_90_reg_7751 + 26'd367616);

assign ret_V_105_fu_8896_p2 = (mul_ln1347_91_reg_7755 + 26'd98304);

assign ret_V_106_fu_8912_p2 = ($signed(mul_ln1347_92_reg_7759) + $signed(26'd67095552));

assign ret_V_107_fu_8928_p2 = (mul_ln1347_93_reg_7763 + 26'd427008);

assign ret_V_108_fu_8944_p2 = (mul_ln1347_94_reg_7767 + 26'd417792);

assign ret_V_109_fu_8960_p2 = (mul_ln1347_95_reg_7771 + 26'd664576);

assign ret_V_110_fu_8976_p2 = (mul_ln1347_96_reg_7775 + 26'd66560);

assign ret_V_111_fu_8992_p2 = (mul_ln1347_97_reg_7779 + 26'd596992);

assign ret_V_112_fu_9008_p2 = (mul_ln1347_98_reg_7783 + 26'd459776);

assign ret_V_113_fu_9024_p2 = (mul_ln1347_99_reg_7787 + 26'd7168);

assign ret_V_114_fu_9040_p2 = (mul_ln1347_100_reg_7791 + 26'd543744);

assign ret_V_115_fu_9056_p2 = ($signed(mul_ln1347_101_reg_7795) + $signed(26'd66912256));

assign ret_V_116_fu_9072_p2 = (mul_ln1347_102_reg_7799 + 26'd583680);

assign ret_V_117_fu_9088_p2 = ($signed(mul_ln1347_103_reg_7803) + $signed(26'd66823168));

assign ret_V_77_fu_8448_p2 = (mul_ln1347_63_reg_7643 + 26'd188416);

assign ret_V_78_fu_8464_p2 = (mul_ln1347_64_reg_7647 + 26'd1187840);

assign ret_V_79_fu_8480_p2 = (mul_ln1347_65_reg_7651 + 26'd385024);

assign ret_V_80_fu_8496_p2 = ($signed(mul_ln1347_66_reg_7655) + $signed(26'd66724864));

assign ret_V_81_fu_8512_p2 = (mul_ln1347_67_reg_7659 + 26'd854016);

assign ret_V_82_fu_8528_p2 = (mul_ln1347_68_reg_7663 + 26'd723968);

assign ret_V_83_fu_8544_p2 = (mul_ln1347_69_reg_7667 + 26'd59392);

assign ret_V_84_fu_8560_p2 = (mul_ln1347_70_reg_7671 + 26'd32768);

assign ret_V_85_fu_8576_p2 = (mul_ln1347_71_reg_7675 + 26'd68608);

assign ret_V_86_fu_8592_p2 = (mul_ln1347_72_reg_7679 + 26'd72704);

assign ret_V_87_fu_8608_p2 = (mul_ln1347_73_reg_7683 + 26'd13312);

assign ret_V_88_fu_8624_p2 = (mul_ln1347_74_reg_7687 + 26'd498688);

assign ret_V_89_fu_8640_p2 = (mul_ln1347_75_reg_7691 + 26'd424960);

assign ret_V_90_fu_8656_p2 = ($signed(mul_ln1347_76_reg_7695) + $signed(26'd66473984));

assign ret_V_91_fu_8672_p2 = ($signed(mul_ln1347_77_reg_7699) + $signed(26'd67026944));

assign ret_V_92_fu_8688_p2 = (mul_ln1347_78_reg_7703 + 26'd253952);

assign ret_V_93_fu_8704_p2 = ($signed(mul_ln1347_79_reg_7707) + $signed(26'd67022848));

assign ret_V_94_fu_8720_p2 = (mul_ln1347_80_reg_7711 + 26'd158720);

assign ret_V_95_fu_8736_p2 = (mul_ln1347_81_reg_7715 + 26'd207872);

assign ret_V_96_fu_8752_p2 = (mul_ln1347_82_reg_7719 + 26'd780288);

assign ret_V_97_fu_8768_p2 = (mul_ln1347_83_reg_7723 + 26'd131072);

assign ret_V_98_fu_8784_p2 = (mul_ln1347_84_reg_7727 + 26'd476160);

assign ret_V_99_fu_8800_p2 = ($signed(mul_ln1347_85_reg_7731) + $signed(26'd66791424));

assign ret_V_fu_8432_p2 = ($signed(mul_ln1347_reg_7639) + $signed(26'd66993152));

assign start_out = real_start;

assign trunc_ln818_100_fu_9062_p4 = {{ret_V_115_fu_9056_p2[25:10]}};

assign trunc_ln818_101_fu_9078_p4 = {{ret_V_116_fu_9072_p2[25:10]}};

assign trunc_ln818_102_fu_9094_p4 = {{ret_V_117_fu_9088_p2[25:10]}};

assign trunc_ln818_63_fu_8470_p4 = {{ret_V_78_fu_8464_p2[25:10]}};

assign trunc_ln818_64_fu_8486_p4 = {{ret_V_79_fu_8480_p2[25:10]}};

assign trunc_ln818_65_fu_8502_p4 = {{ret_V_80_fu_8496_p2[25:10]}};

assign trunc_ln818_66_fu_8518_p4 = {{ret_V_81_fu_8512_p2[25:10]}};

assign trunc_ln818_67_fu_8534_p4 = {{ret_V_82_fu_8528_p2[25:10]}};

assign trunc_ln818_68_fu_8550_p4 = {{ret_V_83_fu_8544_p2[25:10]}};

assign trunc_ln818_69_fu_8566_p4 = {{ret_V_84_fu_8560_p2[25:10]}};

assign trunc_ln818_70_fu_8582_p4 = {{ret_V_85_fu_8576_p2[25:10]}};

assign trunc_ln818_71_fu_8598_p4 = {{ret_V_86_fu_8592_p2[25:10]}};

assign trunc_ln818_72_fu_8614_p4 = {{ret_V_87_fu_8608_p2[25:10]}};

assign trunc_ln818_73_fu_8630_p4 = {{ret_V_88_fu_8624_p2[25:10]}};

assign trunc_ln818_74_fu_8646_p4 = {{ret_V_89_fu_8640_p2[25:10]}};

assign trunc_ln818_75_fu_8662_p4 = {{ret_V_90_fu_8656_p2[25:10]}};

assign trunc_ln818_76_fu_8678_p4 = {{ret_V_91_fu_8672_p2[25:10]}};

assign trunc_ln818_77_fu_8694_p4 = {{ret_V_92_fu_8688_p2[25:10]}};

assign trunc_ln818_78_fu_8710_p4 = {{ret_V_93_fu_8704_p2[25:10]}};

assign trunc_ln818_79_fu_8726_p4 = {{ret_V_94_fu_8720_p2[25:10]}};

assign trunc_ln818_80_fu_8742_p4 = {{ret_V_95_fu_8736_p2[25:10]}};

assign trunc_ln818_81_fu_8758_p4 = {{ret_V_96_fu_8752_p2[25:10]}};

assign trunc_ln818_82_fu_8774_p4 = {{ret_V_97_fu_8768_p2[25:10]}};

assign trunc_ln818_83_fu_8790_p4 = {{ret_V_98_fu_8784_p2[25:10]}};

assign trunc_ln818_84_fu_8806_p4 = {{ret_V_99_fu_8800_p2[25:10]}};

assign trunc_ln818_85_fu_8822_p4 = {{ret_V_100_fu_8816_p2[25:10]}};

assign trunc_ln818_86_fu_8838_p4 = {{ret_V_101_fu_8832_p2[25:10]}};

assign trunc_ln818_87_fu_8854_p4 = {{ret_V_102_fu_8848_p2[25:10]}};

assign trunc_ln818_88_fu_8870_p4 = {{ret_V_103_fu_8864_p2[25:10]}};

assign trunc_ln818_89_fu_8886_p4 = {{ret_V_104_fu_8880_p2[25:10]}};

assign trunc_ln818_90_fu_8902_p4 = {{ret_V_105_fu_8896_p2[25:10]}};

assign trunc_ln818_91_fu_8918_p4 = {{ret_V_106_fu_8912_p2[25:10]}};

assign trunc_ln818_92_fu_8934_p4 = {{ret_V_107_fu_8928_p2[25:10]}};

assign trunc_ln818_93_fu_8950_p4 = {{ret_V_108_fu_8944_p2[25:10]}};

assign trunc_ln818_94_fu_8966_p4 = {{ret_V_109_fu_8960_p2[25:10]}};

assign trunc_ln818_95_fu_8982_p4 = {{ret_V_110_fu_8976_p2[25:10]}};

assign trunc_ln818_96_fu_8998_p4 = {{ret_V_111_fu_8992_p2[25:10]}};

assign trunc_ln818_97_fu_9014_p4 = {{ret_V_112_fu_9008_p2[25:10]}};

assign trunc_ln818_98_fu_9030_p4 = {{ret_V_113_fu_9024_p2[25:10]}};

assign trunc_ln818_99_fu_9046_p4 = {{ret_V_114_fu_9040_p2[25:10]}};

assign trunc_ln818_s_fu_8454_p4 = {{ret_V_77_fu_8448_p2[25:10]}};

assign trunc_ln_fu_8438_p4 = {{ret_V_fu_8432_p2[25:10]}};

endmodule //kernel_wrapper_normalize_array_ap_fixed_42u_array_ap_fixed_16_6_5_3_0_42u_config17_s
