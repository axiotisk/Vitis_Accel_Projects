-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_wrapper_dense_array_ap_fixed_24u_array_ap_fixed_16_6_5_3_0_42u_config15_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    layer13_out_dout : IN STD_LOGIC_VECTOR (383 downto 0);
    layer13_out_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    layer13_out_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    layer13_out_empty_n : IN STD_LOGIC;
    layer13_out_read : OUT STD_LOGIC;
    layer15_out_din : OUT STD_LOGIC_VECTOR (671 downto 0);
    layer15_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer15_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer15_out_full_n : IN STD_LOGIC;
    layer15_out_write : OUT STD_LOGIC );
end;


architecture behav of kernel_wrapper_dense_array_ap_fixed_24u_array_ap_fixed_16_6_5_3_0_42u_config15_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_16F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101111";
    constant ap_const_lv32_170 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101110000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_10F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001111";
    constant ap_const_lv32_110 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_12F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101111";
    constant ap_const_lv32_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_14F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001111";
    constant ap_const_lv32_150 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101010000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal layer13_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln36_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer15_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_start : STD_LOGIC;
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_done : STD_LOGIC;
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_idle : STD_LOGIC;
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_ready : STD_LOGIC;
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_32 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_33 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_34 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_35 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_36 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_37 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_38 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_39 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_40 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_41 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_in_fu_138 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln36_fu_653_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal data_V_fu_142 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln40_fu_659_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln44_fu_893_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal data_V_101_fu_146 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_102_fu_150 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_103_fu_154 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_104_fu_158 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_105_fu_162 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_106_fu_166 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_107_fu_170 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_108_fu_174 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_109_fu_178 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_110_fu_182 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_111_fu_186 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_112_fu_190 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_113_fu_194 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_114_fu_198 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_115_fu_202 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_116_fu_206 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_117_fu_210 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_118_fu_214 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_119_fu_218 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_120_fu_222 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_121_fu_226 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_122_fu_230 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_123_fu_234 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_124_fu_238 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_125_fu_242 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_126_fu_246 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_127_fu_250 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_128_fu_254 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_129_fu_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_130_fu_262 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_131_fu_266 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_132_fu_270 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_133_fu_274 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_134_fu_278 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_135_fu_282 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_136_fu_286 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_137_fu_290 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_138_fu_294 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_139_fu_298 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_140_fu_302 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_141_fu_306 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_142_fu_310 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_143_fu_314 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_144_fu_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_145_fu_322 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_146_fu_326 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_147_fu_330 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_148_fu_334 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_149_fu_338 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_150_fu_342 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_151_fu_346 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_152_fu_350 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_153_fu_354 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_154_fu_358 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_155_fu_362 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_156_fu_366 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_157_fu_370 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_158_fu_374 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_159_fu_378 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_160_fu_382 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_161_fu_386 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_162_fu_390 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_163_fu_394 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_164_fu_398 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_165_fu_402 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_166_fu_406 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_167_fu_410 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_168_fu_414 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_169_fu_418 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_170_fu_422 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_171_fu_426 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_172_fu_430 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_173_fu_434 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_174_fu_438 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_175_fu_442 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_176_fu_446 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_177_fu_450 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_178_fu_454 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_179_fu_458 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_180_fu_462 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_181_fu_466 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_182_fu_470 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_183_fu_474 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_184_fu_478 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_185_fu_482 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_186_fu_486 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_187_fu_490 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_188_fu_494 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_189_fu_498 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_190_fu_502 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_191_fu_506 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_192_fu_510 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_193_fu_514 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_194_fu_518 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_195_fu_522 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component kernel_wrapper_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read20 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read21 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read22 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read26 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read32 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read33 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read34 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read35 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read36 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read37 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read38 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read39 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read40 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read41 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read42 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read43 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read44 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read45 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read46 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read47 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read48 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read49 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read50 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read51 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read52 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read53 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read54 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read55 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read56 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read57 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read58 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read59 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read60 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read61 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read62 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read63 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read64 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read65 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read66 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read67 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read68 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read69 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read70 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read71 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read72 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read73 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read74 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read75 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read76 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read77 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read78 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read79 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read80 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read81 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read82 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read83 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read84 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read85 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read86 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read87 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read88 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read89 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read90 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read91 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read92 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read93 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read94 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read95 : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539 : component kernel_wrapper_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_start,
        ap_done => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_done,
        ap_idle => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_idle,
        ap_ready => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_ready,
        p_read => data_V_148_fu_334,
        p_read1 => data_V_149_fu_338,
        p_read2 => data_V_150_fu_342,
        p_read3 => data_V_151_fu_346,
        p_read4 => data_V_152_fu_350,
        p_read5 => data_V_153_fu_354,
        p_read6 => data_V_154_fu_358,
        p_read7 => data_V_155_fu_362,
        p_read8 => data_V_156_fu_366,
        p_read9 => data_V_157_fu_370,
        p_read10 => data_V_158_fu_374,
        p_read11 => data_V_159_fu_378,
        p_read12 => data_V_160_fu_382,
        p_read13 => data_V_161_fu_386,
        p_read14 => data_V_162_fu_390,
        p_read15 => data_V_163_fu_394,
        p_read16 => data_V_164_fu_398,
        p_read17 => data_V_165_fu_402,
        p_read18 => data_V_166_fu_406,
        p_read19 => data_V_167_fu_410,
        p_read20 => data_V_168_fu_414,
        p_read21 => data_V_169_fu_418,
        p_read22 => data_V_170_fu_422,
        p_read23 => data_V_171_fu_426,
        p_read24 => data_V_124_fu_238,
        p_read25 => data_V_125_fu_242,
        p_read26 => data_V_126_fu_246,
        p_read27 => data_V_127_fu_250,
        p_read28 => data_V_128_fu_254,
        p_read29 => data_V_129_fu_258,
        p_read30 => data_V_130_fu_262,
        p_read31 => data_V_131_fu_266,
        p_read32 => data_V_132_fu_270,
        p_read33 => data_V_133_fu_274,
        p_read34 => data_V_134_fu_278,
        p_read35 => data_V_135_fu_282,
        p_read36 => data_V_136_fu_286,
        p_read37 => data_V_137_fu_290,
        p_read38 => data_V_138_fu_294,
        p_read39 => data_V_139_fu_298,
        p_read40 => data_V_140_fu_302,
        p_read41 => data_V_141_fu_306,
        p_read42 => data_V_142_fu_310,
        p_read43 => data_V_143_fu_314,
        p_read44 => data_V_144_fu_318,
        p_read45 => data_V_145_fu_322,
        p_read46 => data_V_146_fu_326,
        p_read47 => data_V_147_fu_330,
        p_read48 => data_V_fu_142,
        p_read49 => data_V_101_fu_146,
        p_read50 => data_V_102_fu_150,
        p_read51 => data_V_103_fu_154,
        p_read52 => data_V_104_fu_158,
        p_read53 => data_V_105_fu_162,
        p_read54 => data_V_106_fu_166,
        p_read55 => data_V_107_fu_170,
        p_read56 => data_V_108_fu_174,
        p_read57 => data_V_109_fu_178,
        p_read58 => data_V_110_fu_182,
        p_read59 => data_V_111_fu_186,
        p_read60 => data_V_112_fu_190,
        p_read61 => data_V_113_fu_194,
        p_read62 => data_V_114_fu_198,
        p_read63 => data_V_115_fu_202,
        p_read64 => data_V_116_fu_206,
        p_read65 => data_V_117_fu_210,
        p_read66 => data_V_118_fu_214,
        p_read67 => data_V_119_fu_218,
        p_read68 => data_V_120_fu_222,
        p_read69 => data_V_121_fu_226,
        p_read70 => data_V_122_fu_230,
        p_read71 => data_V_123_fu_234,
        p_read72 => data_V_172_fu_430,
        p_read73 => data_V_173_fu_434,
        p_read74 => data_V_174_fu_438,
        p_read75 => data_V_175_fu_442,
        p_read76 => data_V_176_fu_446,
        p_read77 => data_V_177_fu_450,
        p_read78 => data_V_178_fu_454,
        p_read79 => data_V_179_fu_458,
        p_read80 => data_V_180_fu_462,
        p_read81 => data_V_181_fu_466,
        p_read82 => data_V_182_fu_470,
        p_read83 => data_V_183_fu_474,
        p_read84 => data_V_184_fu_478,
        p_read85 => data_V_185_fu_482,
        p_read86 => data_V_186_fu_486,
        p_read87 => data_V_187_fu_490,
        p_read88 => data_V_188_fu_494,
        p_read89 => data_V_189_fu_498,
        p_read90 => data_V_190_fu_502,
        p_read91 => data_V_191_fu_506,
        p_read92 => data_V_192_fu_510,
        p_read93 => data_V_193_fu_514,
        p_read94 => data_V_194_fu_518,
        p_read95 => data_V_195_fu_522,
        ap_return_0 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_0,
        ap_return_1 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_1,
        ap_return_2 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_2,
        ap_return_3 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_3,
        ap_return_4 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_4,
        ap_return_5 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_5,
        ap_return_6 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_6,
        ap_return_7 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_7,
        ap_return_8 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_8,
        ap_return_9 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_9,
        ap_return_10 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_10,
        ap_return_11 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_11,
        ap_return_12 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_12,
        ap_return_13 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_13,
        ap_return_14 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_14,
        ap_return_15 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_15,
        ap_return_16 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_16,
        ap_return_17 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_17,
        ap_return_18 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_18,
        ap_return_19 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_19,
        ap_return_20 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_20,
        ap_return_21 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_21,
        ap_return_22 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_22,
        ap_return_23 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_23,
        ap_return_24 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_24,
        ap_return_25 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_25,
        ap_return_26 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_26,
        ap_return_27 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_27,
        ap_return_28 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_28,
        ap_return_29 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_29,
        ap_return_30 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_30,
        ap_return_31 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_31,
        ap_return_32 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_32,
        ap_return_33 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_33,
        ap_return_34 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_34,
        ap_return_35 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_35,
        ap_return_36 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_36,
        ap_return_37 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_37,
        ap_return_38 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_38,
        ap_return_39 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_39,
        ap_return_40 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_40,
        ap_return_41 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_41);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_done = ap_const_logic_0) or (layer15_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_ready = ap_const_logic_1)) then 
                    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_in_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_in_fu_138 <= ap_const_lv3_0;
            elsif ((not(((icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (layer13_out_empty_n = ap_const_logic_0))) and (icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_in_fu_138 <= add_ln36_fu_653_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (layer13_out_empty_n = ap_const_logic_0))) and (icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (trunc_ln44_fu_893_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                data_V_101_fu_146 <= layer13_out_dout(31 downto 16);
                data_V_102_fu_150 <= layer13_out_dout(47 downto 32);
                data_V_103_fu_154 <= layer13_out_dout(63 downto 48);
                data_V_104_fu_158 <= layer13_out_dout(79 downto 64);
                data_V_105_fu_162 <= layer13_out_dout(95 downto 80);
                data_V_106_fu_166 <= layer13_out_dout(111 downto 96);
                data_V_107_fu_170 <= layer13_out_dout(127 downto 112);
                data_V_108_fu_174 <= layer13_out_dout(143 downto 128);
                data_V_109_fu_178 <= layer13_out_dout(159 downto 144);
                data_V_110_fu_182 <= layer13_out_dout(175 downto 160);
                data_V_111_fu_186 <= layer13_out_dout(191 downto 176);
                data_V_112_fu_190 <= layer13_out_dout(207 downto 192);
                data_V_113_fu_194 <= layer13_out_dout(223 downto 208);
                data_V_114_fu_198 <= layer13_out_dout(239 downto 224);
                data_V_115_fu_202 <= layer13_out_dout(255 downto 240);
                data_V_116_fu_206 <= layer13_out_dout(271 downto 256);
                data_V_117_fu_210 <= layer13_out_dout(287 downto 272);
                data_V_118_fu_214 <= layer13_out_dout(303 downto 288);
                data_V_119_fu_218 <= layer13_out_dout(319 downto 304);
                data_V_120_fu_222 <= layer13_out_dout(335 downto 320);
                data_V_121_fu_226 <= layer13_out_dout(351 downto 336);
                data_V_122_fu_230 <= layer13_out_dout(367 downto 352);
                data_V_123_fu_234 <= layer13_out_dout(383 downto 368);
                data_V_fu_142 <= trunc_ln40_fu_659_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (layer13_out_empty_n = ap_const_logic_0))) and (icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (trunc_ln44_fu_893_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                data_V_124_fu_238 <= trunc_ln40_fu_659_p1;
                data_V_125_fu_242 <= layer13_out_dout(31 downto 16);
                data_V_126_fu_246 <= layer13_out_dout(47 downto 32);
                data_V_127_fu_250 <= layer13_out_dout(63 downto 48);
                data_V_128_fu_254 <= layer13_out_dout(79 downto 64);
                data_V_129_fu_258 <= layer13_out_dout(95 downto 80);
                data_V_130_fu_262 <= layer13_out_dout(111 downto 96);
                data_V_131_fu_266 <= layer13_out_dout(127 downto 112);
                data_V_132_fu_270 <= layer13_out_dout(143 downto 128);
                data_V_133_fu_274 <= layer13_out_dout(159 downto 144);
                data_V_134_fu_278 <= layer13_out_dout(175 downto 160);
                data_V_135_fu_282 <= layer13_out_dout(191 downto 176);
                data_V_136_fu_286 <= layer13_out_dout(207 downto 192);
                data_V_137_fu_290 <= layer13_out_dout(223 downto 208);
                data_V_138_fu_294 <= layer13_out_dout(239 downto 224);
                data_V_139_fu_298 <= layer13_out_dout(255 downto 240);
                data_V_140_fu_302 <= layer13_out_dout(271 downto 256);
                data_V_141_fu_306 <= layer13_out_dout(287 downto 272);
                data_V_142_fu_310 <= layer13_out_dout(303 downto 288);
                data_V_143_fu_314 <= layer13_out_dout(319 downto 304);
                data_V_144_fu_318 <= layer13_out_dout(335 downto 320);
                data_V_145_fu_322 <= layer13_out_dout(351 downto 336);
                data_V_146_fu_326 <= layer13_out_dout(367 downto 352);
                data_V_147_fu_330 <= layer13_out_dout(383 downto 368);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (layer13_out_empty_n = ap_const_logic_0))) and (icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (trunc_ln44_fu_893_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                data_V_148_fu_334 <= trunc_ln40_fu_659_p1;
                data_V_149_fu_338 <= layer13_out_dout(31 downto 16);
                data_V_150_fu_342 <= layer13_out_dout(47 downto 32);
                data_V_151_fu_346 <= layer13_out_dout(63 downto 48);
                data_V_152_fu_350 <= layer13_out_dout(79 downto 64);
                data_V_153_fu_354 <= layer13_out_dout(95 downto 80);
                data_V_154_fu_358 <= layer13_out_dout(111 downto 96);
                data_V_155_fu_362 <= layer13_out_dout(127 downto 112);
                data_V_156_fu_366 <= layer13_out_dout(143 downto 128);
                data_V_157_fu_370 <= layer13_out_dout(159 downto 144);
                data_V_158_fu_374 <= layer13_out_dout(175 downto 160);
                data_V_159_fu_378 <= layer13_out_dout(191 downto 176);
                data_V_160_fu_382 <= layer13_out_dout(207 downto 192);
                data_V_161_fu_386 <= layer13_out_dout(223 downto 208);
                data_V_162_fu_390 <= layer13_out_dout(239 downto 224);
                data_V_163_fu_394 <= layer13_out_dout(255 downto 240);
                data_V_164_fu_398 <= layer13_out_dout(271 downto 256);
                data_V_165_fu_402 <= layer13_out_dout(287 downto 272);
                data_V_166_fu_406 <= layer13_out_dout(303 downto 288);
                data_V_167_fu_410 <= layer13_out_dout(319 downto 304);
                data_V_168_fu_414 <= layer13_out_dout(335 downto 320);
                data_V_169_fu_418 <= layer13_out_dout(351 downto 336);
                data_V_170_fu_422 <= layer13_out_dout(367 downto 352);
                data_V_171_fu_426 <= layer13_out_dout(383 downto 368);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (layer13_out_empty_n = ap_const_logic_0))) and (icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (trunc_ln44_fu_893_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                data_V_172_fu_430 <= trunc_ln40_fu_659_p1;
                data_V_173_fu_434 <= layer13_out_dout(31 downto 16);
                data_V_174_fu_438 <= layer13_out_dout(47 downto 32);
                data_V_175_fu_442 <= layer13_out_dout(63 downto 48);
                data_V_176_fu_446 <= layer13_out_dout(79 downto 64);
                data_V_177_fu_450 <= layer13_out_dout(95 downto 80);
                data_V_178_fu_454 <= layer13_out_dout(111 downto 96);
                data_V_179_fu_458 <= layer13_out_dout(127 downto 112);
                data_V_180_fu_462 <= layer13_out_dout(143 downto 128);
                data_V_181_fu_466 <= layer13_out_dout(159 downto 144);
                data_V_182_fu_470 <= layer13_out_dout(175 downto 160);
                data_V_183_fu_474 <= layer13_out_dout(191 downto 176);
                data_V_184_fu_478 <= layer13_out_dout(207 downto 192);
                data_V_185_fu_482 <= layer13_out_dout(223 downto 208);
                data_V_186_fu_486 <= layer13_out_dout(239 downto 224);
                data_V_187_fu_490 <= layer13_out_dout(255 downto 240);
                data_V_188_fu_494 <= layer13_out_dout(271 downto 256);
                data_V_189_fu_498 <= layer13_out_dout(287 downto 272);
                data_V_190_fu_502 <= layer13_out_dout(303 downto 288);
                data_V_191_fu_506 <= layer13_out_dout(319 downto 304);
                data_V_192_fu_510 <= layer13_out_dout(335 downto 320);
                data_V_193_fu_514 <= layer13_out_dout(351 downto 336);
                data_V_194_fu_518 <= layer13_out_dout(367 downto 352);
                data_V_195_fu_522 <= layer13_out_dout(383 downto 368);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, layer13_out_empty_n, layer15_out_full_n, ap_CS_fsm_state2, icmp_ln36_fu_647_p2, ap_CS_fsm_state4, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (layer13_out_empty_n = ap_const_logic_0))) and (icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (layer13_out_empty_n = ap_const_logic_0))) and (icmp_ln36_fu_647_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if ((not(((grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_done = ap_const_logic_0) or (layer15_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln36_fu_653_p2 <= std_logic_vector(unsigned(i_in_fu_138) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(layer13_out_empty_n, icmp_ln36_fu_647_p2)
    begin
        if (((icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (layer13_out_empty_n = ap_const_logic_0))) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(layer15_out_full_n, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_done)
    begin
        if (((grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_done = ap_const_logic_0) or (layer15_out_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(layer13_out_empty_n, icmp_ln36_fu_647_p2)
    begin
                ap_block_state2 <= ((icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (layer13_out_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, layer15_out_full_n, ap_CS_fsm_state4, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_done)
    begin
        if ((not(((grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_done = ap_const_logic_0) or (layer15_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_start <= grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_start_reg;
    icmp_ln36_fu_647_p2 <= "1" when (i_in_fu_138 = ap_const_lv3_4) else "0";

    internal_ap_ready_assign_proc : process(layer15_out_full_n, ap_CS_fsm_state4, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_done)
    begin
        if ((not(((grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_done = ap_const_logic_0) or (layer15_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    layer13_out_blk_n_assign_proc : process(layer13_out_empty_n, ap_CS_fsm_state2, icmp_ln36_fu_647_p2)
    begin
        if (((icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer13_out_blk_n <= layer13_out_empty_n;
        else 
            layer13_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer13_out_read_assign_proc : process(layer13_out_empty_n, ap_CS_fsm_state2, icmp_ln36_fu_647_p2)
    begin
        if ((not(((icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (layer13_out_empty_n = ap_const_logic_0))) and (icmp_ln36_fu_647_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer13_out_read <= ap_const_logic_1;
        else 
            layer13_out_read <= ap_const_logic_0;
        end if; 
    end process;


    layer15_out_blk_n_assign_proc : process(layer15_out_full_n, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            layer15_out_blk_n <= layer15_out_full_n;
        else 
            layer15_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer15_out_din <= (((((((((((((((((((((((((((((((((((((((((grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_41 & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_40) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_39) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_38) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_37) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_36) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_35) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_34) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_33) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_32) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_31) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_30) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_29) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_28) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_27) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_26) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_25) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_24) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_23) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_22) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_21) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_20) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_19) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_18) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_17) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_16) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_15) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_14) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_13) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_12) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_11) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_10) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_9) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_8) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_7) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_6) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_5) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_4) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_3) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_2) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_1) & grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_return_0);

    layer15_out_write_assign_proc : process(layer15_out_full_n, ap_CS_fsm_state4, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_done)
    begin
        if ((not(((grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s_fu_539_ap_done = ap_const_logic_0) or (layer15_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            layer15_out_write <= ap_const_logic_1;
        else 
            layer15_out_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln40_fu_659_p1 <= layer13_out_dout(16 - 1 downto 0);
    trunc_ln44_fu_893_p1 <= i_in_fu_138(2 - 1 downto 0);
end behav;
