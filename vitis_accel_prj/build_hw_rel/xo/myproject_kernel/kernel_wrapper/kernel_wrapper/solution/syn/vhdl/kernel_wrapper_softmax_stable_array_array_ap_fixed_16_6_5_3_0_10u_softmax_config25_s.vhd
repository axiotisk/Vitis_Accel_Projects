-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer23_out_dout : IN STD_LOGIC_VECTOR (159 downto 0);
    layer23_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer23_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer23_out_empty_n : IN STD_LOGIC;
    layer23_out_read : OUT STD_LOGIC;
    output_r_din : OUT STD_LOGIC_VECTOR (159 downto 0);
    output_r_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    output_r_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    output_r_full_n : IN STD_LOGIC;
    output_r_write : OUT STD_LOGIC );
end;


architecture behav of kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal exp_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce0 : STD_LOGIC;
    signal exp_table_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce1 : STD_LOGIC;
    signal exp_table_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce2 : STD_LOGIC;
    signal exp_table_q2 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce3 : STD_LOGIC;
    signal exp_table_q3 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce4 : STD_LOGIC;
    signal exp_table_q4 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce5 : STD_LOGIC;
    signal exp_table_q5 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address6 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce6 : STD_LOGIC;
    signal exp_table_q6 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address7 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce7 : STD_LOGIC;
    signal exp_table_q7 : STD_LOGIC_VECTOR (16 downto 0);
    signal invert_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table_ce0 : STD_LOGIC;
    signal invert_table_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal layer23_out_blk_n : STD_LOGIC;
    signal output_r_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal data_array_V_fu_642_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_reg_2414 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_8_reg_2419 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_9_reg_2426 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_1_fu_666_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_1_reg_2433 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_2_fu_676_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_2_reg_2438 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_3_fu_686_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_3_reg_2443 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_4_fu_696_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_4_reg_2448 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_5_fu_706_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_5_reg_2453 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_6_fu_716_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_6_reg_2458 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_7_fu_726_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_7_reg_2463 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_2_fu_788_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_2_reg_2468 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_5_fu_848_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_5_reg_2474 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_1360_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_s_reg_2480 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_Result_21_fu_1386_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_21_reg_2485 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_22_fu_1412_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_22_reg_2490 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_23_fu_1438_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_23_reg_2495 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_24_fu_1464_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_24_reg_2500 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_25_fu_1490_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_25_reg_2505 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_26_fu_1516_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_26_reg_2510 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_27_fu_1542_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_27_reg_2515 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_28_fu_1568_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_28_reg_2520 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_29_fu_1594_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_29_reg_2525 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal exp_res_V_reg_2570 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exp_res_V_10_reg_2576 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_11_reg_2582 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_12_reg_2588 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_13_reg_2594 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_14_reg_2600 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_15_reg_2606 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_16_reg_2612 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_17_reg_2628 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal exp_res_V_18_reg_2633 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_7_fu_2092_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_7_reg_2638 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_7_fu_2120_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_7_reg_2644 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal out_pack_data_reg_2655 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal trunc_ln1_reg_2660 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_1_reg_2665 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_reg_2670 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_reg_2675 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_reg_2680 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_reg_2685 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_2690 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_reg_2695 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_reg_2700 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln225_fu_1602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_1_fu_1606_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_2_fu_1610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_3_fu_1614_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_4_fu_1618_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_5_fu_1622_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_6_fu_1626_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_7_fu_1630_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_8_fu_1634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_9_fu_1638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln235_fu_2240_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal mul_ln1270_fu_271_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1273_fu_2245_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_fu_271_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1270_2_fu_272_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1270_2_fu_272_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1270_4_fu_273_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1270_4_fu_273_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1270_6_fu_274_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1270_6_fu_274_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1270_3_fu_275_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1270_3_fu_275_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1270_7_fu_276_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1270_7_fu_276_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1270_5_fu_277_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1270_5_fu_277_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1270_1_fu_278_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1270_1_fu_278_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1270_8_fu_279_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1270_8_fu_279_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1270_9_fu_280_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1270_9_fu_280_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln1651_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1651_1_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_1_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_fu_748_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_1_fu_768_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1651_2_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_2_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1651_3_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_3_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1651_4_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_4_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_3_fu_808_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_4_fu_828_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1651_5_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_5_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1651_6_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_6_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1651_7_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_7_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_6_fu_866_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_7_fu_882_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1651_8_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_8_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_max_V_fu_900_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1348_fu_908_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1348_1_fu_911_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_fu_915_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_44_fu_921_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_45_fu_929_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1348_2_fu_955_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_1_fu_958_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_46_fu_964_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_47_fu_972_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_1_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1348_3_fu_998_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_2_fu_1001_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_48_fu_1007_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_49_fu_1015_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_2_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1348_4_fu_1041_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_3_fu_1044_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_50_fu_1050_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_51_fu_1058_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_3_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1348_5_fu_1084_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_4_fu_1087_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_52_fu_1093_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_53_fu_1101_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_4_fu_1109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1348_6_fu_1127_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_5_fu_1130_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_54_fu_1136_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_55_fu_1144_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_5_fu_1152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1348_7_fu_1170_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_6_fu_1173_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_56_fu_1179_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_57_fu_1187_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_6_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1348_8_fu_1213_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_7_fu_1216_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_58_fu_1222_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_59_fu_1230_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_7_fu_1238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1348_9_fu_1256_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_8_fu_1259_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_60_fu_1265_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_61_fu_1273_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_8_fu_1281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1348_10_fu_1299_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_fu_1302_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_62_fu_1308_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_63_fu_1316_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_9_fu_1324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_fu_1342_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_1350_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_1_fu_986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_1_fu_992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_1_fu_1368_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_fu_1376_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_2_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_2_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_2_fu_1394_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_fu_1402_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_3_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_3_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_3_fu_1420_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_fu_1428_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_4_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_4_fu_1121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_4_fu_1446_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_1454_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_5_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_5_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_5_fu_1472_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_1480_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_6_fu_1201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_6_fu_1207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_6_fu_1498_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_1506_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_7_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_7_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_7_fu_1524_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_1532_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_8_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_8_fu_1293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_8_fu_1550_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_1558_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_9_fu_1330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_9_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_9_fu_1576_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_1584_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln43_1_fu_1653_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_fu_1650_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_10_fu_1656_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_fu_1670_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_64_fu_1662_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_11_fu_1678_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_3_fu_1697_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_2_fu_1694_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_11_fu_1700_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_40_fu_1714_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_65_fu_1706_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_12_fu_1722_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_2_fu_1686_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_2_fu_1730_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln813_4_fu_1742_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln813_3_fu_1738_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_10_fu_1746_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_13_fu_1760_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_66_fu_1752_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_67_fu_1766_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_12_fu_1774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln896_1_fu_1786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_13_fu_1798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_12_fu_1780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_14_fu_1804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_fu_1792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_1_fu_1810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln302_fu_1816_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln350_fu_1824_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_5_fu_1843_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_4_fu_1840_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_14_fu_1846_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_44_fu_1860_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_68_fu_1852_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_13_fu_1868_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_7_fu_1887_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_6_fu_1884_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_15_fu_1890_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_46_fu_1904_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_69_fu_1896_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_14_fu_1912_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_5_fu_1876_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_5_fu_1920_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln813_6_fu_1932_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln813_5_fu_1928_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_11_fu_1936_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_17_fu_1950_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_70_fu_1942_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_71_fu_1956_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_13_fu_1964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln896_2_fu_1976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_15_fu_1988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_15_fu_1970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_16_fu_1994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_fu_1982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_2_fu_2000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln302_5_fu_2006_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln350_1_fu_2014_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_6_fu_1832_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_6_fu_2022_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln813_fu_2030_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln813_1_fu_2034_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_12_fu_2038_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_19_fu_2052_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_72_fu_2044_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_73_fu_2058_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_10_fu_2066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_16_fu_2072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_10_fu_2078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_10_fu_2084_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_9_cast40_fu_1646_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_8_cast39_fu_1642_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_20_fu_2100_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_74_fu_2112_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln856_fu_2106_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln813_2_fu_2131_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln813_1_fu_2134_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_13_fu_2137_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln813_fu_2128_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_22_fu_2151_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_75_fu_2143_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_76_fu_2156_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln895_11_fu_2164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln896_fu_2176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_11_fu_2188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_18_fu_2170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln302_12_fu_2194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_2206_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_fu_2182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_fu_2200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln302_8_fu_2216_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln350_2_fu_2224_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_43_fu_2232_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1270_fu_271_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_8_fu_279_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_9_fu_280_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_7_fu_276_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_6_fu_274_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_5_fu_277_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_4_fu_273_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_3_fu_275_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_2_fu_272_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_1_fu_278_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal mul_ln1270_1_fu_278_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_2_fu_272_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_3_fu_275_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_4_fu_273_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_5_fu_277_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_6_fu_274_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_7_fu_276_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_8_fu_279_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_9_fu_280_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1270_fu_271_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component kernel_wrapper_mul_18s_17ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s_exp_tabcdu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address6 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address7 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s_invert_ceu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table_U : component kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s_exp_tabcdu
    generic map (
        DataWidth => 17,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table_address0,
        ce0 => exp_table_ce0,
        q0 => exp_table_q0,
        address1 => exp_table_address1,
        ce1 => exp_table_ce1,
        q1 => exp_table_q1,
        address2 => exp_table_address2,
        ce2 => exp_table_ce2,
        q2 => exp_table_q2,
        address3 => exp_table_address3,
        ce3 => exp_table_ce3,
        q3 => exp_table_q3,
        address4 => exp_table_address4,
        ce4 => exp_table_ce4,
        q4 => exp_table_q4,
        address5 => exp_table_address5,
        ce5 => exp_table_ce5,
        q5 => exp_table_q5,
        address6 => exp_table_address6,
        ce6 => exp_table_ce6,
        q6 => exp_table_q6,
        address7 => exp_table_address7,
        ce7 => exp_table_ce7,
        q7 => exp_table_q7);

    invert_table_U : component kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s_invert_ceu
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table_address0,
        ce0 => invert_table_ce0,
        q0 => invert_table_q0);

    mul_18s_17ns_26_1_1_U1848 : component kernel_wrapper_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1270_fu_271_p0,
        din1 => mul_ln1270_fu_271_p1,
        dout => mul_ln1270_fu_271_p2);

    mul_18s_17ns_26_1_1_U1849 : component kernel_wrapper_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1270_2_fu_272_p0,
        din1 => mul_ln1270_2_fu_272_p1,
        dout => mul_ln1270_2_fu_272_p2);

    mul_18s_17ns_26_1_1_U1850 : component kernel_wrapper_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1270_4_fu_273_p0,
        din1 => mul_ln1270_4_fu_273_p1,
        dout => mul_ln1270_4_fu_273_p2);

    mul_18s_17ns_26_1_1_U1851 : component kernel_wrapper_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1270_6_fu_274_p0,
        din1 => mul_ln1270_6_fu_274_p1,
        dout => mul_ln1270_6_fu_274_p2);

    mul_18s_17ns_26_1_1_U1852 : component kernel_wrapper_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1270_3_fu_275_p0,
        din1 => mul_ln1270_3_fu_275_p1,
        dout => mul_ln1270_3_fu_275_p2);

    mul_18s_17ns_26_1_1_U1853 : component kernel_wrapper_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1270_7_fu_276_p0,
        din1 => mul_ln1270_7_fu_276_p1,
        dout => mul_ln1270_7_fu_276_p2);

    mul_18s_17ns_26_1_1_U1854 : component kernel_wrapper_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1270_5_fu_277_p0,
        din1 => mul_ln1270_5_fu_277_p1,
        dout => mul_ln1270_5_fu_277_p2);

    mul_18s_17ns_26_1_1_U1855 : component kernel_wrapper_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1270_1_fu_278_p0,
        din1 => mul_ln1270_1_fu_278_p1,
        dout => mul_ln1270_1_fu_278_p2);

    mul_18s_17ns_26_1_1_U1856 : component kernel_wrapper_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1270_8_fu_279_p0,
        din1 => mul_ln1270_8_fu_279_p1,
        dout => mul_ln1270_8_fu_279_p2);

    mul_18s_17ns_26_1_1_U1857 : component kernel_wrapper_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1270_9_fu_280_p0,
        din1 => mul_ln1270_9_fu_280_p1,
        dout => mul_ln1270_9_fu_280_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                data_array_V_1_reg_2433 <= layer23_out_dout(31 downto 16);
                data_array_V_2_reg_2438 <= layer23_out_dout(47 downto 32);
                data_array_V_3_reg_2443 <= layer23_out_dout(63 downto 48);
                data_array_V_4_reg_2448 <= layer23_out_dout(79 downto 64);
                data_array_V_5_reg_2453 <= layer23_out_dout(95 downto 80);
                data_array_V_6_reg_2458 <= layer23_out_dout(111 downto 96);
                data_array_V_7_reg_2463 <= layer23_out_dout(127 downto 112);
                data_array_V_8_reg_2419 <= layer23_out_dout(143 downto 128);
                data_array_V_9_reg_2426 <= layer23_out_dout(159 downto 144);
                data_array_V_reg_2414 <= data_array_V_fu_642_p1;
                select_ln65_2_reg_2468 <= select_ln65_2_fu_788_p3;
                select_ln65_5_reg_2474 <= select_ln65_5_fu_848_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                exp_res_V_10_reg_2576 <= exp_table_q6;
                exp_res_V_11_reg_2582 <= exp_table_q5;
                exp_res_V_12_reg_2588 <= exp_table_q4;
                exp_res_V_13_reg_2594 <= exp_table_q3;
                exp_res_V_14_reg_2600 <= exp_table_q2;
                exp_res_V_15_reg_2606 <= exp_table_q1;
                exp_res_V_16_reg_2612 <= exp_table_q0;
                exp_res_V_reg_2570 <= exp_table_q7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                exp_res_V_17_reg_2628 <= exp_table_q1;
                exp_res_V_18_reg_2633 <= exp_table_q0;
                lhs_7_reg_2638 <= lhs_7_fu_2092_p3;
                rhs_7_reg_2644 <= rhs_7_fu_2120_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                out_pack_data_reg_2655 <= mul_ln1270_fu_271_p2(25 downto 10);
                tmp_10_reg_2670 <= mul_ln1270_7_fu_276_p2(25 downto 10);
                tmp_11_reg_2675 <= mul_ln1270_6_fu_274_p2(25 downto 10);
                tmp_12_reg_2680 <= mul_ln1270_5_fu_277_p2(25 downto 10);
                tmp_13_reg_2685 <= mul_ln1270_4_fu_273_p2(25 downto 10);
                tmp_14_reg_2690 <= mul_ln1270_3_fu_275_p2(25 downto 10);
                tmp_15_reg_2695 <= mul_ln1270_2_fu_272_p2(25 downto 10);
                tmp_16_reg_2700 <= mul_ln1270_1_fu_278_p2(25 downto 10);
                trunc_ln1_reg_2660 <= mul_ln1270_8_fu_279_p2(25 downto 10);
                trunc_ln818_1_reg_2665 <= mul_ln1270_9_fu_280_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                p_Result_21_reg_2485 <= p_Result_21_fu_1386_p3;
                p_Result_22_reg_2490 <= p_Result_22_fu_1412_p3;
                p_Result_23_reg_2495 <= p_Result_23_fu_1438_p3;
                p_Result_24_reg_2500 <= p_Result_24_fu_1464_p3;
                p_Result_25_reg_2505 <= p_Result_25_fu_1490_p3;
                p_Result_26_reg_2510 <= p_Result_26_fu_1516_p3;
                p_Result_27_reg_2515 <= p_Result_27_fu_1542_p3;
                p_Result_28_reg_2520 <= p_Result_28_fu_1568_p3;
                p_Result_29_reg_2525 <= p_Result_29_fu_1594_p3;
                p_Result_s_reg_2480 <= p_Result_s_fu_1360_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, layer23_out_empty_n, output_r_full_n, ap_CS_fsm_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((layer23_out_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((output_r_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln856_fu_2106_p2 <= std_logic_vector(unsigned(exp_table_q0) + unsigned(exp_table_q1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, layer23_out_empty_n)
    begin
        if (((layer23_out_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(output_r_full_n)
    begin
        if ((output_r_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, layer23_out_empty_n)
    begin
                ap_block_state1 <= ((layer23_out_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, output_r_full_n, ap_CS_fsm_state8)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((output_r_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(output_r_full_n, ap_CS_fsm_state8)
    begin
        if (((output_r_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    data_array_V_1_fu_666_p4 <= layer23_out_dout(31 downto 16);
    data_array_V_2_fu_676_p4 <= layer23_out_dout(47 downto 32);
    data_array_V_3_fu_686_p4 <= layer23_out_dout(63 downto 48);
    data_array_V_4_fu_696_p4 <= layer23_out_dout(79 downto 64);
    data_array_V_5_fu_706_p4 <= layer23_out_dout(95 downto 80);
    data_array_V_6_fu_716_p4 <= layer23_out_dout(111 downto 96);
    data_array_V_7_fu_726_p4 <= layer23_out_dout(127 downto 112);
    data_array_V_fu_642_p1 <= layer23_out_dout(16 - 1 downto 0);
    exp_res_V_8_cast39_fu_1642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q1),18));
    exp_res_V_9_cast40_fu_1646_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q0),18));

    exp_table_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, zext_ln225_7_fu_1630_p1, zext_ln225_9_fu_1638_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            exp_table_address0 <= zext_ln225_9_fu_1638_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_address0 <= zext_ln225_7_fu_1630_p1(10 - 1 downto 0);
        else 
            exp_table_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, zext_ln225_6_fu_1626_p1, zext_ln225_8_fu_1634_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            exp_table_address1 <= zext_ln225_8_fu_1634_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_address1 <= zext_ln225_6_fu_1626_p1(10 - 1 downto 0);
        else 
            exp_table_address1 <= "XXXXXXXXXX";
        end if; 
    end process;

    exp_table_address2 <= zext_ln225_5_fu_1622_p1(10 - 1 downto 0);
    exp_table_address3 <= zext_ln225_4_fu_1618_p1(10 - 1 downto 0);
    exp_table_address4 <= zext_ln225_3_fu_1614_p1(10 - 1 downto 0);
    exp_table_address5 <= zext_ln225_2_fu_1610_p1(10 - 1 downto 0);
    exp_table_address6 <= zext_ln225_1_fu_1606_p1(10 - 1 downto 0);
    exp_table_address7 <= zext_ln225_fu_1602_p1(10 - 1 downto 0);

    exp_table_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            exp_table_ce0 <= ap_const_logic_1;
        else 
            exp_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            exp_table_ce1 <= ap_const_logic_1;
        else 
            exp_table_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce2_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce2 <= ap_const_logic_1;
        else 
            exp_table_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce3_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce3 <= ap_const_logic_1;
        else 
            exp_table_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce4_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce4 <= ap_const_logic_1;
        else 
            exp_table_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce5_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce5 <= ap_const_logic_1;
        else 
            exp_table_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce6_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce6 <= ap_const_logic_1;
        else 
            exp_table_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce7_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce7 <= ap_const_logic_1;
        else 
            exp_table_ce7 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1651_1_fu_756_p2 <= "1" when (signed(data_array_V_2_fu_676_p4) < signed(data_array_V_3_fu_686_p4)) else "0";
    icmp_ln1651_2_fu_776_p2 <= "1" when (signed(select_ln65_fu_748_p3) < signed(select_ln65_1_fu_768_p3)) else "0";
    icmp_ln1651_3_fu_796_p2 <= "1" when (signed(data_array_V_4_fu_696_p4) < signed(data_array_V_5_fu_706_p4)) else "0";
    icmp_ln1651_4_fu_816_p2 <= "1" when (signed(data_array_V_6_fu_716_p4) < signed(data_array_V_7_fu_726_p4)) else "0";
    icmp_ln1651_5_fu_836_p2 <= "1" when (signed(select_ln65_3_fu_808_p3) < signed(select_ln65_4_fu_828_p3)) else "0";
    icmp_ln1651_6_fu_856_p2 <= "1" when (signed(select_ln65_2_reg_2468) < signed(select_ln65_5_reg_2474)) else "0";
    icmp_ln1651_7_fu_872_p2 <= "1" when (signed(data_array_V_8_reg_2419) < signed(data_array_V_9_reg_2426)) else "0";
    icmp_ln1651_8_fu_888_p2 <= "1" when (signed(select_ln65_6_fu_866_p3) < signed(select_ln65_7_fu_882_p3)) else "0";
    icmp_ln1651_fu_736_p2 <= "1" when (signed(data_array_V_fu_642_p1) < signed(data_array_V_1_fu_666_p4)) else "0";
    invert_table_address0 <= zext_ln235_fu_2240_p1(10 - 1 downto 0);

    invert_table_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            invert_table_ce0 <= ap_const_logic_1;
        else 
            invert_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer23_out_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, layer23_out_empty_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            layer23_out_blk_n <= layer23_out_empty_n;
        else 
            layer23_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer23_out_read_assign_proc : process(ap_start, ap_CS_fsm_state1, layer23_out_empty_n)
    begin
        if ((not(((layer23_out_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer23_out_read <= ap_const_logic_1;
        else 
            layer23_out_read <= ap_const_logic_0;
        end if; 
    end process;

    lhs_2_fu_1686_p3 <= 
        select_ln346_11_fu_1678_p3 when (p_Result_64_fu_1662_p3(0) = '1') else 
        p_Val2_10_fu_1656_p2;
    lhs_5_fu_1876_p3 <= 
        select_ln346_13_fu_1868_p3 when (p_Result_68_fu_1852_p3(0) = '1') else 
        p_Val2_14_fu_1846_p2;
    lhs_6_fu_1832_p3 <= 
        select_ln302_fu_1816_p3 when (or_ln302_1_fu_1810_p2(0) = '1') else 
        select_ln350_fu_1824_p3;
    lhs_7_fu_2092_p3 <= 
        select_ln346_10_fu_2084_p3 when (xor_ln302_10_fu_2078_p2(0) = '1') else 
        p_Val2_19_fu_2052_p2;
    mul_ln1270_1_fu_278_p0 <= sext_ln1273_fu_2245_p1(18 - 1 downto 0);
    mul_ln1270_1_fu_278_p1 <= mul_ln1270_1_fu_278_p10(17 - 1 downto 0);
    mul_ln1270_1_fu_278_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_10_reg_2576),26));
    mul_ln1270_2_fu_272_p0 <= sext_ln1273_fu_2245_p1(18 - 1 downto 0);
    mul_ln1270_2_fu_272_p1 <= mul_ln1270_2_fu_272_p10(17 - 1 downto 0);
    mul_ln1270_2_fu_272_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_11_reg_2582),26));
    mul_ln1270_3_fu_275_p0 <= sext_ln1273_fu_2245_p1(18 - 1 downto 0);
    mul_ln1270_3_fu_275_p1 <= mul_ln1270_3_fu_275_p10(17 - 1 downto 0);
    mul_ln1270_3_fu_275_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_12_reg_2588),26));
    mul_ln1270_4_fu_273_p0 <= sext_ln1273_fu_2245_p1(18 - 1 downto 0);
    mul_ln1270_4_fu_273_p1 <= mul_ln1270_4_fu_273_p10(17 - 1 downto 0);
    mul_ln1270_4_fu_273_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_13_reg_2594),26));
    mul_ln1270_5_fu_277_p0 <= sext_ln1273_fu_2245_p1(18 - 1 downto 0);
    mul_ln1270_5_fu_277_p1 <= mul_ln1270_5_fu_277_p10(17 - 1 downto 0);
    mul_ln1270_5_fu_277_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_14_reg_2600),26));
    mul_ln1270_6_fu_274_p0 <= sext_ln1273_fu_2245_p1(18 - 1 downto 0);
    mul_ln1270_6_fu_274_p1 <= mul_ln1270_6_fu_274_p10(17 - 1 downto 0);
    mul_ln1270_6_fu_274_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_15_reg_2606),26));
    mul_ln1270_7_fu_276_p0 <= sext_ln1273_fu_2245_p1(18 - 1 downto 0);
    mul_ln1270_7_fu_276_p1 <= mul_ln1270_7_fu_276_p10(17 - 1 downto 0);
    mul_ln1270_7_fu_276_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_16_reg_2612),26));
    mul_ln1270_8_fu_279_p0 <= sext_ln1273_fu_2245_p1(18 - 1 downto 0);
    mul_ln1270_8_fu_279_p1 <= mul_ln1270_8_fu_279_p10(17 - 1 downto 0);
    mul_ln1270_8_fu_279_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_17_reg_2628),26));
    mul_ln1270_9_fu_280_p0 <= sext_ln1273_fu_2245_p1(18 - 1 downto 0);
    mul_ln1270_9_fu_280_p1 <= mul_ln1270_9_fu_280_p10(17 - 1 downto 0);
    mul_ln1270_9_fu_280_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_18_reg_2633),26));
    mul_ln1270_fu_271_p0 <= sext_ln1273_fu_2245_p1(18 - 1 downto 0);
    mul_ln1270_fu_271_p1 <= mul_ln1270_fu_271_p10(17 - 1 downto 0);
    mul_ln1270_fu_271_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_reg_2570),26));
    or_ln302_1_fu_1810_p2 <= (xor_ln302_14_fu_1804_p2 or overflow_12_fu_1780_p2);
    or_ln302_2_fu_2000_p2 <= (xor_ln302_16_fu_1994_p2 or overflow_15_fu_1970_p2);
    or_ln302_fu_2200_p2 <= (xor_ln302_12_fu_2194_p2 or overflow_18_fu_2170_p2);

    output_r_blk_n_assign_proc : process(output_r_full_n, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_r_blk_n <= output_r_full_n;
        else 
            output_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    output_r_din <= (((((((((trunc_ln818_1_reg_2665 & trunc_ln1_reg_2660) & tmp_10_reg_2670) & tmp_11_reg_2675) & tmp_12_reg_2680) & tmp_13_reg_2685) & tmp_14_reg_2690) & tmp_15_reg_2695) & tmp_16_reg_2700) & out_pack_data_reg_2655);

    output_r_write_assign_proc : process(output_r_full_n, ap_CS_fsm_state8)
    begin
        if (((output_r_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_r_write <= ap_const_logic_1;
        else 
            output_r_write <= ap_const_logic_0;
        end if; 
    end process;

    overflow_12_fu_1780_p2 <= (xor_ln895_12_fu_1774_p2 and p_Result_67_fu_1766_p3);
    overflow_15_fu_1970_p2 <= (xor_ln895_13_fu_1964_p2 and p_Result_71_fu_1956_p3);
    overflow_16_fu_2072_p2 <= (xor_ln895_10_fu_2066_p2 and p_Result_73_fu_2058_p3);
    overflow_18_fu_2170_p2 <= (xor_ln895_11_fu_2164_p2 and p_Result_76_fu_2156_p3);
    overflow_1_fu_986_p2 <= (xor_ln895_1_fu_980_p2 and p_Result_47_fu_972_p3);
    overflow_2_fu_1029_p2 <= (xor_ln895_2_fu_1023_p2 and p_Result_49_fu_1015_p3);
    overflow_3_fu_1072_p2 <= (xor_ln895_3_fu_1066_p2 and p_Result_51_fu_1058_p3);
    overflow_4_fu_1115_p2 <= (xor_ln895_4_fu_1109_p2 and p_Result_53_fu_1101_p3);
    overflow_5_fu_1158_p2 <= (xor_ln895_5_fu_1152_p2 and p_Result_55_fu_1144_p3);
    overflow_6_fu_1201_p2 <= (xor_ln895_6_fu_1195_p2 and p_Result_57_fu_1187_p3);
    overflow_7_fu_1244_p2 <= (xor_ln895_7_fu_1238_p2 and p_Result_59_fu_1230_p3);
    overflow_8_fu_1287_p2 <= (xor_ln895_8_fu_1281_p2 and p_Result_61_fu_1273_p3);
    overflow_9_fu_1330_p2 <= (xor_ln895_9_fu_1324_p2 and p_Result_63_fu_1316_p3);
    overflow_fu_943_p2 <= (xor_ln895_fu_937_p2 and p_Result_45_fu_929_p3);
    p_Result_21_fu_1386_p3 <= 
        select_ln346_1_fu_1368_p3 when (xor_ln302_1_fu_992_p2(0) = '1') else 
        tmp_1_fu_1376_p4;
    p_Result_22_fu_1412_p3 <= 
        select_ln346_2_fu_1394_p3 when (xor_ln302_2_fu_1035_p2(0) = '1') else 
        tmp_2_fu_1402_p4;
    p_Result_23_fu_1438_p3 <= 
        select_ln346_3_fu_1420_p3 when (xor_ln302_3_fu_1078_p2(0) = '1') else 
        tmp_3_fu_1428_p4;
    p_Result_24_fu_1464_p3 <= 
        select_ln346_4_fu_1446_p3 when (xor_ln302_4_fu_1121_p2(0) = '1') else 
        tmp_4_fu_1454_p4;
    p_Result_25_fu_1490_p3 <= 
        select_ln346_5_fu_1472_p3 when (xor_ln302_5_fu_1164_p2(0) = '1') else 
        tmp_5_fu_1480_p4;
    p_Result_26_fu_1516_p3 <= 
        select_ln346_6_fu_1498_p3 when (xor_ln302_6_fu_1207_p2(0) = '1') else 
        tmp_6_fu_1506_p4;
    p_Result_27_fu_1542_p3 <= 
        select_ln346_7_fu_1524_p3 when (xor_ln302_7_fu_1250_p2(0) = '1') else 
        tmp_7_fu_1532_p4;
    p_Result_28_fu_1568_p3 <= 
        select_ln346_8_fu_1550_p3 when (xor_ln302_8_fu_1293_p2(0) = '1') else 
        tmp_8_fu_1558_p4;
    p_Result_29_fu_1594_p3 <= 
        select_ln346_9_fu_1576_p3 when (xor_ln302_9_fu_1336_p2(0) = '1') else 
        tmp_9_fu_1584_p4;
    p_Result_43_fu_2232_p3 <= 
        select_ln302_8_fu_2216_p3 when (or_ln302_fu_2200_p2(0) = '1') else 
        select_ln350_2_fu_2224_p3;
    p_Result_44_fu_921_p3 <= ret_V_fu_915_p2(16 downto 16);
    p_Result_45_fu_929_p3 <= ret_V_fu_915_p2(15 downto 15);
    p_Result_46_fu_964_p3 <= ret_V_1_fu_958_p2(16 downto 16);
    p_Result_47_fu_972_p3 <= ret_V_1_fu_958_p2(15 downto 15);
    p_Result_48_fu_1007_p3 <= ret_V_2_fu_1001_p2(16 downto 16);
    p_Result_49_fu_1015_p3 <= ret_V_2_fu_1001_p2(15 downto 15);
    p_Result_50_fu_1050_p3 <= ret_V_3_fu_1044_p2(16 downto 16);
    p_Result_51_fu_1058_p3 <= ret_V_3_fu_1044_p2(15 downto 15);
    p_Result_52_fu_1093_p3 <= ret_V_4_fu_1087_p2(16 downto 16);
    p_Result_53_fu_1101_p3 <= ret_V_4_fu_1087_p2(15 downto 15);
    p_Result_54_fu_1136_p3 <= ret_V_5_fu_1130_p2(16 downto 16);
    p_Result_55_fu_1144_p3 <= ret_V_5_fu_1130_p2(15 downto 15);
    p_Result_56_fu_1179_p3 <= ret_V_6_fu_1173_p2(16 downto 16);
    p_Result_57_fu_1187_p3 <= ret_V_6_fu_1173_p2(15 downto 15);
    p_Result_58_fu_1222_p3 <= ret_V_7_fu_1216_p2(16 downto 16);
    p_Result_59_fu_1230_p3 <= ret_V_7_fu_1216_p2(15 downto 15);
    p_Result_60_fu_1265_p3 <= ret_V_8_fu_1259_p2(16 downto 16);
    p_Result_61_fu_1273_p3 <= ret_V_8_fu_1259_p2(15 downto 15);
    p_Result_62_fu_1308_p3 <= ret_V_9_fu_1302_p2(16 downto 16);
    p_Result_63_fu_1316_p3 <= ret_V_9_fu_1302_p2(15 downto 15);
    p_Result_64_fu_1662_p3 <= p_Val2_10_fu_1656_p2(17 downto 17);
    p_Result_65_fu_1706_p3 <= p_Val2_11_fu_1700_p2(17 downto 17);
    p_Result_66_fu_1752_p3 <= ret_V_10_fu_1746_p2(18 downto 18);
    p_Result_67_fu_1766_p3 <= p_Val2_13_fu_1760_p2(17 downto 17);
    p_Result_68_fu_1852_p3 <= p_Val2_14_fu_1846_p2(17 downto 17);
    p_Result_69_fu_1896_p3 <= p_Val2_15_fu_1890_p2(17 downto 17);
    p_Result_70_fu_1942_p3 <= ret_V_11_fu_1936_p2(18 downto 18);
    p_Result_71_fu_1956_p3 <= p_Val2_17_fu_1950_p2(17 downto 17);
    p_Result_72_fu_2044_p3 <= ret_V_12_fu_2038_p2(18 downto 18);
    p_Result_73_fu_2058_p3 <= p_Val2_19_fu_2052_p2(17 downto 17);
    p_Result_74_fu_2112_p3 <= p_Val2_20_fu_2100_p2(17 downto 17);
    p_Result_75_fu_2143_p3 <= ret_V_13_fu_2137_p2(18 downto 18);
    p_Result_76_fu_2156_p3 <= p_Val2_22_fu_2151_p2(17 downto 17);
    p_Result_s_fu_1360_p3 <= 
        select_ln346_fu_1342_p3 when (xor_ln302_fu_949_p2(0) = '1') else 
        tmp_fu_1350_p4;
    p_Val2_10_fu_1656_p2 <= std_logic_vector(unsigned(zext_ln43_1_fu_1653_p1) + unsigned(zext_ln43_fu_1650_p1));
    p_Val2_11_fu_1700_p2 <= std_logic_vector(unsigned(zext_ln43_3_fu_1697_p1) + unsigned(zext_ln43_2_fu_1694_p1));
    p_Val2_13_fu_1760_p2 <= std_logic_vector(signed(rhs_2_fu_1730_p3) + signed(lhs_2_fu_1686_p3));
    p_Val2_14_fu_1846_p2 <= std_logic_vector(unsigned(zext_ln43_5_fu_1843_p1) + unsigned(zext_ln43_4_fu_1840_p1));
    p_Val2_15_fu_1890_p2 <= std_logic_vector(unsigned(zext_ln43_7_fu_1887_p1) + unsigned(zext_ln43_6_fu_1884_p1));
    p_Val2_17_fu_1950_p2 <= std_logic_vector(signed(rhs_5_fu_1920_p3) + signed(lhs_5_fu_1876_p3));
    p_Val2_19_fu_2052_p2 <= std_logic_vector(signed(lhs_6_fu_1832_p3) + signed(rhs_6_fu_2022_p3));
    p_Val2_20_fu_2100_p2 <= std_logic_vector(unsigned(exp_res_V_9_cast40_fu_1646_p1) + unsigned(exp_res_V_8_cast39_fu_1642_p1));
    p_Val2_22_fu_2151_p2 <= std_logic_vector(signed(lhs_7_reg_2638) + signed(zext_ln813_fu_2128_p1));
    ret_V_10_fu_1746_p2 <= std_logic_vector(signed(sext_ln813_4_fu_1742_p1) + signed(sext_ln813_3_fu_1738_p1));
    ret_V_11_fu_1936_p2 <= std_logic_vector(signed(sext_ln813_6_fu_1932_p1) + signed(sext_ln813_5_fu_1928_p1));
    ret_V_12_fu_2038_p2 <= std_logic_vector(signed(sext_ln813_fu_2030_p1) + signed(sext_ln813_1_fu_2034_p1));
    ret_V_13_fu_2137_p2 <= std_logic_vector(signed(sext_ln813_2_fu_2131_p1) + signed(zext_ln813_1_fu_2134_p1));
    ret_V_1_fu_958_p2 <= std_logic_vector(signed(sext_ln1348_2_fu_955_p1) - signed(sext_ln1348_1_fu_911_p1));
    ret_V_2_fu_1001_p2 <= std_logic_vector(signed(sext_ln1348_3_fu_998_p1) - signed(sext_ln1348_1_fu_911_p1));
    ret_V_3_fu_1044_p2 <= std_logic_vector(signed(sext_ln1348_4_fu_1041_p1) - signed(sext_ln1348_1_fu_911_p1));
    ret_V_4_fu_1087_p2 <= std_logic_vector(signed(sext_ln1348_5_fu_1084_p1) - signed(sext_ln1348_1_fu_911_p1));
    ret_V_5_fu_1130_p2 <= std_logic_vector(signed(sext_ln1348_6_fu_1127_p1) - signed(sext_ln1348_1_fu_911_p1));
    ret_V_6_fu_1173_p2 <= std_logic_vector(signed(sext_ln1348_7_fu_1170_p1) - signed(sext_ln1348_1_fu_911_p1));
    ret_V_7_fu_1216_p2 <= std_logic_vector(signed(sext_ln1348_8_fu_1213_p1) - signed(sext_ln1348_1_fu_911_p1));
    ret_V_8_fu_1259_p2 <= std_logic_vector(signed(sext_ln1348_9_fu_1256_p1) - signed(sext_ln1348_1_fu_911_p1));
    ret_V_9_fu_1302_p2 <= std_logic_vector(signed(sext_ln1348_10_fu_1299_p1) - signed(sext_ln1348_1_fu_911_p1));
    ret_V_fu_915_p2 <= std_logic_vector(signed(sext_ln1348_fu_908_p1) - signed(sext_ln1348_1_fu_911_p1));
    rhs_2_fu_1730_p3 <= 
        select_ln346_12_fu_1722_p3 when (p_Result_65_fu_1706_p3(0) = '1') else 
        p_Val2_11_fu_1700_p2;
    rhs_5_fu_1920_p3 <= 
        select_ln346_14_fu_1912_p3 when (p_Result_69_fu_1896_p3(0) = '1') else 
        p_Val2_15_fu_1890_p2;
    rhs_6_fu_2022_p3 <= 
        select_ln302_5_fu_2006_p3 when (or_ln302_2_fu_2000_p2(0) = '1') else 
        select_ln350_1_fu_2014_p3;
    rhs_7_fu_2120_p3 <= 
        ap_const_lv17_1FFFF when (p_Result_74_fu_2112_p3(0) = '1') else 
        add_ln856_fu_2106_p2;
    select_ln302_5_fu_2006_p3 <= 
        ap_const_lv18_1FFFF when (xor_ln302_15_fu_1988_p2(0) = '1') else 
        p_Val2_17_fu_1950_p2;
    select_ln302_8_fu_2216_p3 <= 
        ap_const_lv10_1FF when (xor_ln302_11_fu_2188_p2(0) = '1') else 
        tmp_s_fu_2206_p4;
    select_ln302_fu_1816_p3 <= 
        ap_const_lv18_1FFFF when (xor_ln302_13_fu_1798_p2(0) = '1') else 
        p_Val2_13_fu_1760_p2;
    select_ln346_10_fu_2084_p3 <= 
        ap_const_lv18_1FFFF when (overflow_16_fu_2072_p2(0) = '1') else 
        ap_const_lv18_20000;
    select_ln346_11_fu_1678_p3 <= 
        ap_const_lv18_1FFFF when (tmp_38_fu_1670_p3(0) = '1') else 
        ap_const_lv18_20000;
    select_ln346_12_fu_1722_p3 <= 
        ap_const_lv18_1FFFF when (tmp_40_fu_1714_p3(0) = '1') else 
        ap_const_lv18_20000;
    select_ln346_13_fu_1868_p3 <= 
        ap_const_lv18_1FFFF when (tmp_44_fu_1860_p3(0) = '1') else 
        ap_const_lv18_20000;
    select_ln346_14_fu_1912_p3 <= 
        ap_const_lv18_1FFFF when (tmp_46_fu_1904_p3(0) = '1') else 
        ap_const_lv18_20000;
    select_ln346_1_fu_1368_p3 <= 
        ap_const_lv10_1FF when (overflow_1_fu_986_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln346_2_fu_1394_p3 <= 
        ap_const_lv10_1FF when (overflow_2_fu_1029_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln346_3_fu_1420_p3 <= 
        ap_const_lv10_1FF when (overflow_3_fu_1072_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln346_4_fu_1446_p3 <= 
        ap_const_lv10_1FF when (overflow_4_fu_1115_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln346_5_fu_1472_p3 <= 
        ap_const_lv10_1FF when (overflow_5_fu_1158_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln346_6_fu_1498_p3 <= 
        ap_const_lv10_1FF when (overflow_6_fu_1201_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln346_7_fu_1524_p3 <= 
        ap_const_lv10_1FF when (overflow_7_fu_1244_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln346_8_fu_1550_p3 <= 
        ap_const_lv10_1FF when (overflow_8_fu_1287_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln346_9_fu_1576_p3 <= 
        ap_const_lv10_1FF when (overflow_9_fu_1330_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln346_fu_1342_p3 <= 
        ap_const_lv10_1FF when (overflow_fu_943_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln350_1_fu_2014_p3 <= 
        ap_const_lv18_20000 when (underflow_2_fu_1982_p2(0) = '1') else 
        p_Val2_17_fu_1950_p2;
    select_ln350_2_fu_2224_p3 <= 
        ap_const_lv10_200 when (underflow_fu_2182_p2(0) = '1') else 
        tmp_s_fu_2206_p4;
    select_ln350_fu_1824_p3 <= 
        ap_const_lv18_20000 when (underflow_1_fu_1792_p2(0) = '1') else 
        p_Val2_13_fu_1760_p2;
    select_ln65_1_fu_768_p3 <= 
        data_array_V_2_fu_676_p4 when (xor_ln1651_1_fu_762_p2(0) = '1') else 
        data_array_V_3_fu_686_p4;
    select_ln65_2_fu_788_p3 <= 
        select_ln65_fu_748_p3 when (xor_ln1651_2_fu_782_p2(0) = '1') else 
        select_ln65_1_fu_768_p3;
    select_ln65_3_fu_808_p3 <= 
        data_array_V_4_fu_696_p4 when (xor_ln1651_3_fu_802_p2(0) = '1') else 
        data_array_V_5_fu_706_p4;
    select_ln65_4_fu_828_p3 <= 
        data_array_V_6_fu_716_p4 when (xor_ln1651_4_fu_822_p2(0) = '1') else 
        data_array_V_7_fu_726_p4;
    select_ln65_5_fu_848_p3 <= 
        select_ln65_3_fu_808_p3 when (xor_ln1651_5_fu_842_p2(0) = '1') else 
        select_ln65_4_fu_828_p3;
    select_ln65_6_fu_866_p3 <= 
        select_ln65_2_reg_2468 when (xor_ln1651_6_fu_860_p2(0) = '1') else 
        select_ln65_5_reg_2474;
    select_ln65_7_fu_882_p3 <= 
        data_array_V_8_reg_2419 when (xor_ln1651_7_fu_876_p2(0) = '1') else 
        data_array_V_9_reg_2426;
    select_ln65_fu_748_p3 <= 
        data_array_V_fu_642_p1 when (xor_ln1651_fu_742_p2(0) = '1') else 
        data_array_V_1_fu_666_p4;
        sext_ln1273_fu_2245_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(invert_table_q0),26));

        sext_ln1348_10_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_9_reg_2426),17));

        sext_ln1348_1_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_fu_900_p3),17));

        sext_ln1348_2_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_1_reg_2433),17));

        sext_ln1348_3_fu_998_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_2_reg_2438),17));

        sext_ln1348_4_fu_1041_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_3_reg_2443),17));

        sext_ln1348_5_fu_1084_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_4_reg_2448),17));

        sext_ln1348_6_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_5_reg_2453),17));

        sext_ln1348_7_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_6_reg_2458),17));

        sext_ln1348_8_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_7_reg_2463),17));

        sext_ln1348_9_fu_1256_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_8_reg_2419),17));

        sext_ln1348_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_reg_2414),17));

        sext_ln813_1_fu_2034_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_6_fu_2022_p3),19));

        sext_ln813_2_fu_2131_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_7_reg_2638),19));

        sext_ln813_3_fu_1738_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_2_fu_1686_p3),19));

        sext_ln813_4_fu_1742_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_2_fu_1730_p3),19));

        sext_ln813_5_fu_1928_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_5_fu_1876_p3),19));

        sext_ln813_6_fu_1932_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_5_fu_1920_p3),19));

        sext_ln813_fu_2030_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_6_fu_1832_p3),19));

    tmp_1_fu_1376_p4 <= ret_V_1_fu_958_p2(15 downto 6);
    tmp_2_fu_1402_p4 <= ret_V_2_fu_1001_p2(15 downto 6);
    tmp_38_fu_1670_p3 <= p_Val2_10_fu_1656_p2(17 downto 17);
    tmp_3_fu_1428_p4 <= ret_V_3_fu_1044_p2(15 downto 6);
    tmp_40_fu_1714_p3 <= p_Val2_11_fu_1700_p2(17 downto 17);
    tmp_44_fu_1860_p3 <= p_Val2_14_fu_1846_p2(17 downto 17);
    tmp_46_fu_1904_p3 <= p_Val2_15_fu_1890_p2(17 downto 17);
    tmp_4_fu_1454_p4 <= ret_V_4_fu_1087_p2(15 downto 6);
    tmp_5_fu_1480_p4 <= ret_V_5_fu_1130_p2(15 downto 6);
    tmp_6_fu_1506_p4 <= ret_V_6_fu_1173_p2(15 downto 6);
    tmp_7_fu_1532_p4 <= ret_V_7_fu_1216_p2(15 downto 6);
    tmp_8_fu_1558_p4 <= ret_V_8_fu_1259_p2(15 downto 6);
    tmp_9_fu_1584_p4 <= ret_V_9_fu_1302_p2(15 downto 6);
    tmp_fu_1350_p4 <= ret_V_fu_915_p2(15 downto 6);
    tmp_s_fu_2206_p4 <= p_Val2_22_fu_2151_p2(17 downto 8);
    underflow_1_fu_1792_p2 <= (xor_ln896_1_fu_1786_p2 and p_Result_66_fu_1752_p3);
    underflow_2_fu_1982_p2 <= (xor_ln896_2_fu_1976_p2 and p_Result_70_fu_1942_p3);
    underflow_fu_2182_p2 <= (xor_ln896_fu_2176_p2 and p_Result_75_fu_2143_p3);
    x_max_V_fu_900_p3 <= 
        select_ln65_6_fu_866_p3 when (xor_ln1651_8_fu_894_p2(0) = '1') else 
        select_ln65_7_fu_882_p3;
    xor_ln1651_1_fu_762_p2 <= (icmp_ln1651_1_fu_756_p2 xor ap_const_lv1_1);
    xor_ln1651_2_fu_782_p2 <= (icmp_ln1651_2_fu_776_p2 xor ap_const_lv1_1);
    xor_ln1651_3_fu_802_p2 <= (icmp_ln1651_3_fu_796_p2 xor ap_const_lv1_1);
    xor_ln1651_4_fu_822_p2 <= (icmp_ln1651_4_fu_816_p2 xor ap_const_lv1_1);
    xor_ln1651_5_fu_842_p2 <= (icmp_ln1651_5_fu_836_p2 xor ap_const_lv1_1);
    xor_ln1651_6_fu_860_p2 <= (icmp_ln1651_6_fu_856_p2 xor ap_const_lv1_1);
    xor_ln1651_7_fu_876_p2 <= (icmp_ln1651_7_fu_872_p2 xor ap_const_lv1_1);
    xor_ln1651_8_fu_894_p2 <= (icmp_ln1651_8_fu_888_p2 xor ap_const_lv1_1);
    xor_ln1651_fu_742_p2 <= (icmp_ln1651_fu_736_p2 xor ap_const_lv1_1);
    xor_ln302_10_fu_2078_p2 <= (p_Result_73_fu_2058_p3 xor p_Result_72_fu_2044_p3);
    xor_ln302_11_fu_2188_p2 <= (p_Result_76_fu_2156_p3 xor p_Result_75_fu_2143_p3);
    xor_ln302_12_fu_2194_p2 <= (xor_ln302_11_fu_2188_p2 xor ap_const_lv1_1);
    xor_ln302_13_fu_1798_p2 <= (p_Result_67_fu_1766_p3 xor p_Result_66_fu_1752_p3);
    xor_ln302_14_fu_1804_p2 <= (xor_ln302_13_fu_1798_p2 xor ap_const_lv1_1);
    xor_ln302_15_fu_1988_p2 <= (p_Result_71_fu_1956_p3 xor p_Result_70_fu_1942_p3);
    xor_ln302_16_fu_1994_p2 <= (xor_ln302_15_fu_1988_p2 xor ap_const_lv1_1);
    xor_ln302_1_fu_992_p2 <= (p_Result_47_fu_972_p3 xor p_Result_46_fu_964_p3);
    xor_ln302_2_fu_1035_p2 <= (p_Result_49_fu_1015_p3 xor p_Result_48_fu_1007_p3);
    xor_ln302_3_fu_1078_p2 <= (p_Result_51_fu_1058_p3 xor p_Result_50_fu_1050_p3);
    xor_ln302_4_fu_1121_p2 <= (p_Result_53_fu_1101_p3 xor p_Result_52_fu_1093_p3);
    xor_ln302_5_fu_1164_p2 <= (p_Result_55_fu_1144_p3 xor p_Result_54_fu_1136_p3);
    xor_ln302_6_fu_1207_p2 <= (p_Result_57_fu_1187_p3 xor p_Result_56_fu_1179_p3);
    xor_ln302_7_fu_1250_p2 <= (p_Result_59_fu_1230_p3 xor p_Result_58_fu_1222_p3);
    xor_ln302_8_fu_1293_p2 <= (p_Result_61_fu_1273_p3 xor p_Result_60_fu_1265_p3);
    xor_ln302_9_fu_1336_p2 <= (p_Result_63_fu_1316_p3 xor p_Result_62_fu_1308_p3);
    xor_ln302_fu_949_p2 <= (p_Result_45_fu_929_p3 xor p_Result_44_fu_921_p3);
    xor_ln895_10_fu_2066_p2 <= (p_Result_72_fu_2044_p3 xor ap_const_lv1_1);
    xor_ln895_11_fu_2164_p2 <= (p_Result_75_fu_2143_p3 xor ap_const_lv1_1);
    xor_ln895_12_fu_1774_p2 <= (p_Result_66_fu_1752_p3 xor ap_const_lv1_1);
    xor_ln895_13_fu_1964_p2 <= (p_Result_70_fu_1942_p3 xor ap_const_lv1_1);
    xor_ln895_1_fu_980_p2 <= (p_Result_46_fu_964_p3 xor ap_const_lv1_1);
    xor_ln895_2_fu_1023_p2 <= (p_Result_48_fu_1007_p3 xor ap_const_lv1_1);
    xor_ln895_3_fu_1066_p2 <= (p_Result_50_fu_1050_p3 xor ap_const_lv1_1);
    xor_ln895_4_fu_1109_p2 <= (p_Result_52_fu_1093_p3 xor ap_const_lv1_1);
    xor_ln895_5_fu_1152_p2 <= (p_Result_54_fu_1136_p3 xor ap_const_lv1_1);
    xor_ln895_6_fu_1195_p2 <= (p_Result_56_fu_1179_p3 xor ap_const_lv1_1);
    xor_ln895_7_fu_1238_p2 <= (p_Result_58_fu_1222_p3 xor ap_const_lv1_1);
    xor_ln895_8_fu_1281_p2 <= (p_Result_60_fu_1265_p3 xor ap_const_lv1_1);
    xor_ln895_9_fu_1324_p2 <= (p_Result_62_fu_1308_p3 xor ap_const_lv1_1);
    xor_ln895_fu_937_p2 <= (p_Result_44_fu_921_p3 xor ap_const_lv1_1);
    xor_ln896_1_fu_1786_p2 <= (p_Result_67_fu_1766_p3 xor ap_const_lv1_1);
    xor_ln896_2_fu_1976_p2 <= (p_Result_71_fu_1956_p3 xor ap_const_lv1_1);
    xor_ln896_fu_2176_p2 <= (p_Result_76_fu_2156_p3 xor ap_const_lv1_1);
    zext_ln225_1_fu_1606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_21_reg_2485),64));
    zext_ln225_2_fu_1610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_22_reg_2490),64));
    zext_ln225_3_fu_1614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_23_reg_2495),64));
    zext_ln225_4_fu_1618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_24_reg_2500),64));
    zext_ln225_5_fu_1622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_25_reg_2505),64));
    zext_ln225_6_fu_1626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_26_reg_2510),64));
    zext_ln225_7_fu_1630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_27_reg_2515),64));
    zext_ln225_8_fu_1634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_28_reg_2520),64));
    zext_ln225_9_fu_1638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_29_reg_2525),64));
    zext_ln225_fu_1602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_reg_2480),64));
    zext_ln235_fu_2240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_43_fu_2232_p3),64));
    zext_ln43_1_fu_1653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_10_reg_2576),18));
    zext_ln43_2_fu_1694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_11_reg_2582),18));
    zext_ln43_3_fu_1697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_12_reg_2588),18));
    zext_ln43_4_fu_1840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_13_reg_2594),18));
    zext_ln43_5_fu_1843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_14_reg_2600),18));
    zext_ln43_6_fu_1884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_15_reg_2606),18));
    zext_ln43_7_fu_1887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_16_reg_2612),18));
    zext_ln43_fu_1650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_reg_2570),18));
    zext_ln813_1_fu_2134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_7_reg_2644),19));
    zext_ln813_fu_2128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_7_reg_2644),18));
end behav;
